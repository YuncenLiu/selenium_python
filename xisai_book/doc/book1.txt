/Users/xiang/xiang/study/Python/selenium_python/venv/bin/python /Users/xiang/xiang/study/Python/selenium_python/xisai_book/xisai_book_main.py
/Users/xiang/xiang/study/Python/selenium_python/venv/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:359: UserWarning: find_elements_by_tag_name is deprecated. Please use find_elements(by=By.TAG_NAME, value=name) instead
  warnings.warn("find_elements_by_tag_name is deprecated. Please use find_elements(by=By.TAG_NAME, value=name) instead")
无须点击关闭提示按钮！
此时已经登录成功啦
['第1章', '绪论']
1.0 内容介绍
已学习
工业化不仅造就了高速发展的生产力，更重要的是造就了一支规模宏大的人才队伍，其主要力量是工程师。信息化是一场比工业化更加深刻和更加广泛的社会变革，它要求在产品或服务的生产过程中实现管理流程、组织机构、生产技能和生产工具的变革。在这场变革中，一定要造就一支规模更为宏大的人才队伍，其核心力量是系统分析师。这是因为，作为信息化主体的计算机信息系统工程是一项复杂的社会和技术工程，无论是内容、规模、深度和广度，还是技术、工具、业务和流程，都在不断地发展和创新。
在信息系统建设中，系统分析师起着十分重要的作用，他们的知识水平和工作能力决定了系统的成败。系统分析师是中国软件产业的脊梁，是各行业信息化的精英。有了他们，信息化这只大船就能乘风破浪，驶向光辉的未来。

1.1 信息与信息系统
信息是一种客观事物，它与材料、能源一样，都是社会的基础资源。但是，理性认识信息却只有几十年的历史。1948年，美国科学家香农（C. E. Shannon）在对通信理论深入研究的基础上，提出了信息的概念，创立了信息理论。此后，人们对信息的研究迅速增加，形成了一个新的学科――信息论。至今，信息论已发展成为一个内涵非常丰富的学科，与控制论和系统论并称为现代科学的“三论”。计算机技术和网络技术的迅速发展和普及，更加重了“三论”在现代科学技术中的地位。同时，信息论为计算机技术和网络技术的发展提供了方向上的指导，为信息化提供了较好的理论支撑。
1.1.0 内容介绍
已学习
信息是一种客观事物，它与材料、能源一样，都是社会的基础资源。但是，理性认识信息却只有几十年的历史。1948年，美国科学家香农（C. E. Shannon）在对通信理论深入研究的基础上，提出了信息的概念，创立了信息理论。此后，人们对信息的研究迅速增加，形成了一个新的学科――信息论。至今，信息论已发展成为一个内涵非常丰富的学科，与控制论和系统论并称为现代科学的“三论”。计算机技术和网络技术的迅速发展和普及，更加重了“三论”在现代科学技术中的地位。同时，信息论为计算机技术和网络技术的发展提供了方向上的指导，为信息化提供了较好的理论支撑。
1.1.1 信息的基本概念
已学习
1.1.1 信息的基本概念
香农认为，信息是不确定性的减少。由此可知，信息就是确定性的增加。香农不但给出了信息的定义，还给出了信息的定量描述，并确定了信息量的单位为比特（bit）。一比特的信息量，在变异度为2的最简单情况下，就是能消除非此即彼的不确定性所需要的信息量。这里的“变异度”是指事物的变化状态空间为2，例如，大和小、高和低、快和慢等。
香农将热力学中的“熵”引入信息论。在热力学中，熵是系统无序程度的度量，而信息与熵正好相反，信息是系统有序程度的度量，表现为负熵，计算公式如下：

http://www.educity.cn/article_images/2014-03-03/115b5b39-f392-4db5-b679-30ff4f2a9142.png
式中代表n个状态中的第i个状态，代表出现第i个状态的概率，H(x)代表用以消除系统不确定性所需的信息量，即以比特为单位的负熵。
http://www.educity.cn/article_images/2014-01-15/a70be7d3-7d9b-487b-936d-86a8263840a0.jpg
http://www.educity.cn/article_images/2014-01-15/52bf614b-e5c0-4a7b-8580-6139f6d78e1c.jpg
1. 信息的特征
香农关于信息的定义揭示了信息的本质，同时，人们通过深入研究，发现信息还具有很多其他的特征，列举如下：
（1）客观性。信息是客观事物在人脑中的反映，而反映的对象则有主观和客观的区别，因此，信息可分为主观信息（例如，决策、指令和计划等）和客观信息（例如，国际形势、经济发展和一年四季等）。主观信息必然要转化成客观信息，例如，决策和计划等主观信息要转化成实际行动。因此，信息具有客观性。
（2）普遍性。物质决定精神，物质的普遍性决定了信息的普遍存在。
（3）无限性。客观世界是无限的，反映客观世界的信息自然也是无限的。无限性可分为两个层次，一是无限的事物产生无限的信息，即信息的总量是无限的；二是每个具体事物或有限个事物的集合所能产生的信息也可以是无限的。
（4）动态性。信息是随着时间的变化而变化的。
（5）相对性。不同的认识主体从同一事物中获取的信息及信息量可能是不同的。
（6）依附性。信息的依附性可以从两个方面来理解，一方面，信息是客观世界的反映，任何信息必然由客观事物所产生，不存在无源的信息；另一方面，任何信息都要依附于一定的载体而存在，需要有物质的承担者，信息不能完全脱离物质而独立存在。
（7）变换性。信息通过处理可以实现变换或转换，使其形式和内容发生变化，以适应特定的需要。
（8）传递性。信息在时间上的传递就是存储，在空间上的传递就是转移或扩散。
（9）层次性。客观世界是分层次的，反映它的信息也是分层次的。
（10）系统性。信息可以表示为一种集合，不同类别的信息可以形成不同的整体。因此，可以形成与现实世界相对应的信息系统。
（11）转化性。信息的产生不能没有物质，信息的传递不能没有能量，但有效地使用信息，可以将信息转化为物质或能量。
另外，根据各行业信息的不同，信息还可以具有安全性和及时性等特性，而且，信息应用的场合不同，其侧重面也不一样。例如，对于金融信息而言，其最重要的特性是安全性；而对于市场信息而言，其最重要的特性是及时性。
2. 信息的功能
信息在人类认识世界和改造世界的过程中，与物质、能源一样，发挥着十分重要的作用。其主要功能如下：
（1）为认识世界提供依据。人们认识世界，首先要获取认识对象的有关信息，并通过对这些信息的加工获得有关知识，从而形成正确的认识。
（2）为改造世界提供指导。人们认识世界的目的是改造世界，而改造世界就必须有正确的观念作指导。这些观念包括活动的计划、环境分析、结果的预测和发展变化的对策等，这些都离不开信息的指导。
（3）为有序的建立提供保证。人们所有活动的目的都是使得客观世界变得更加有序。这种有序至少要包括两种情况，一是使得本来有序的客观世界得到改善，变得更加有序；二是打破原来的有序，建立一种新的有序。无论哪种情况，都需要有信息的保证。
（4）为资源开发提供条件。人类社会的生存和发展要建立在资源之上，所有这些资源可分为两类，即有形资源和无形资源。有形资源包括物质和能量，物质供给材料、能量供给动力，是人类发展的基础；无形资源主要是信息资源，信息供给智力，是人类发展的精神力量。无论是开发有形资源还是无形资源，都需要信息。
（5）为知识生产提供材料。生产是人类生存和发展的基础和前提，既包括物质产品的生产，也包括精神产品的生产，其中知识的生产是精神产品生产的主要内容，而信息则为知识的生产提供材料。
3. 两个相关概念
与信息相关的概念主要有两个，分别是数据和知识。
（1）信息与数据。信息是经过加工后的数据，数据是信息生成的材料，是信息的存在形式和状态，即信息是被解释或被理解的数据。例如，有一条数据库记录“张啸杰，男，19，大二，……”，其中，“张啸杰”、“男”、“19”和“大二”等都是数据，但它们组合起来是关系数据库中的一条记录，四者之间是有逻辑关系的，从谓词演算的角度来看，就容易理解为“一个名叫张啸杰的男生，他今年19岁，上大学二年级”。至此，四者就成为信息了。
（2）信息与知识。知识是经过加工的信息。例如，有两条数据库记录，分别为“张啸杰，湖南永州”和“李国杰，湖南邵阳”，其语义为“张啸杰是湖南永州人”和“李国杰是湖南邵阳人”，这是信息。如果得出“张啸杰和李国杰都是湖南人”就是知识了。
1.1.2 系统及相关理论
已学习
1.1.2 系统及相关理论
系统是由相互联系、相互依赖、相互作用的事物或过程组成的具有整体功能和综合行为的统一体。在日常生活中，经常使用“系统”的概念，例如，经济领域中的商业系统和金融系统，自然界中的水利系统和生态系统等。从数学角度来看，系统是一个集合，是由许多相互作用、相互依存的事物（集合元素），为了达到某个目标组成的集合。研究系统的一般理论和方法，称为系统论。系统是系统论的主要研究对象，而要研究系统，首先应该认识系统的特性。
1. 系统的特性
系统的总体特性是系统整体上的属性，系统的这些特性通常是很难提前预测的，只有当所有子系统和元素被整合形成完全的系统之后才能表现出来。系统的特性可以从整体性、层次性、目的性、稳定性、突变性、自组织性、相似性、相关性和环境适应性等方面表现出来。
（1）整体性。系统是一个整体，元素是为了达到一定的目的，按照一定的原则，有序地排列起来组成系统，从而产生出系统的特定功能。
（2）层次性。系统是由多个元素组成的，系统和元素是相对的概念。元素是相对于它所处的系统而言的，系统是从它包含元素的角度来看的，如果研究问题的角度变一变，系统就成为更高一级系统的元素，也称为子系统。
（3）目的性。任何一个系统都有一定的目的或目标。
（4）稳定性。在外界作用下的开放系统有一定的自我稳定能力，能够在一定范围内进行自我调节，从而保持和恢复原来的有序状态，以及原有的结构和功能。
（5）突变性。突变性是指系统通过失稳，从一种状态进入另一种状态的一种剧烈变化过程，它是系统质变的一种基本形式。
（6）自组织性。开放系统在系统内外因素的作用下，自发组织起来，使系统从无序到有序，从低级有序到高级有序。
（7）相似性。系统具有同构和同态的性质，体现在系统结构、存在方式和演化过程具有共同性。系统具有相似性，根本原因在于世界的物质统一性。
（8）相关性。元素是可分的和相互联系的，组成系统的元素必须有明确的边界，可以与别的元素区分开来。另外，元素之间是相互联系的，不是哲学上所说的普遍联系那种联系，而是实实在在的、具体的联系。
（9）环境适应性。系统总处在一定环境中，与环境发生相互作用。系统和环境之间总是在发生着一定的物质和能量交换。
2. 系统论的任务
系统论的任务不仅在于认识系统的特点和规律，更重要的还在于利用这些特点和规律去控制、管理、改造或创造系统，使得系统的存在、发展更符合人们的需要。也就是说，研究系统的目的在于调整系统结构，协调各元素的关系，使系统达到优化目标。
（1）改变人类的思维方式。系统论的出现，使人类的思维方式发生了深刻的变化。以往研究问题，一般是将事物分解成若干部分，抽象出最简单的因素，然后再以部分的性质去说明复杂事物。这是传统的分析方法，这种方法的着眼点在局部或元素，遵循的是单项因果决定论，虽然这是数百年来在特定范围内行之有效、人们最熟悉的思维方法，但是它不能如实地说明事物的整体性，不能反映事物之间的联系和相互作用，它只适应认识较为简单的事物，而不胜任于对复杂问题的研究。在现代科学的整体化和高度综合化发展的趋势下，在人类面临许多规模巨大、关系复杂、参数众多的复杂问题面前，就显得无能为力了。而系统分析方法能够站在较高的层次上认识问题，从而做到高屋建瓴、综观全局，为解决复杂问题提供了有效的思维方式。所以系统论，连同控制论、信息论等其他科学一起，为人类认识世界提供新的思路和新的方法，从而促进各门科学的发展。
（2）提供科学的理论和方法。系统论反映了现代科学发展的趋势和现代社会化大生产的特点，以及现代社会生活的复杂性，所以它的理论和方法能够得到广泛的应用。系统论不仅为现代科学的发展提供了理论和方法，而且也为解决现代社会中的政治、经济、军事、科学和文化等领域的各种复杂问题提供了方法论的基础，系统观念已经渗透到每个领域。
（3）形成统一的系统科学体系。当前，系统论发展的趋势和方向是朝着建立统一的系统科学体系的目标前进。一般系统论创始人贝塔朗菲（L. Bertalanffy），将他的系统论分为两个部分，分别是狭义系统论和广义系统论。狭义系统论着重对系统本身进行分析与研究，广义系统论则是对一类相关的系统科学原理进行分析与研究，其中包括系统科学、系统技术和系统哲三方面的内容。
3. 系统理论
系统理论是20世纪人类取得的最伟大的科学成就之一，它为人们提供了一套崭新的科学思维方式，同时，还为人们提供了优化的工作方法和定量的数学工具。由于研究的视角不同，研究者背景不同等原因，系统论还没有形成一个统一的理论体系，还是处在不停的演变和发展过程中，综合各种研究成果，大致包括以下八个基本理论：
（1）系统的整体性原理。系统是由多个元素组成的，而且这些元素之间按一定的方式相互联系、相互作用产生了系统的整体性。凡系统都有整体的形态、整体的结构、整体的边界、整体的特性、整体的行为、整体的功能、整体的空间占有和时间展开。
（2）系统的整体突变原理（非加和原理）。系统是由若干元素按一定方式相互联系形成的有机整体，从而产生出它的元素和元素的总和所没有的新性质。这种性质只能在系统中表现，不等于各个元素的性质和功能的简单相加。
（3）系统的层次性原理。由于系统组成元素在数量和质量以及结合方式等方面存在差异，使得系统组织在地位与作用、结构与功能上表现出等级秩序，形成具有质的差异的系统等级。
（4）系统的开放性原理（开放系统）。系统总是从普遍联系的客观世界中相对地划分出来的，与外部世界有着密切的联系，既有元素与外部的直接联系，也有系统整体与外部的联系，系统具有不断与外界环境交换物质、能量、信息的性质和功能。
（5）系统的目的性原理。系统与环境的相互作用中，在一定范围内其发展变化不受或少受条件变化的影响，坚持表现出某种趋向预先确定的状态的特性。
（6）系统环境互塑共生原理。系统对环境有两种相反的作用和输出，一种是积极的、有利的，称之为功能，另一种是消极的、不利的，称之为污染；环境对系统也有两种相反的作用和输入，一种是积极的、有利于系统发展的资源，另一种是消极的、不利于系统发展的压力。
（7）系统的秩序原理。系统的形成和发展全过程中都存在有序和无序两种形态特征，有序性是系统内部和内外之间有规则、确定的相互联系，无序性是系统内部和内外之间无规则、不确定的关系。
（8）系统的生命周期原理（演化原理）。系统有一个从产生到发展，直至最终消亡的不断演化过程。当具备一定条件后，一个系统从内外不分到内外有别，系统在与环境相互作用过程中不断发展，最终因为内外因素的作用，导致系统发生病变、消亡。
4. 信息系统
简单地说，信息系统就是输入数据，通过加工处理，产生信息的系统。面向管理是信息系统的显着特点，以计算机为基础的信息系统可以定义为，结合管理理论和方法，应用信息技术解决管理问题，为管理决策提供支持的系统。管理模型、信息处理模型和系统实现条件三者的结合，产生信息系统，如图1-1所示。

http://www.educity.cn/article_images/2014-01-15/03487094-d808-4be2-9302-cb78f071771e.jpg
图1-1  信息系统
管理模型指系统服务对象领域的专门知识，以及分析和处理该领域问题的模型，也称为对象的处理模型；信息处理模型指系统处理信息的结构和方法。管理模型中的理论和分析方法，在信息处理模型中转化为信息获取、存储、传输、加工和使用的规则；系统实现条件指可供应用的计算机技术和通信技术、从事对象领域工作的人员，以及对这些资源的控制与融合。
1.1.3 系统工程方法论
已学习
1.1.3 系统工程方法论
系统工程是从整体出发合理开发、设计、实施和运用系统科学的工程技术。它根据总体协调的需要，综合应用自然科学和社会科学中有关的思想、理论和方法，利用计算机作为工具，对系统的结构、元素、信息和反馈等进行分析，以达到最优规划、最优设计、最优管理和最优控制的目的。
系统工程方法论是指运用系统工程研究问题的一套程序化的工作方法和策略，也可以理解成为了达到预期目标，运用系统工程思想和技术解决问题的工作程序或步骤。系统工程方法论是在综合应用运筹学、控制论、信息论、管理科学、心理学、经济学和计算机科学等有关学科的理论和方法的基础上形成的科学思想和方法，是用于解决复杂系统问题的一套工作步骤、方法、工具和技术。
在长期的发展过程中，系统工程专家在从事系统工程的研究和应用中，逐渐形成了具有各自专业特点的工作方法和步骤，它们是系统工程方法论的真正基础。在各种系统工程方法论中，最具代表性的是霍尔（A. D. Hall）的三维结构方法体系和切克兰德（P. B. Checkland）的软系统方法论。
1. 霍尔三维结构
霍尔三维结构也称为霍尔系统工程，是为解决大型复杂系统的规划、组织和管理问题提供的一种统一的思想方法，将系统工程整个活动过程分为前后紧密衔接的七个阶段和七个步骤，同时还考虑了为完成这些阶段和步骤所需要的各种专业知识和技能。这样，就形成了由时间维、逻辑维和知识维所组成的三维空间结构，如图8-2所示。


http://www.educity.cn/article_images/2014-01-15/6244be33-dfd9-4d98-aea0-eebf88ca8045.jpg
图8-2  霍尔三维结构
（1）逻辑维。逻辑维即解决问题的逻辑过程。运用系统工程方法解决某一大型工程项目时，一般可分为问题确定、目标确定、系统综合、系统分析、方案选择、评价决策和实施计划七个步骤。问题确定步骤通过全面收集有关资料和数据，弄清问题的历史、现状及发展趋势；目标确定步骤提出解决问题所要达到的目标，制订评价方案的标准和指标，以便对方案进行评价；系统综合步骤按照问题的性质和预期目标，形成一组可供选择的系统方案；系统分析步骤对可能入选的方案进一步说明其性质和特点，以及与整个系统的相互关系。为了对众多备选方案进行分析比较，往往要通过构造模型，将这些方案与系统的评价目标联系起来。方案选择步骤也就是系统优化阶段，即在一定的限制条件下，选择最优方案或确定方案的优劣顺序；评价决策步骤由决策者根据全面要求，最后确定一个或几个方案来试行；实施计划步骤将最后选定方案付诸实施。
（2）时间维。时间维即是工作进程。对于一个具体的工作项目，从系统规划起一直到更新为止，全部过程可分为规划阶段、制订方案、研制阶段、生产阶段、安装阶段、运行阶段和更新阶段。
（3）知识维。知识维即是专业科学知识。系统工程除了要求为完成上述各步骤、各阶段所需的某些共性知识外，还需要其他学科的知识和各种专业技术，霍尔将这些知识分为工程、医药、建筑、商业、法律、管理、社会科学和艺术等。各类系统工程，都需要使用相应的专业基础知识。
2. 软系统方法论
霍尔三维结构方法论的特点是强调明确目标，认为对任何系统的分析都必须满足其目标的需求，其核心内容是模型化和最优化。霍尔认为，现实问题都可以归结为工程问题，从而可以应用定量分析方法求得最优的系统方案。
在20世纪60年代期间，系统工程主要用来寻求各种战术问题的最优策略，或用来组织与管理大型工程建设项目，最适合应用霍尔的三维结构方法论。这是由于工程项目的任务一般比较明确，问题的结构一般是清楚的，属于结构化问题。可以充分运用自然科学和工程技术方面的知识和经验，有的项目甚至可以进行试验。属于这类性质的问题，都可以应用数学模型进行描述，用优化方法求出模型的最优解。但是，从20世纪70年代开始，系统工程面临的问题与人的因素越来越密切，与社会、政治、经济和生态等因素纠缠在一起。这些因素多而且复杂，属于非结构化问题。这类问题本身的定义并不清楚，难以用逻辑严谨的数学模型进行描述。因此，不少系统工程学者对霍尔三维结构方法论提出了修正意见，其中，切克兰德提出的一种系统工程方法论，受到了系统工程学界的重视。
切克兰德将霍尔系统工程方法论称为硬系统方法论，他认为，完全按照解决工程问题的思路来解决社会问题和软科学问题，将遇到很多困难，至于什么是“最优”，由于人们的立场、利益各异，判断价值观不同，很难简单地取得一致的看法；因此，“可行”和“满意”的概念逐渐代替了“最优”的概念。还有一些问题只有通过概念模型或意识模型的讨论和分析后，才使得人们对问题的实质有进一步的认识，经过不断磋商，再经过不断地反馈，逐步弄清问题，得出满意的可行解。切克兰德根据以上思路提出他的方法论，称为软系统方法论。软系统方法论主要按照以下五个步骤来分析问题：
（1）问题现状说明。说明现状的目的是为了改善现状，弄清问题本身的基本定义。
（2）理清问题的关联因素。搞清楚与改善有关的各种因素及其相互关系。
（3）建立概念模型。运用系统的观点和系统思想描述系统活动的现状，可用结构模型或流程图来表达。
（4）比较。根据数学模型的理论和方法，改进所建的概念模型，然后将概念模型和现状进行比较，逐步得出满意的可行解。
（5）实施。对改善问题予以实施。
软系统方法论的核心不是最优化，而是进行比较，强调找出可行、满意的结果。比较的过程要组织讨论，听取各方面有关人员的意见，为了寻求可行、满意的结果，不断地进行多次反馈。因此，它是一个学习的过程。
1.1.4 信息系统工程
已学习
1.1.4 信息系统工程
信息系统工程是以系统工程的方法来实现信息系统建设的过程，它是用系统工程的原理、方法来指导信息系统建设与管理的一门工程技术学科。信息系统工程是系统工程的一个分支学科，因此，系统工程的原理、方法、技术和过程都适用于它。同时，信息系统与一般的系统相比，又有其自身的专业特征，这就决定了信息系统工程在研究方法上具有整体性，在技术应用上具有综合性，在工程管理上具有科学性。
1. 信息系统的生命周期
信息系统与其他事物一样，也要经历产生、发展、成熟和消亡的过程。将信息系统从产生到消亡的整个过程称为信息系统的生命周期。一般来说，信息系统的生命周期可分为五个阶段，分别是系统规划、系统分析、系统设计、系统实现、系统运行与评价。
（1）系统规划。信息系统规划是系统建设的起始阶段，其作用是指明信息系统在企业经营战略中的作用和地位，指导信息系统的开发。一个比较完整的系统规划，应当包括信息系统的开发目标、总体架构、组织结构和管理流程、实施计划和技术规范等。有关系统规划的知识，将在第9章中详细介绍。
（2）系统分析。系统分析阶段的目标是为系统设计阶段提供系统的逻辑模型，主要任务是在可行性分析和总体规划的基础上，对现有系统进行进一步的详细调查，并整理成规范的文档资料；对企业的组织结构、业务流程和经营管理，以及信息需求及处理的现状和问题进行分析，为系统设计提供依据。有关系统分析的知识，将在第10章和第11章中详细介绍。
（3）系统设计。系统设计是信息系统开发过程的另一个重要阶段。在这一阶段中，要根据系统分析的结果，设计出信息系统的实施方案，从而为程序员提供清晰而完整的物理设计说明。有关系统设计的知识，将在第12章和第13章中详细介绍。
（4）系统实现。系统实现阶段的任务是将设计文档变成能在计算机上运行的软件系统。有关系统实现的知识，将在第14章中详细介绍。
（5）系统运行与评价。系统投入运行后，需要经常进行维护和评价，记录系统运行的情况，根据一定的规格对系统进行必要的修改，评价系统的工作质量和经济效益。有关系统运行与维护的知识，将在第15章中详细介绍。
2. 信息系统建设的原则
在信息系统建设的过程中，必须要遵守一系列原则，这是系统成功的必要条件。
（1）高层管理人员介入原则。信息系统建设是为企业战略目标服务的，而真正能够理解企业战略目标的人必然是那些企业高层管理人员，而那些身处某一部门的管理人员，或者是技术人员所无法准确理解的。因此，信息系统建设必须有企业高层管理人员的介入。当然，这里的“介入”有着其特定的含义，既可以是直接参加，也可以是决策或指导，还可以是在经济和人事等方面的支持。高层管理人员介入原则在现阶段已经逐步具体化，那就是CIO的出现。深度介入信息系统建设，是CIO的职责之所在。
（2）用户参与开发原则。用户参与开发原则主要包括三方面的含义。首先，用户是有确定的范围的，信息系统的使用者是核心用户，用户单位的领导是辅助用户或是外围用户；其次，用户（特别是核心用户）不应只参与某一阶段的开发，而应当是参与开发的全过程，即用户应当参与从信息系统规划和设计阶段，直到系统运行的整个过程；最后，用户应当深度参与系统开发。用户以什么身份参与开发是一个很重要的问题。一般说来，参与开发的用户人员，既要以甲方代表身份出现，又应成为真正的系统开发人员，与其他开发人员融为一体。
（3）自顶向下规划原则。在信息系统开发的过程中，经常会出现信息不一致的问题，这种现象的存在对于信息系统来说往往是致命的。实践表明，信息的不一致主要是因为缺乏总体规划所导致的。因此，坚持自顶向下规划原则，对于信息系统建设来说是至关重要的，它的一个主要目标是达到信息的一致性。
（4）工程化原则。在20世纪70年代，出现了世界范围内的软件危机。所谓软件危机，是指软件编制好以后，谁也无法保证它能够正确地运行，也就是软件的质量成了问题。经过探索，人们认识到，没有按照工程化原则进行软件开发是软件危机发生的根本原因。此后，发展了软件工程学科，在一定程度上解决了软件危机问题。信息系统也经历了与软件开发大致相同的经历。在信息系统发展的初期，人们也象软件开发初期一样，只要做出来就行，根本不管实现的过程。这时的信息系统，大都成了少数开发者的“专利”，系统可维护性和可扩展性都非常差。后来，系统工程等工程化方法被引入到信息系统开发过程之中，才使得问题得到了一定程度的解决。
另外，对于信息系统的开发，人们还从不同的角度提出了一系列原则，例如，创新性原则、整体性原则、发展性原则、经济性原则和先进性原则等。在实际的信息系统建设中，需要根据企业的实际情况，将这些原则具体落实。
1.2 系统分析师
信息系统的开发是一项复杂的系统工程，这是因为一个信息系统的建立，往往要投入大量的人力、物力和财力，同时需要大量的时间。在开发过程中，需要将系统中的各构成要素、组织结构、信息交换和反馈控制等有机地组织起来，以求得最佳的系统方案；信息系统的开发是一种创造性工作，这是因为任何一个信息系统的开发没有一成不变的规则可以遵循。一个成功的信息系统的开发，取决于很多因素，例如，具体的业务情况和环境、计算机技术的发展水平和开发人员的素质，以及开发人员之间的默契配合等。因此，一个信息系统的成功建设，是团队共同创造的结果。而在这个团队中，核心人物就是系统分析师。
1.2.0 内容介绍
已学习
信息系统的开发是一项复杂的系统工程，这是因为一个信息系统的建立，往往要投入大量的人力、物力和财力，同时需要大量的时间。在开发过程中，需要将系统中的各构成要素、组织结构、信息交换和反馈控制等有机地组织起来，以求得最佳的系统方案；信息系统的开发是一种创造性工作，这是因为任何一个信息系统的开发没有一成不变的规则可以遵循。一个成功的信息系统的开发，取决于很多因素，例如，具体的业务情况和环境、计算机技术的发展水平和开发人员的素质，以及开发人员之间的默契配合等。因此，一个信息系统的成功建设，是团队共同创造的结果。而在这个团队中，核心人物就是系统分析师。
1.2.1 系统分析师的角色定位
已学习
1.2.1 系统分析师的角色定位
当前，信息系统的建设已呈现出诸多新的特点，随着全球化和信息化的发展，企业的竞争环境变得极其复杂和多变。在这种形势下，信息系统与企业的主营业务不但紧密结合，而且逐步融合，其发展的结果是业务系统与信息系统融合在一起，成为一个系统，即业务信息系统。另一方面，随着Internet的普及和深度应用，特别是企业内联网和外联网的发展成熟，以及虚拟企业、电子商务、企业智能的应用，都对企业的信息系统建设提出了更高和更新的要求。在企业信息化进程中，特别是大型、复杂的信息系统建设中，要求有一支训练有素、经验丰富、能适应形势的系统开发队伍，而这支队伍的领军人物就是系统分析师。系统分析师的水平将影响到企业信息化，特别是信息系统开发和运行的质量，甚至关乎其成败。当然，在一支完善的信息系统开发队伍中，除了系统分析师外，还需要有业务专家、技术专家和其他辅助人员。
1. 信息化的人才结构
在企业信息化建设中，人才是起决定作用的因素，而人才又是可以分成不同层次、不同类型的，可以纵、横两种不同的角度分析企业信息化的人才结构。
从横的角度分析企业信息化的人才结构，可以分成两种类型，分别是IT（Information Technology，信息技术）人员和非IT人员。IT人员是一个不断扩展的群体，主要包括CIO（Chief Information Officer，首席信息官）、系统分析师、软件工程师、硬件工程师、通信工程师和数据工程师，以及系统操作员、网络维护员和数据管理员等。非IT人员是除IT人员之外的所有人员。需要说明的是，CIO和系统分析师既属于IT人员，又属于非IT人员，即企业管理人员。
从纵的角度分析企业信息化的人才结构，可以分成三个层次，这是一个可分为上层、中层和下层的金字塔形结构。最上层是决策层，位于塔尖上的人员是CEO、CFO和CIO等高层领导成员；中层是管理业务层，其组成人员主要有中层经理、系统分析师、经济师和会计师，以及计算机软硬件工程师、通信工程师和数据工程师等；下层是操作层，其人数最多，主要包括计算机和通信操作人员、维护人员和数据处理人员，以及分布在企业计划、财务、劳资等部门和基层单位的业务人员。
2. 系统分析师的角色
系统分析师在企业信息化和信息系统建设中处于重要地位，根据需要的不同，他们可能身兼多种角色。一名优秀的系统分析师既要是IT专家，又要是管理业务专家。
（1）IT专家。系统分析师首要的角色应是IT专家。信息系统具有极大的复杂性，仅从技术的角度来看，会用到复杂的软件、硬件、通信和网络技术；同时，由于IT产品和技术的更新换代速度极快，为保证信息系统开发成功并健康地运行，企业必须从应用的角度认识问题，对市场上层出不穷的新产品和新技术有正确的评估与选择。这种评估与选择不仅决定了系统成本的高低，更重要的是决定了系统性能的好坏。由于系统分析师是信息系统建设的领军人物，因此，熟谙信息技术，成为IT领域某一个或几个方面的专家，是对系统分析师的基本要求。
（2）管理业务专家。企业信息系统的建设是一个极为复杂的管理系统工程，它的成功不仅取决于信息技术的科学、合理应用，更为重要的是它还要涉及到企业的各项管理业务、员工素质、领导的认识能力和决策能力，以及其他的方方面面的因素。因此，系统分析师要有丰富的管理业务方面的知识和经验，才能领导好信息系统的建设工作，也就是说，在成为IT专家的同时，还要成为管理业务专家。
（3）IT人员和非IT人员的沟通者。从IT角度来看，IT人员和非IT人员之间存在着无形的隔阂。很多信息系统建设项目的失败，就是因为这种隔阂所造成的。由于系统分析师既是IT专家，又是管理业务专家，因此，他们可以作为IT人员和非IT人员的沟通桥梁。
（4）对外谈判者。现代社会的一个最大特点就是社会分工越来越细，专业化程度越来越高。现在已很少有企业自己组织队伍开发本企业的信息系统了，较普遍的做法是将开发工作委托给专业的开发组织，或在条件具备时直接购买商品化软件。这样，既可保证质量，又能降低成本，还可避免背上人员的包袱。但是，这样一来，就有一个如何与专业组织“讨价还价”的问题。此时，企业与专业组织在利益上处于对立地位，且二者在信息上又处于不对称地位，特别是在企业领导不懂信息技术的情况下，很可能使企业处于被动地位。这时，正是系统分析师发挥作用的时候，因为他们代表企业利益，同时又是IT专家，由他们与专业组织“过招”，就会得心应手。由系统分析师担任对外部专业组织的谈判代表，是比较恰当的选择。
（5）信息系统运行的指导者。信息系统的价值在于它的运行，只有能够健康、平稳、安全地运行的信息系统才是好的信息系统，而要做到这些，就必须做好系统的运行管理、评价和维护，以及系统升级、功能扩展和再工程。系统运行管理牵涉到技术、业务和人员，以及制度与规范建设等方面。所有这些问题都应是系统分析师所特别关注和思考的，也就是说，系统分析师应当成为信息系统运行的指导者，从纲领上和细节上两个方面指导信息系统的运行。
（6）信息系统建设项目的技术负责人。从建设单位的角度而言，企业信息化是“一把手工程”，也就是说，整个信息系统建设项目的负责人应由企业高层领导担任，而项目的技术负责人应该是系统分析师；从承建单位的角度而言，开发项目的负责人应由信息系统项目管理师担任，由系统分析师担任技术经理或研发经理。因为信息系统建设项目往往比较多地涉及具体技术问题和业务问题，这些问题的解决对整个项目的成败起着关键作用。
3. 系统分析师的素质要求
由系统分析师的角色定位可知，系统分析师应具有特殊的素质，这些素质可以归纳为以下几点：
（1）具有深入观察问题的能力、逻辑思维能力和归纳能力，善于透过现象认识问题的本质，善于从纷繁杂乱的事物中抽取出核心要素，既能“从树木中见森林”，也能“从森林中见树木”。
（2）具有丰富的开发实践经验，具有丰富的想象力和创造力，勇于接受新鲜事物，善于从经验的积累中进行创新，能够灵活运用系统科学的方法解决问题。
（3）具有较强的学习能力，熟练掌握系统开发的基本原理，精通信息系统开发的各种方法和技术，熟悉信息系统开发的各种环境和工具。
（4）具有很强的谈判和协商能力，以及人际交往能力，善于将自己对系统开发的认识介绍给用户，并说服用户接受自己的主张。
（5）具有很强的组织和管理能力，在大型系统的开发中，担任技术负责人角色，对工程师和程序员进行指导，确保项目成功。
（6）具有与他人合作共事的能力，能带领开发团队的所有成员，齐心协力、共同完成各自所承担的任务。
（7）具有一定的远见和前瞻能力。由于用户的业务环境不断变化，用户的需求也在不断变化，计算机软硬件技术的发展日新月异，因此，要求所开发的信息系统必须具有较强的适应能力。
总之，系统分析师应是一类有很强的事业心和使命感，并且能从实际出发解决具体问题，具有务实精神的杰出复合型人才。
4. CIO是系统分析师的代表
世界上许多系统都是金字塔型的层次结构，例如，在军队里，最下面是成千上万的士兵，中间是各级长官，最上面则是将军。在工程技术人员队伍中也有同样的结构，最下面也是最多的是技术员和描图员等，中间是专业工程师或设计师，最上面则是总工程师或总设计师。同时，许多“运筹于帷幄之中，决胜于千里之外”的将军，都是从士兵成长起来的；那些知识渊博、经验丰富的总工程师和总设计师往往出身于普通的技术员。
同样道理，系统分析师也应当处于一个金字塔结构之中。系统分析师是一个群体，他们处于金字塔的中上层。从信息化的角度来看，最上层是企业的CIO，而且，CIO本身也应该是系统分析师，就像总工程师本身是工程师，总会计师本身是会计师一样。因此，CIO是系统分析师的典型代表。
1.2.2 系统分析师的任务
已学习
1.2.2 系统分析师的任务
由系统分析师的角色定位和素质要求可以看出，他们在企业信息化的整个过程中，以及在信息系统开发的各个阶段，都担负着重要的任务，在信息系统工程中常处于重要的地位。
1. 信息化战略管理中的任务
系统分析师在信息化战略管理中，担负着重要任务，主要体现在以下几个方面：
（1）深入理解企业的发展战略目标和业务发展方向，并在此基础上，明确企业战略对信息化的需求。
（2）对企业内外部信息化环境、企业所处行业的信息化水平，以及企业信息化现状进行分析和评估。
（3）与企业高层领导和管理人员一起设计和确定企业信息系统建设的长期目标，还要对目标进行必要的分解。
（4）能够主持制定企业信息化战略规划。
2. 信息化基础建设中的任务
系统分析师在企业信息化基础建设中担负着重要任务，主要体现在以下几个方面：
（1）对计算机系统的发展概况、系统配置和性能有较为清楚的了解，要对计算机系统的投资和成本等有较为清楚、准确的估算，对系统性能/价格比有恰当的把握。
（2）对计算机网络技术有较好的了解和把握，从企业的实际出发，对企业计算机网络基础建设提出科学、合理的分析与论证，对企业的局域网、内联网、外联网和Internet建设作出可行性分析报告，提出科学、合理的建设方案。
（3）负责信息系统安全制度和规范的制订，指导系统安全的运行和管理，协调和处理系统安全的有关问题，负责就系统安全的情况和问题进行分析与论证，并向有关部门或领导报告工作。
（4）能够设计出信息系统的评价体系，包括评价指标、评价方法、评价程序、评价主体和客体，以及评价结果的使用等。
（5）能够主持制订信息化管理制度，对信息化管理制度的适用性进行动态分析，并做出相应调整。
（6）能够审定企业信息化各种标准规范，制订企业信息化标准规范体系，协调和处理企业信息化标准规范实施中的重大问题。
3. 信息系统建设中的任务
信息系统建设是信息化的主要内容，系统分析师在系统开发的各个阶段都担负着重要任务。
（1）系统规划阶段。在理清企业内、外部现状和环境的基础上，开展信息系统建设的可行性研究工作；根据企业所处的环境和所具备的条件，按照所确定的目标，制订开发策略；编写可行性研究报告，参与或主持制订信息系统开发计划。
（2）系统分析阶段。在充分了解业务需求的情况下，建立企业的业务模型，并与企业决策者和业务人员进行交流，达到共识；主持系统分析工作，在深入理解企业的发展战略和企业信息化总体规划的基础上，完成信息系统的需求分析，构建出系统的逻辑模型，为系统设计奠定基础。
（3）系统设计阶段。与系统架构设计师配合，设计好系统架构；指导系统设计师和工程师进行系统设计工作，负责对相关问题进行解释；对信息系统开发人员的组织机构建立和人员安排，以及对相关人员的有针对性的培训等提出意见和建议。
（4）系统实施阶段。对按总体设计方案进行的软硬件和网络配置给以指导、协调、检查、验收和评价；组织并指导应用软件的开发、数据库的建设、基础数据的分析和处理等工作；组织或指导用户培训；指导系统开发实施的进度、成本和质量等的控制；对系统实施过程中出现的问题及时汇总分析，对重大问题，特别是方案的修改等提出建议或意见；对系统实施效果进行评价。
（5）系统运行与维护阶段。主持制订运行和维护的规章制度，包括系统运行、软硬件维护和数据维护等管理制度；对系统运行和维护的日常工作进行检查和指导，并指导或协助运行人员解决运行中出现的业务和技术等问题；从技术和经济两方面综合评价信息系统的运行效果；负责制订信息系统调整、升级和功能扩展的方案。
4. 企业流程管理中的任务
信息化特别是信息系统的建设和运行，对企业流程必然产生深刻的影响，这是由流程的性质所决定的，因为流程是企业行为的重复模式，对企业来说，流程是企业内部与价值创造相关的经营活动。由此决定了系统分析师在企业流程中担负着特殊且重要的任务，主要体现在以下三个方面：
（1）在信息化过程中，要特别关注企业流程，研究和分析有关企业流程的问题。
（2）在信息系统建设过程中，要关注系统与流程的互相影响，将企业流程改进或重组作为信息系统修正、功能扩展和升级的主要影响因素。
（3）注意熟悉、研究和评价市场上流行的流程分析工具，当条件具备时，可选用适当的流程分析软件，辅助企业进行流程管理。
5. 信息资源开发利用中的任务
信息资源是企业中的重要资源，信息资源管理在支持企业参与市场竞争中处于重要的战略地位。系统分析师是信息资源管理的领导力量，其主要任务如下：
（1）对所在企业的信息资源作深入的调查研究和分析论证，在被授权的条件下，指导或领导制订企业信息资源开发利用规划和实施方案。
（2）负责制订组织的信息资源管理基础标准，组织制订信息资源管理制度，建立信息获取、生成、处理和使用的责任制和协调机制。
（3）指导或领导信息资源开发利用工作，并将它纳入信息系统的建设之中。
（4）指导、检查和评估日常的信息资源管理工作，对出现的问题提出解决的建议方案。
1.2.3 系统分析师的知识体系
已学习
1.2.3 系统分析师的知识体系
系统分析师属于复合型人才，知识体系是由其担任的角色和工作任务决定的。首先，系统分析师必须非常熟悉信息系统的建设，这要求有相当多的信息技术，即技术知识与技能；其次，系统分析师需要与各种各样的人交互，这些交互需要具备很多良好的素质和技能，可以归纳为经营管理知识与技能；再次，系统分析师需要熟悉为之工作的行业，这要求具备较多的业务领域知识，即业务知识与技能；最后，也是最重要的，系统分析师必须具备高尚的人格和道德修养。
1. 技术知识与技能
系统分析师作为IT专家，应具有丰富的专业技术知识和技能，包括计算机系统、计算机科学与技术、计算机网络、系统安全、信息系统工程、数学及相关学科、经济管理等方面的知识。
（1）计算机系统知识。系统分析师应对现代计算机系统的发展概况、系统配置和系统性能有较清楚的了解，掌握有关的知识和技术。
（2）计算机科学与技术知识。计算机科学与技术学科中的各分支学科，包括数据结构、操作系统、编译原理和算法设计，以及程序语言、软件工程、数据库、人工智能等，都是系统分析师应该掌握的专业知识。
（3）计算机网络知识。系统分析师应熟练掌握通信技术、局域网技术、广域网技术、Internet与Intranet、网络规划与设计、网络配置与管理等方面的知识。
（4）系统安全知识。系统分析师应熟练掌握通信与网络安全、安全管理的实施、应用和系统开发安全、安全架构和模型、计算机操作安全、业务安全、系统灾难的恢复、信息安全机制等方面的知识。
（5）信息系统工程知识。系统分析师要掌握系统论、控制论和信息论的知识，能熟练运用系统工程的原理和方法，指导信息系统建设与管理。
（6）数学及相关学科知识。系统分析师要掌握微积分、线性代数、概率论、统计学、离散数学和运筹学等与信息系统工程关系最为密切的数学及相关学科知识。
（7）经济管理知识。系统分析师要掌握财务会计知识、管理会计知识和技术经济学知识，并将这些知识应用到信息系统建设中。
2. 经营管理知识与技能
在现实生活中，经营是运营、运作之意，管理是指通过决策、计划、组织、领导、控制和创新等职能的发挥来分配、协调一切可以调用的资源，以实现单独的个人无法实现的目标。在经营和管理方面，系统分析师需要具有以下知识：
（1）人际沟通知识。系统分析师应该能够有效地和他人沟通，包括口头沟通和书面沟通。在信息系统开发过程中，决定系统成败的一个最大决定因素，往往是沟通技能而不是技术技能。人际沟通知识可以通过学习获取，多数大学开设了这方面的课程，例如，商务写作和技术写作、商务发言和技术讨论等。
（2）人际关系知识。由于系统分析师需要与系统开发中的其他人交互，因此，需要良好的处理人际关系的能力，使得系统分析师能够很好地和其他人协调开展工作。这方面的知识，可以通过人际关系交流培训的课程，例如，团队合作、领导艺术、管理变化和冲突等来获得，有些大学也开设了类似的选修课。
（3）项目管理知识。系统分析师作为信息系统项目中的技术负责人，必须熟悉信息系统项目管理知识，包括项目管理的理论、方法论和相关工具。
（4）企业管理知识。系统分析师要对企业战略管理、知识管理和日常运作管理有较深入的了解和较深刻的认识，以便制订企业信息化战略，建立企业业务模型，进行企业业务流程改进或重组。
（5）市场营销知识。根据工作性质不同，系统分析师有时候需要担任谈判者的角色，有时候需要从事“售前”的工作，这需要系统分析师具有市场营销方面的知识。
3. 业务知识与技能
系统分析师的业务知识情况极为复杂，它与系统分析师的个人专业出身和职业经历，以及供职单位的业务特点和岗位职责等有关。例如，如果某系统分析师供职于保险公司，则他就应当掌握一定的保险业务知识。
对于供职于IT企业的系统分析师而言，每次承接的项目可能面临不同的行业，因此，需要系统分析师具有很强的学习能力，能够快速熟练用户业务领域的专业知识，由外行迅速转变为“业内人士”。
4. 人文修养
系统分析师是国家信息化建设和软件产业发展的骨干力量，他们不仅应具有优秀的业务能力，还应有良好的人文修养。人文修养是指人所具备的高尚的道德品质、健康的生活态度，以及坚韧的意志和宽广的胸怀的形成、发展和提升过程，是人生阅历、生活经验、道德情操和人文知识的积淀、内化的结果。一个人的人文修养，是思想境界升华和科学文化滋养的综合发展过程，是知和行的统一。
（1）人格与道德规范。系统分析师经常会接触到一些秘密和敏感信息，他们分析与设计的产品通常也属于系统所有者的财产，这些工作特性需要系统分析师具有优秀的人格和道德规范。
（2）遵守法律法规。市场经济是法制经济，信息化建设必然要走上法制的轨道。随着形势的发展，国家和各级政府部门必将不断出台有关信息化建设的法律、法规、制度和政策。作为一名合格的系统分析师，一定要熟练掌握信息系统开发和应用相关的法律法规，并在实际工作中运用。
（3）诚信道德修养。在现代社会中，诚信已经变成一种无形资本，即信用资本。系统分析师经常代表所在单位与客户单位和用户联系，在与客户交互的过程中，一定要守时、守信。否则，将使所在单位失去信用，从而失去客户，也使自己难以立足。
（4）职业道德修养。职业道德是与人们的职业活动紧密联系的、符合职业要求的道德准则、道德情操与道德品质的总和，它用来调节在职业活动中的人与人之间的关系。对于系统分析师来说，加强职业道德修养特别重要，因为系统分析师作为高级工程师，负责对工程师的指导和管理工作，系统分析师的思想和行为会对其他人员产生很大的影响。
（5）健康的心理素质。系统分析师要养成良好的性格和习惯，例如，性格应该开朗、胸襟豁达，易于与各方人士相处；应该有坚毅的意志，能经受挫折和暂时的失败；应该既有主见，不优柔寡断，又能果断行事，遇事沉着、冷静，不冲动，不盲从；要既有灵活性和应变能力，又不失原则、不固执等。
['第2章', '经济管理与应用数学']
2.0 内容介绍
已学习
数学是一种严谨、缜密的科学，学习应用数学知识，可以培养系统分析师的抽象思维能力和逻辑推理能力，在从事系统分析工作时思路清晰，在复杂、紊乱的现象中把握住事物的本质，根据已知和未知事物之间的联系推断事物发展趋势和可能的结果；可以培养系统分析师科学、严谨的工作态度和作风，提高系统分析师的职业素养。
经济学以节约成本、扩大产出、优化资源配置为目标，管理学以激励人的积极性、提高组织效率为目标，它们为经营决策提供一种系统而又有逻辑的分析方法。学习经济管理知识，一方面可以使系统分析师在实际工作中具有理性的思维方式和经济头脑，另一方面可以提高系统分析师参与企业决策或项目决策方面的能力。

2.1 学会计常识
已学习
第2章  经济管理与应用数学
数学是一种严谨、缜密的科学，学习应用数学知识，可以培养系统分析师的抽象思维能力和逻辑推理能力，在从事系统分析工作时思路清晰，在复杂、紊乱的现象中把握住事物的本质，根据已知和未知事物之间的联系推断事物发展趋势和可能的结果；可以培养系统分析师科学、严谨的工作态度和作风，提高系统分析师的职业素养。
经济学以节约成本、扩大产出、优化资源配置为目标，管理学以激励人的积极性、提高组织效率为目标，它们为经营决策提供一种系统而又有逻辑的分析方法。学习经济管理知识，一方面可以使系统分析师在实际工作中具有理性的思维方式和经济头脑，另一方面可以提高系统分析师参与企业决策或项目决策方面的能力。
2.1 会计常识
会计是指记录、分类、汇总、计量和报告发生在企业经济活动中的财务数据的行为，包括以下4个过程：
（1）以原始凭证记录企业各项经济活动中发生的财务数据；
（2）以会计科目对原始凭证进行分类和汇总；
（3）以会计政策与会计估计对一定会计期间的经营成果、财务状况及现金流量加以计量；
（4）以财务报告的形式报告相应的计量结果。
对于上市公司来说，担当会计责任的是董事会。向投资者公开披露财务报告是上市公司的法定义务，也是上市公司会计工作的一项重要内容。
1. 会计功用
会计功用可以分为一般功用和在证券市场上的功用。
会计的一般功用是指合法、公允、一贯地记录与反映企业各项经济活动。其中，“合法”是指依法履行会计责任与审计责任；“公允”是指确保财务报告的编制与列报满足充分公平竞争前提下的真实性要求；“一贯”是指在企业持续经营期间内一个会计期间与下一个会计期间保持会计行为的前后一致性。
会计是证券市场的价值衡量工具，具体表现在以下4个方面：
（1）公司股票、债券发行（包括股票的首次公开发行和以配股、增发新股、可转换债券等形式进行的再融资）以公开披露财务报告为前提条件，发行价格以公司财务报告体现的投资价值为依据。
（2）上市公司利润分配、股权转让、资产及债务重组等重大财务活动以财务报告提供的合法、公允、一贯的财务数据为依据。
（3）二级市场股票交易价格以上市公司的公允价值为基础，投资者所面对的市场波动实际上是股价受供求关系左右围绕公允价值展开的上下波动。当股价过度背离上市公司公允价值的时候，无论是过高，还是过低，都会向公允价值回归。
（4）价值、账面价值、交易价值、市场价值，或者股票投资价值，从会计的角度来说，它们的本质都应当是公允价值。
因此，作为证券市场最基本的价值衡量工具，会计应当为证券发行人与投资者、债权人记录与反映上市公司的公允价值。
2. 会计计价
会计计价是指确定一项资产的价值。广义的会计计价包括资产发生额的原始计价与报告期末（即资产负债表日）对资产发生额的调整计价；狭义的会计计价是指报告期末对资产的计价，后者可能是延续资产发生额的原始计价，也可能是对资产发生额的调整计价。
会计计价是非常重要的会计基础。如果企业的资产计价不真实、不公允，就无法正确反映盈利能力与偿债能力，也不能让投资者对企业的公允价值作出正确判断。
（1）历史成本计价。历史成本计价是指报告期末无须对资产发生额的原始计价进行调整，延续资产发生额的原始计价。采用历史成本计价时，一项原始计价为100万元的资产，无论到报告期末是否发生减值，报表反映的资产价值依然是100万元。
历史成本计价的缺点在于，一旦现行成本（或重置成本、市价）较历史成本下跌，或者资产的实际价值因不能为企业今后带来经济利益流入而丧失，财务报告便存在虚假陈述的嫌疑。例如，成本为100万元的短期投资，到报告期末，尽管市价已经下跌到80万元，依然以100万元计价并反映在资产负债表中短期投资项下，则无法体现短期投资实际价值。
（2）公允价值计价。公允价值是指在充分公平交易的前提下，熟悉情况的双方自愿进行资产交换成债务清偿的金额。对于发生额原始计价为公允价值的资产来说，公允价值计价是指报告期末根据实际变动情况对资产发生额的原始计价进行调整，以调整后的计价确定资产的价值。鉴于会计核算应当遵循谨慎原则，对原始计价的增值一般不作调整，而只对原始计价的减值进行调整。
在这种情况下，一项资产的公允价值计价可以是现行成本（或重置成本、市价），即按照现在或当前（报告期末）购买同一或类似资产所需支付的现金金额计价；也可以是可变现价值，即按照现在市场价值和正常方式变卖资产所能得到的现金金额计价。例如，成本为100万元的短期投资，如果报告期末市价下跌到80万元，则应当相应调整为80万元，市价低于成本的金额应当确认为费用，在利润表内计减当期利润。
公允价值计价也适用于收益与费用的确认。公允价值计价是确保上市公司财务报告公允列报的基础，也是防范证券市场泡沫化的基础与保护中小投资者利益的基础。
2.2 会计报表
会计报表是综合反映企业资产、负债和所有者权益的情况及一定时期的经营成果和现金流量的书面文件，是会计人员根据日常会计核算资料归集、加工、汇总而形成的结果，是会计核算工作的总结。会计报表是传递会计信息的主要形式。由于账簿登记的资料是分散的，不能概括地全面反映企业的财务状况和经营成果，也不便于及时、全面地分析和检查财务计划或预算的完成情况，不利于考核企业经营管理的好坏。为了使会计信息的使用者能够一目了然地了解企业在一定时期的经营成果和一段时期的财务状况，以便于其进行预测和决策，就需要对分散在账簿中的会计信息资料进行汇总整理，形成一整套反映企业财务状况和经营成果的指标体系，这就需要编制会计报表。
2.2.0 内容介绍
已学习
会计报表是综合反映企业资产、负债和所有者权益的情况及一定时期的经营成果和现金流量的书面文件，是会计人员根据日常会计核算资料归集、加工、汇总而形成的结果，是会计核算工作的总结。会计报表是传递会计信息的主要形式。由于账簿登记的资料是分散的，不能概括地全面反映企业的财务状况和经营成果，也不便于及时、全面地分析和检查财务计划或预算的完成情况，不利于考核企业经营管理的好坏。为了使会计信息的使用者能够一目了然地了解企业在一定时期的经营成果和一段时期的财务状况，以便于其进行预测和决策，就需要对分散在账簿中的会计信息资料进行汇总整理，形成一整套反映企业财务状况和经营成果的指标体系，这就需要编制会计报表。
2.2.1 资产负债表
已学习
2.2.1 资产负债表
资产负债表又称为财务状况表，它是反映企业在特定的日期财务状况的报表，是一种静态报表，反映的只是表头载明的那一时点企业的财务状况（企业快照）。资产负债表是在一定日期全部资产、负债和所有者权益信息的会计报表，它表明企业在某一特定日期所拥有的经济资源、所承担的经济义务和企业所有者对净资产的要求权。
1. 资产负债表的格式
资产负债表是一张平衡表，分为“资产”和“负债+所有者权益”两部分。前者反映企业的各类财产、物资、债权和权利，一般按变现先后顺序表示；后者包括负债和股东权益两项，其中负债表示企业所应支付的所有债务，股东权益表示企业的净值，即在偿清各种债务之后，企业股东所拥有的资产价值。三者的关系可以用下列公式表示：
资产 = 负债+股东权益
资产负债表列报的数据全部为时点数，即截止报告期末的数据。其大致的格式如表2-1所示（实际的资产负债表包含许多项目，还包括表头、表尾）。
表2-1  资产负债表格式

https://img.ixueyi.net/images/px_vc/2022-06/742/Kz9vq3yzHj.png
2. 资产负债表日后发生的事项
资产负债表的报出日（会计报表被批准报出日）滞后于资产负债表日（报头所载注日），期间所发生的事项，如果与资产负债表日存在的状况有关，则称为资产负债表日后发生的事项。可分为调整事项和非调整事项。调整事项如证据确凿，可对有关数据进行调整，如还没有确凿证据证明其能够实现的，应在会计报表附注中予以说明；非调整事项是指不影响资产负债表日存在的情况的事项，例如，自然灾害导致的财产损失、外汇汇率变动等。对非调整事项应在会计报表的附注中加以披露。
2.2.2 利润表与利润分配表
已学习
2.2.2 利润表与利润分配表
利润表又称为损益表或收益表，它是用来反映企业在一定会计期间内经营成果的报表（企业经营成果的总结）。在利润表中，通过反映企业在一定的会计期间内的所有收入（包括营业收入、投资收入、营业外收入等），并按收入与费用配比原则计算企业在该会计期间的利润或亏损。
1. 利润表的格式
利润表的格式分为单步式和多步式。单步式利润表是将所有收入和费用分别相加，再将两个加总数相减得出净利润，实际上是将“收入-费用=利润”这一会计等式予以表格化；多步式利润表是将收入、费用项目加以分类，在从营业收入到净利润的计算过程中，经过营业毛利润、营业净利润，利润总额等几次中间性计算的利润表。目前，会计制度要求使用多步式利润表，其示例如表2-2所示。
表2-2  多步式利润表的格式
编制单位：                   编制日期：                单位：元

http://www.educity.cn/article_images/2014-01-15/de94b93c-f1d3-45dd-addd-a28ab9fd1441.jpg
2. 利润分配表
利润分配表是反映企业在一定期间内对实现利润进行分配或对造成亏损进行弥补的会计报表。利润分配表可以和利润表编在一起，也可以单独编制。一般来说，利润分配表一年编制一次，其格式示例如表2-3所示。
表2-3  利润分配表的格式
编制单位：                   20XX年度                     单位：元

http://www.educity.cn/article_images/2014-01-15/72060d3b-e4ef-4027-a345-4d9f01c408ef.jpg
2.3 现代企业组织结构
企业组织结构是企业组织内部各个构成要素相互作用的联系方式或形式，以求有效、合理地把成员组织起来，为实现共同目标而协同努力。组织结构是企业资源和权力分配的载体，它在人的能动行为下，通过信息传递，承载着企业的业务流动，推动或者阻碍企业使命的进程。由于组织结构在企业中的基础地位和关键作用，企业所有战略意义上的变革，都必须首先在组织结构上开始。
2.3.0 内容简介
已学习
企业组织结构是企业组织内部各个构成要素相互作用的联系方式或形式，以求有效、合理地把成员组织起来，为实现共同目标而协同努力。组织结构是企业资源和权力分配的载体，它在人的能动行为下，通过信息传递，承载着企业的业务流动，推动或者阻碍企业使命的进程。由于组织结构在企业中的基础地位和关键作用，企业所有战略意义上的变革，都必须首先在组织结构上开始。
2.3.1 企业组织结构模式
已学习
2.3.1 企业组织结构模式
现代企业组织结构理论可以分为两个阶段。第一阶段从亚当·斯密的分工理论开始，至20世纪80年代，这一阶段强调高度分工，组织结构也越来越庞大，组织形式从直线制开始，一直到事业部制，可以统称为传统的层次型结构；第二阶段自20世纪90年代始，这一阶段强调简化组织结构，减少管理层次，使组织结构扁平化。组织结构的扁平化就是通过减少管理层次、裁减冗余人员来建立一种紧凑的扁平组织结构，使组织变得灵活、敏捷，提高组织效率和效能。扁平化组织形式主要有矩阵制、团队型组织、网络型组织（虚拟企业）等。
1. U型结构
U型结构（直线职能制结构）是一种按职能划分部门的纵向一体化的职能结构，其特点是企业内部按职能（例如，销售、开发等）划分成若干部门，各部门独立性很小，均由企业高层领导直接进行管理，即企业实行集中控制和统一指挥。U型结构保持了直线制的集中统一指挥的优点，并吸收了职能制发挥专业管理职能作用的长处。适用于市场稳定、产品品种少、需求价格弹性较大的环境。U型结构的缺点在于，高层领导由于陷入了日常开发和经营活动，缺乏精力考虑长远的战略发展，且行政机构越来越庞大，各部门协调越来越困难，造成信息和管理成本上升。
2. M型结构
M型结构（事业部制结构）的基本特征是，战略决策和经营决策分离。根据业务按产品、服务、客户、地区等设立半自主性的经营事业部，公司的战略决策和经营决策由不同的部门和人员负责，使高层领导从繁重的日常经营业务中解脱出来，集中精力致力于企业的长期经营决策，并监督、协调各事业部的活动和评价各部门的绩效。
与U型结构相比较，M型结构具有治理方面的优势，且适合现代企业经营发展的要求。M型结构是一种多单位的企业体制，但各个单位不是独立的法人实体，仍然是企业的内部经营机构。
超级事业部制结构是在M型结构基础上建立的，目的是对多个事业部进行相对集中管理，即分成几个“大组”，便于协调和控制，但它的出现并未改变M型结构的基本形态。
3. 矩阵制结构
在组织结构上，把既有按职能划分的垂直领导系统，又有按产品（项目）划分的横向领导关系的结构，称为矩阵制结构（二维结构，项目型结构）。矩阵制结构是为了改进U型结构横向联系差，缺乏弹性的缺点而形成的一种组织形式。它把按职能划分的部门与按项目划分的小组结合起来组成矩阵，使小组成员接受小组和职能部门的双重领导。它的特点表现在围绕某项专门任务成立跨职能部门的专门机构上，这种组织结构形式是固定的，人员却是变动的，任务完成后就可以离开。
与U型结构相比较，矩阵制结构机动、灵活，可随项目的开发与结束进行组织或解散。由于这种结构是根据项目组织的，任务清楚，目的明确，各方面有专长的人都是有备而来，克服了U型结构中各部门互相脱节的现象。矩阵制结构适用于一些重大攻关项目，企业可用来完成涉及面广的、临时性的、复杂的重大工程项目或管理改革任务。特别适用于以开发与实验为主的单位，例如科学研究，尤其是应用性研究单位等。
多维结构（立体结构）是在矩阵制结构的基础上构建产品利润中心、地区利润中心和专业成本中心的三维立体结构。若再加时间维可构成四维立体结构。虽然它的细分结构比较复杂，但每个结构层面仍然是二维结构，而且多维结构未改变矩阵制结构的基本特征，多重领导和各部门配合，只是增加了组织系统的多重性。因此，其基础结构形式仍然是矩阵制，或者说它只是矩阵制结构的扩展形式。
4. H型结构
H型结构是一种多个法人实体集合的母子体制，母子之间主要靠产权纽带来连接。H型结构较多地出现在由横向合并而形成的企业中，这种结构使合并后的各子公司保持了较大的独立性。子公司可分布在完全不同的行业，而总公司则通过各种委员会和职能部门来协调和控制子公司的目标和行为。这种结构的企业往往独立性过强，缺乏必要的战略联系和协调，因此，企业整体资源战略运用存在一定难度。
5. 模拟分权结构
模拟分权是一种介于U型结构和M型结构之间的结构形式，其优点除了调动各开发单位的积极性外，就是解决企业规模过大不易管理的问题。高层管理人员将部分权力分给开发单位，减少了自己的行政事务，从而把精力集中到战略问题上来。其缺点是，不易为模拟的开发单位明确任务，造成考核上的困难；各开发单位领导人不易了解企业的全貌，在信息沟通和决策权力方面也存在着明显的缺陷。
6. 团队型结构
团队型结构中以自我管理团队（Self-Managed Team，SMT）作为基本的构成单位。所谓自我管理团队，是以响应特定的顾客需求为目的，掌握必要的资源和能力，在组织平台的支持下，实施自主管理的单元。在市场需求驱动的新型组织中，SMT是其基本构成单位，这种组织的形态必将是扁平的。
SMT使组织内部的相互依赖性降到了最低程度。团队型结构的基本特征是：工作团队做出大部分决策，选拔团队领导人，团队领导人是“负责人”而非“老板”；信息沟通是通过人与人之间直接进行的，没有中间环节；团队将自主确定并承担相应的责任；由团队来确定并贯彻其培训计划的大部分内容。
在基于速度和解决方案提供的竞争中，SMT只能拿捏相对有限的资源。为满足顾客渴求，有效的减少成本、降低风险、缩短开发时间，SMT必须大量依赖与其他团队或外部组织广泛的横向合作；SMT能够独立完成价值增值的一个或多个环节，更为其在组织内部或组织间与其他团队实现多方合作奠定了基础。
7. 网络型结构
网络型组织（虚拟企业）是由多个独立的个人、部门和企业为了共同的任务而组成的联合体，它的运行不靠传统的层级控制，而是在定义成员角色和各自任务的基础上通过密集的多边联系、互利和交互式的合作来完成共同追求的目标。
在网络型结构中，企业各部门都是网络上的一个节点，每个部门都可以直接与其他部门进行信息和知识的交流与共享，各部门是平行对等的关系，而不是以往通过等级制度渗透的组织形式。密集的多边联系和充分的合作是网络型组织最主要的特点，而这正是其与传统企业组织形式的最大区别之所在。这种组织结构在形式上具有网络型特点，即联系的平等性、多重性和多样性。
根据组织成员的身份特征以及相互关系的不同，网络型组织可以分为四种基本类型，分别是内部网络、垂直网络、市场间网络和机会网络。内部网络通过减少管理层级，使得信息在企业高层管理人员和普通员工之间更加快捷地流动，通过打破部门间的界限（但这并不意味着部门分工的消失），使得信息和知识在水平方向上更快地传播；垂直网络是在特定行业中由位于价值链不同环节的企业共同组成的企业间网络型组织；市场间网络是指由处于不同行业的企业所组成的网络，这些企业之间发生着业务往来，在一定程度上相互依存；机会网络是围绕顾客组织的企业群，这个群体的核心是一个专门从事市场信息搜集、整理与分类的企业，它在广大消费者和生产企业之间架设了一座沟通的平台。
2.3.2 企业组织结构设计
已学习
2.3.2 企业组织结构设计
2.3.1节介绍了多种企业组织结构模式，不同的企业可以具有不同的组织结构，同一个企业在不同的发展阶段也可以具有不同的组织结构。在设计组织结构时，必须平衡考虑权力配置、业绩评估和激励系统的设立，否则就会失去平衡，组织的目标也不会实现。组织设计要考虑的主要问题是：幅度与层次、部门划分与职责确定、专业化与分工、指挥链、权力的配置等。具体来说，要遵循以下8项原则。
（1）任务目标原则。每个组织者有自己的目标（企业存在的理由），目标又分解成子目标（任务），组织结构设计要服从和覆盖这些任务和目标，尤其是价值链上的目标，不能出现缺位现象，应体现一切设计为目标服务的宗旨。
（2）分工协作原则。组织（企业）是一个系统，各子系统（部门）有自己的功能，这就是分工，各子系统之间又有联系，以便实现“1+1>2”，这就是协作。即企业部门之间应该是分工协作的关系。
（3）统一指挥原则。企业作为一个整体，必须有统一的战略部署，要在企业的总体发展战略指导下工作。企业所有部门要按照董事会的方针进行工作，在总经理和总裁的统一指挥下工作。统一指挥原则应包含两个方面：一是本部门的工作应服从企业的整体部署；二是企业应具有从上到下的、统一的、流畅的指挥链。
（4）合理管理幅度原则。每个部门、每位领导人都要有合理的管理幅度。管理幅度太大，无暇顾及；管理幅度太小，可能没有完全发挥作用。管理幅度的大小因企业所在行业和企业人员素质的不同而异。另外，所处的企业管理层次对管理幅度有不同的要求，例如，处于管理高层则幅度小。
（5）责权对等原则。设置的部门或单位应该拥有相应的权力，以便完成自己的职责。如果没有对等的权力，则根本无法决策、无法获得相应的资源，当然就不能完成相应的职责。
（6）集权和分权原则。在整个组织结构设计中，权力的集中与分散应该适度。集权和分权控制在合适的水平上，既不影响工作效率，又不影响积极性。这一原则对组织结构类型的确定有重大影响。
（7）执行部门与监督部门分设原则。执行部门和监督部门分设，也就是通常所说的不能既当裁判员又当运动员。例如，财务部负责日常财务管理、成本核算，审计部专门监督财务部。
（8）协调有效原则。这一原则强调了协调和效率，一旦出现效率低下，则应作相应调整。例如，应考虑各部门的权力分配是否平衡、监督和被监督部门是否协调、上下级之间的沟通渠道是否缺乏效率等。
2.4 业绩评价
对企业各级主管人员的业绩评价，应以其对企业完成目标和计划中的贡献、履行职责中的成绩为依据。他们所主管的部门和单位有不同的职能，按其责任和控制范围的大小，这些责任单位可分为成本中心、利润中心和投资中心，其中投资中心处于最高层次。
2.4.0 内容介绍
已学习
对企业各级主管人员的业绩评价，应以其对企业完成目标和计划中的贡献、履行职责中的成绩为依据。他们所主管的部门和单位有不同的职能，按其责任和控制范围的大小，这些责任单位可分为成本中心、利润中心和投资中心，其中投资中心处于最高层次。
2.4.1 成本中心的业绩评价
已学习
2.4.1 成本中心的业绩评价
一个责任中心，如果不形成或者不考核其收入，而着重考核其所发生的成本和费用，则称其为成本中心。成本中心的职责，是用一定的成本去完成规定的具体任务。
成本中心往往是没有收入的。例如软件研发部门，它的产品或半成品并不由自己销售，没有销售职能，没有货币收入。有的成本中心可能有少量收入，但不成为主要的考核内容。例如，软件测试部门可能会承担个别的测试外包项目，但这不是它的主要职能，不是考核该部门的主要内容。一个成本中心可以由若干个更小的成本中心所组成，任何发生成本的责任领域，都可以确定为成本中心，大的成本中心可能是一个分公司，小的成本中心可能是一两个人组成的单位。
1. 成本中心的分类
成本中心有两种类型，分别是标准成本中心和费用中心。
标准成本中心是所开发的产品稳定而明确，并且已经知道单位产品所需要的投入资源的责任中心。
费用中心适用于那些产出物不能用财务指标来衡量，或者投入与产出之间没有密切关系的单位。这些单位包括一般行政管理部门，例如，会计、人事、劳资、计划等；研发部门，如技术改造、新产品研发等；以及某些销售部门，例如，广告、宣传等。对于费用中心，惟一可以准确计量的是实际费用，无法通过投入和产出的比较来评价其效果和效率，从而限制无效费用的支出，因此，有人称之为“无限制的费用中心”。
2. 标准成本中心的考核指标
一般来说，标准成本中心的考核指标是既定产品质量和数量条件下的标准成本。标准成本中心不需要作出价格决策、产量决策或产品结构决策，这些决策由上级管理部门作出，或授权给销售部门作出。标准成本中心的设备和技术决策，通常由职能管理部门作出，而不是由成本中心的管理人员自己决定。
要注意的是，如果标准成本中心的产品没有达到规定的质量，或没有按计划开发，则会对其他部门产生不利影响。因此，标准成本中心必须按规定的质量、时间标准来进行开发。这个要求是“硬性”的，很少有伸缩余地。完不成上述要求，成本中心要受到批评甚至惩罚。
3. 费用中心的考核指标
确定费用中心的考核指标是一件困难的工作。由于缺少度量其产出的标准，以及投入和产出之间的关系不密切，运用传统的财务技术来评估这些中心的业绩非常困难。费用中心的业绩涉及预算、工作质量和服务水平。工作质量和服务水平的量化很困难，并且与费用支出关系密切。这正是费用中心与标准成本中心的主要区别。标准成本中心的产品质量有一定的量化方法，如果能以低于预算水平的实际成本开发出相同的产品，则说明该中心业绩良好；而对于费用中心则不然，一个费用中心的支出没有超过预算，可能该中心的工作质量和服务水平低于计划的要求。
通常，使用费用预算来评价费用中心的成本控制业绩。由于很难依据一个费用中心的工作质量和服务水平来确定预算数额，各企业所采用的方法也不一样。
（1）考察同行业类似职能的支出水平。例如，有的企业根据销售收入的一定百分比来制订研发费用预算。尽管很难解释为什么研发费用与销售额具有某种因果关系，但是百分比法还是使人们能够在同行业之间进行比较。
（2）零基准预算法。详细分析支出的必要性及其取得的效果，确定预算标准。
（3）依据历史经验来编制费用预算。这种方法虽然简单，但缺点也十分明显。管理人员为在将来获得较多的预算，倾向于把能花的钱全部花掉。越是勤俭度日的管理人员，将越容易面临严峻的预算压力。
从根本上来讲，决定费用中心预算水平有赖于专家（有经验的专业人员）的判断。上级主管人员应信任费用中心的经理，并与他们密切配合，通过协商确定适当的预算水平。在考核预算完成情况时，要利用专家对该费用中心的工作质量和服务水平做出有根据的判断，才能对费用中心的控制业绩作出客观评价。
2.4.2 利润中心的业绩评价
已学习
2.4.2 利润中心的业绩评价
一个责任中心，如果能同时控制开发和销售，既要对成本负责又要对收入负责，但没有责任或没有权力决定该中心资产投资的水平，因而可以根据其利润的多少来评价该中心的业绩，那么，就称其为利润中心。
1. 利润中心的分类
利润中心也有两种类型。一种是自然的利润中心，它直接向企业外部销售产品，在市场上进行购销业务。例如，在事业部制的组织结构中，每个事业部均有销售、开发、采购的职能，有很大的独立性，这些事业部就是自然的利润中心；另一种是人为的利润中心，它主要在企业内部按照内部转移价格出售产品。例如，在基于产品线开发的企业中，可以分为资源开发、应用开发、资源管理、业务等几个部门，资源开发部门的产品（构件）主要在企业内部转移，他们只有少量对外销售，或者全部对外销售是由专门的业务部门完成，则资源开发部门可视为人为的利润中心。
2. 利润中心的考核指标
利润中心的考核指标主要是利润。但是，也应当看到，任何一个单独的业绩衡量指标都不能够反映出某个部门的所有经济效果，利润指标也是如此。因此，尽管利润指标具有综合性，利润计算具有强制性和较好的规范化程度，但仍然需要一些非货币的衡量方法作为补充，包括生产率、市场地位、产品质量、员工态度、社会责任、短期目标和长期目标的平衡等。
3. 部门利润的计算
在计量利润中心的利润时，需要解决两个问题：第一，选择一个利润指标，包括如何分配成本到该中心；第二，为在利润中心之间转移的产品（或劳务）规定价格。
分散经营的部门之间相互提供产品时，需要制订一个内部转移价格。转移价格对于提供产品的部门来说表示收入，对于使用这些产品的购买部门来说则表示成本。因此，转移价格会影响到这两个部门的获利水平，使得部门经理非常关心转移价格的制订，并经常引起争论。
制订转移价格的目的有两个，第一，防止成本转移带来的部门间责任转嫁，使每个利润中心都能作为单独的部门进行业绩评价；第二，作为一种价格引导下级部门采取明智的决策，开发部门据此确定提供产品的数量，购买部门据此确定所需要的产品数量。但是，这两个目的往往有矛盾。能够满足评价部门业绩的转移价格，可能引导部门经理采取并非对企业最理想的决策；而能够正确引导部门经理的转移价格，可能使某个部门获利水平很高而另一个部门亏损。很难找到理想的转移价格来兼顾业绩评价和制订决策，而只能根据企业的具体情况选择基本满意的解决办法。
2.4.3 投资中心的业绩评价
已学习
2.4.3 投资中心的业绩评价
投资中心是指某些分散经营的单位或部门，其经理所拥有的自主权不仅包括制订价格、确定产品和开发方法等短期经营决策权，而且还包括投资规模和投资类型等投资决策权。投资中心的经理不仅能控制除企业分摊管理费用外的全部成本和收入，而且能控制占用的资产，因此，不仅要衡量其利润，而且要衡量其资产并把利润与其所占用的资产联系起来。
评价投资中心业绩的指标通常有两种，分别是投资报酬率和剩余收益。
1. 投资报酬率
投资报酬率（Return On Investment，ROI）又称为投资回报率，是部门边际贡献与该部门所拥有的资产额（或投资额）的比率，其中部门边际贡献又称为部门毛利，反映投资中心为整个企业实际作出的贡献。例如，假设某个部门的资产额为2万元，部门边际贡献为0.4万元，那么，投资报酬率为20%。
投资报酬率是根据现有的会计资料计算的，比较客观，可用于部门之间，以及不同行业之间的比较。用它来评价每个部门的业绩，促使其提高本部门的投资报酬率，有助于提高整个企业的投资报酬率。
投资报酬率指标的不足也是十分明显的，部门经理会放弃高于资本成本而低于目前部门投资报酬率的机会，或者减少现有的投资报酬率较低但高于资金成本的某些资产，使部门的业绩获得较好评价，但却伤害了企业整体的利益。例如，在前面的例子中，假设企业资金成本为15%。部门经理面临一个投资报酬率为17%的投资机会，投资额为1万元，每年部门边际贡献为0.17万元，尽管对整个企业来说，由于投资报酬率高于资本成本，应当利用这个投资机会，但是，它却使这个部门的投资报酬率由过去的20%下降到19%。
因此，从引导部门经理采取与企业总体利益一致的决策来看，投资报酬率并不是一个很好的指标。
2. 剩余收益
为了克服由于使用投资报酬率来衡量部门业绩带来的问题，许多企业采用绝对数指标来实现利润与投资之间的联系，这就是剩余收益（Residual Income，RI）。其计算公式如下：
剩余收益 = 部门边际贡献-部门资产应计报酬 = 部门边际贡献-部门资产×资本成本
剩余收益的主要优点是可以使业绩评价与企业的目标协调一致，引导部门经理采纳高于企业资本成本的决策。
继续前面的例子，根据前面的的资料计算：
未投资新项目前部门剩余收益 = 0.4-2×15% = 0.1万元。
投资新项目后部门剩余收益 = (0.4+0.17)-(2+1)×15% = 0.12万元。
部门经理会采纳增资的方案而放弃减资的方案，这与企业的总目标是一致的。
剩余收益是绝对数指标，不便于不同部门之间的比较。规模大的部门容易获得较大的剩余收益，而它们的投资报酬率并不一定很高。在这里，再次体会到引导决策与评价业绩之间的矛盾。因此，许多企业在使用这一方法时，事先建立与每个部门资产结构相适应的剩余收益预算，然后通过实际与预算的对比来评价部门业绩。
2.5 企业文化管理
企业文化（Corporate Culture）也称为组织文化（Organizational Culture），是企业在运营实践中，逐步形成的，为全体员工所认同并遵守的、带有本组织特点的使命、愿景、宗旨、精神、价值观和经营理念，以及这些理念在运营实践、管理制度、员工行为方式与企业对外形象的体现的总和。企业文化有三大结构要素，分别是企业物质文化要素、企业制度文化要素和企业精神文化要素。
2.5.0 内容介绍
已学习
企业文化（Corporate Culture）也称为组织文化（Organizational Culture），是企业在运营实践中，逐步形成的，为全体员工所认同并遵守的、带有本组织特点的使命、愿景、宗旨、精神、价值观和经营理念，以及这些理念在运营实践、管理制度、员工行为方式与企业对外形象的体现的总和。企业文化有三大结构要素，分别是企业物质文化要素、企业制度文化要素和企业精神文化要素。
2.5.1 企业文化的内容
已学习
2.5.1 企业文化的内容
企业文化是企业的灵魂，是推动企业发展的不竭动力。它包含着非常丰富的内容，其核心是企业的精神和价值观。这里的价值观不是泛指企业管理中的各种文化现象，而是企业或企业中的员工在从事开发与经营中所持有的价值观念。
企业文化是一个由核心层、中间层和外围层构成的多层次的生态系统，根据内容大致可以分为理念层、制度层、行为层、物质层，企业文化的各个层面是和谐统一、相互渗透的。根据企业文化的定义，其内容是十分广泛的，但其中最主要的应包括如下几点：
（1）经营哲学。经营哲学也称企业哲学，是企业特有的从事生产经营和管理活动的方法论原则，它是指导企业行为的基础。企业在激烈的市场竞争环境中，面临着各种矛盾和多种选择，要求企业有一个科学的方法论来指导，有一套逻辑思维的程序来决定自己的行为，这就是经营哲学。
（2）价值观念。企业的价值观是指企业职工对企业存在的意义、经营目的、经营宗旨的价值评价和为之追求的整体化、个性化的群体意识，是企业全体职工共同的价值准则。只有在共同的价值准则基础上才能产生企业正确的价值目标，有了正确的价值目标才会有奋力追求价值目标的行为，企业才有希望。
（3）企业精神。企业精神是指企业基于自身特定的性质、任务、宗旨、时代要求和发展方向，并经过精心培养而形成的企业成员群体的精神风貌。企业精神要通过企业全体职工有意识的实践活动体现出来。因此，它又是企业职工观念意识和进取心理的外化。企业精神是企业文化的核心，在整个企业文化中起着支配的地位。企业精神以价值观念为基础，以价值目标为动力，对企业经营哲学、管理制度、道德风尚、团体意识和企业形象起着决定性的作用。
（4）企业道德。企业道德是指调整本企业与其他企业之间、企业与顾客之间、企业内部职工之间关系的行为规范的总和。它是从伦理关系的角度，以善与恶、公与私、荣与辱、诚实与虚伪等道德范畴为标准来评价和规范企业。
（5）团体意识。团体意识是指组织成员的集体观念，是企业内部凝聚力形成的重要心理因素。企业团体意识的形成使企业的每个职工把自己的工作和行为都看成是实现企业目标的一个组成部分，使他们对自己作为企业的成员而感到自豪，对企业的成就产生荣誉感，从而把企业看成是自己利益的共同体和归属。
（6）企业形象。企业形象是企业通过外部特征和经营实力表现出来的，被消费者和公众所认同的企业总体印象。由外部特征表现出来的企业的形象称表层形象，例如，徽标、广告、商标、营业环境等，这些都给人以直观的感觉，容易形成印象；通过经营实力表现出来的形象称深层形象，它是企业内部要素的集中体现，例如，人员素质、开发能力、管理水平、资本实力、产品质量等。表层形象是以深层形象为基础，没有深层形象这个基础，表层形象就是虚假的，也不能长久地保持。
（7）企业制度。企业制度是在开发、经营实践活动中所形成的，对人的行为带有强制性，并能保障一定权利的各种规定。从企业文化的层次结构看，企业制度属中间层次，它是精神文化的表现形式，是物质文化实现的保证。
2.5.2 企业文化管理的作用
已学习
2.5.2 企业文化管理的作用
企业无论大小，进行企业文化建设和管理都是必要的，因为这是企业自身发展的需要，是管理制度实施的需要，也是人才竞争和市场竞争的需要。总的来说，实施企业文化管理，有利于增强企业核心竞争力。
1. 企业文化具有导向功能
所谓导向功能，就是通过它对企业的领导者和职工起引导作用。企业文化的导向功能主要体现在以下2个方面：
（1）经营哲学和价值观念的指导。经营哲学决定了企业经营的思维方式和处理问题的法则，这些方式和法则指导经营者进行正确的决策，指导员工采用科学的方法从事生产经营活动。企业共同的价值观念规定了企业的价值取向，使员工对事物的评判形成共识，有着共同的价值目标，为价值目标去行动。
（2）企业目标的指引。企业目标代表企业发展的方向，没有正确的目标就等于迷失了方向。完美的企业文化会从实际出发，以科学的态度去制订企业的发展目标，这种目标一定具有可行性和科学性，员工在这一目标的指导下从事开发和经营活动。
2. 企业文化的约束功能
企业文化的约束功能主要是通过完善管理制度和道德规范来实现的。企业制度是企业内部的法规，所有人员必须遵守和执行，从而形成约束力；道德规范是从伦理关系的角度来约束所有人员的行为。如果人们违背了道德规范的要求，就会受到舆论的遣责，心理上会感到内疚。
3. 企业文化的凝聚功能
企业文化以人为本，尊重人的感情，从而在企业中造成了一种团结友爱、相互信任的和睦气氛，强化了团体意识，使员工之间形成强大的凝聚力和向心力。共同的价值观念形成了共同的目标和理想，员工把企业看成是一个命运共同体，把本职工作看成是实现共同目标的重要组成部分，整个企业步调一致，形成统一的整体。
4. 企业文化的激励功能
共同的价值观念使每个员工都感到自己存在和行为的价值，自我价值的实现是人的最高精神需求的一种满足，这种满足必将形成强大的激励。在以人为本的企业文化氛围中，领导与员工、员工与员工之间互相关心，互相支持。特别是领导对员工的关心，员工会感到受人尊重，自然会振奋精神，努力工作。另外，企业精神和企业形象对员工有着极大的鼓舞作用，特别是企业文化建设取得成功，在社会上产生影响时，员工会产生强烈的荣誉感和自豪感，他们会加倍努力，用自己的实际行动去维护企业的荣誉和形象。
5. 企业文化的调适功能
调适就是调整和适应。企业各部门之间、员工之间，由于各种原因难免会产生一些矛盾，解决这些矛盾需要各自进行自我调节；企业与环境、与顾客、与企业、与国家、与社会之间都会存在不协调、不适应之处，这也需要进行调整和适应。企业哲学和企业道德规范使经营者和普通员工能科学地处理这些矛盾，自觉地约束自己。
6. 企业文化的辐射功能
文化力不止在企业起作用，它也能通过各种渠道对社会产生影响。文化力辐射的渠道很多，主要包括传播媒体，公共关系活动等。
最后，要说明的是，企业文化管理的作用需要在企业具有良好的获利能力的前提下才能够发挥。运用企业文化管理需要在企业相适应的阶段才会奏效。在创业阶段，企业应该关心的关键问题是企业的产品，尤其是产品的质量，这样可以让企业活下来；在发展阶段，企业应该在销售网络、技术服务、品牌建设方面努力，这样可以让企业有空间发展；而到了企业成长阶段，文化管理才可以摆上日程，因为这个时期企业应该在凝聚力、价值认同方面做出努力，这样才能够保证持续经营。
2.6 IT审计相关常识
IT审计（信息系统审计）是为了信息系统的安全、可靠与有效，由独立于审计对象的IT审计师，以第三方的客观立场对以计算机为核心的信息系统进行综合的检查与评价，向IT审计对象的最高领导层，提出问题与建议的一连串的活动。IT审计所关注的内容不单纯是对电子数据的处理，更不仅仅是财务信息，而是对企业整个信息系统的可靠性、安全性进行了解和评价，是一项通过审查与评价信息系统的规划、分析、设计、实现、运行和维护等一系列活动，以确定信息系统运行是否安全、可靠、有效，信息系统得出的数据是否可靠、准确，以及数据是否能有效存储的过程。
2.6.0 内容介绍
已学习
IT审计（信息系统审计）是为了信息系统的安全、可靠与有效，由独立于审计对象的IT审计师，以第三方的客观立场对以计算机为核心的信息系统进行综合的检查与评价，向IT审计对象的最高领导层，提出问题与建议的一连串的活动。IT审计所关注的内容不单纯是对电子数据的处理，更不仅仅是财务信息，而是对企业整个信息系统的可靠性、安全性进行了解和评价，是一项通过审查与评价信息系统的规划、分析、设计、实现、运行和维护等一系列活动，以确定信息系统运行是否安全、可靠、有效，信息系统得出的数据是否可靠、准确，以及数据是否能有效存储的过程。
2.6.1 IT审计概述
已学习
2.6.1 IT审计概述
IT审计的任务在于站在客观公正的角度上，收集审计信息，生成审计报告，通过审计报告促成信息系统生命周期活动和成果物的改善。实施IT审计能够强化IT投资效果，提高信息系统的安全性，能够客观评价信息系统及信息系统开发，从社会经济和企业、国家信息化投资、安全等方面都具有极大的意义。
1. IT审计的主要内容
国际IT审计协会规定的IT审计的主要内容如下：
（1）IT审计程序。依据IT审计标准、准则和最佳实务等提供IT审计服务，以帮助组织确保其信息技术和运营系统得到保护并受控。
（2）IT治理。确保组织拥有适当的结构、政策、工作职责、运营管理机制和监督实务，以达到公司治理中对IT方面的要求。
（3）系统和基础建设生命周期管理。系统的开发、采购、测试、实施、维护和配置、使用，与基础框架，确保实现组织的目标。
（4）IT服务的交付与支持。IT服务管理实务可确保提供所要求的等级、类别的服务，来满足组织的目标。
（5）信息资产的保护。通过适当的安全体系（例如，安全政策、标准和控制等），保证信息资产的机密性、完整性和有效性。
（6）灾难恢复和业务连续性计划。一旦连续的业务被中断或破坏，灾难恢复计划确保灾难对业务影响最小化的同时，及时恢复被中断的IT服务。
2. IT审计计划
IT审计的实施需要制订相应的计划，明确IT审计的任务、采用的方法和预期应当达到的效果。该计划在提交经营层确认后得以实施。审计计划可分为两种类型，分别是基本计划和详细计划（分期计划）。
基本计划是一个审计年度内相关IT审计活动的计划，确认年度内IT审计的各项任务及其大致时间安排。基本计划需要提交经营层批准。它是整个IT审计年度活动的指引方针，内容包括审计对象、审计场所、审计原则和日程安排等。
详细计划针对具体项目（系统）或任务，得到IT审计部门领导的许可即可，详细计划需要告知被审计对象。详细计划的内容包括审计对象、目的、审计流程、审计要点、审计时间、相关人员和·\审计报告提交事项等内容。
3. IT审计师
IT审计师是IT审计项目的主角，其任务是站在独立的第三方的立场上，对信息系统的有效性、安全性、稳定性进行审计，对系统的安全措施、紧急对策、灾难备份与恢复计划、机密数据的保护、系统设计、开发与维护的有效性以及系统的运行效率等各种相关项目进行检查、评估并形成报告。IT审计师通过检测和评估，应该能够及早的找出阻碍系统有效运行的因素，预防故障的发生，使信息系统得到进一步的完善和健全。如果信息系统发生故障，IT审计师应该在第一时间提出应对措施，并找到恢复运行以及控制、降低系统损失的解决方案。
为了有效地实施IT审计，作为一个IT审计师，应具备待审计对象所要求的业务知识和丰富的信息系统开发经验。IT审计师必须具备全面的计算机软硬件知识，对计算机网络和信息系统的安全性具有高度而非凡的敏感意识，而且对财务会计和企业内部控制具有深刻的理解能力，要熟悉公司治理、经济、审计、计算机、内部控制、网络技术等，既是审计专家，又是信息系统专家，以对计算机信息系统及软硬件的技术性审计来保证IT审计质量的可靠性。
为达到IT审计的目的，IT审计师必须拥有适当的权限。包括查阅机密数据的权限，进入企业内相关场所的权限，以及对相关人员提出询问和质疑的权限，等等。由于IT审计师拥有较大的权限，因此，必须防范IT审计师本人所带来的风险。一方面，IT审计师必须严格遵守职业道德，坚持公正、客观的立场，并遵守保密的义务；另一方面，IT审计师的权限与制约必须形成明确的规章制度，并使之成为具有法律约束力的条文。这两方面对于防范IT审计师所带来的风险，保护企业的合法利益非常重要。
2.6.2 IT审计程序
已学习
2.6.2 IT审计程序
由于IT审计对象的独特性，IT审计在实施流程上和财务审计也有所不同。IT审计的生命周期和信息系统的生命周期是相互对应的。信息系统的生命周期可以分为总体规划阶段、系统分析阶段、系统设计阶段、系统实现阶段、系统运行和维护阶段，与此相对应，IT审计的生命周期会包括系统规划阶段的审计、系统分析阶段的审计、系统设计阶段的审计、系统实现阶段的审计、系统运行和维护阶段的审计。当然，根据具体被审计的信息系统的特点和实际实施情况，IT审计师应该灵活地加以判断。
此外，应该清楚地认识到，在信息系统的整个生命周期中，项目管理规范、方法和执行情况对于信息系统的建设和运行起着非常重要的作用。因此，对于IT审计来说，这方面的审计是必不可少的。
从审计学的角度来看，一个完整的审计流程（审计程序）是指审计人员在具体的审计过程中所采取的所有的行动和步骤，包括从接受审计项目开始，到审计工作结束的全部过程。IT审计过程与一般审计过程一样，分为准备阶段、实施阶段和报告阶段，如图2-1所示。准备阶段和报告阶段所涉及的技术和方法与财务审计所运用的技术和方法区别不大，而实施阶段所涉及的技术和方法则具有信息技术的特色。


http://www.educity.cn/article_images/2014-01-15/94213661-342b-4dc2-ba63-3344699fc6fe.jpg
图2-1  IT审计的生命周期
1. 准备阶段
准备阶段主要是初步调查被审计单位信息系统的基本情况，并拟定合理的计划。一般包括以下主要工作：
（1）调查、了解被审计单位信息系统的基本情况。
（2）初步评价被审单位信息系统的内部控制及外部控制。
（3）确定审计重要性和审计范围。
（4）分析审计风险。
（5）制订审计方案，编制审计计划。
在审计准备阶段，除了对时间、人员、工作步骤和任务分配等方面做出安排外，还要合理确定符合性测试、实质性测试的时间和范围，以及测试的审计方法和测试数据。
2. 实施阶段
实施阶段是IT审计工作的核心。在实施阶段，针对被审计的信息系统，IT审计师所开展的工作可以分为三个层次，即了解、描述和测试。由于IT审计是事后审计（也可以是事中审计），因此，在审计实施阶段，信息系统规划与分析、设计与实现、运行与维护阶段的IT审计，以及对项目管理规范的审计这几个关键步骤之间并没有明确的先后次序。
在实施阶段所采取的具体审计方法与系统建设的质量控制方法是类似的，例如，对于系统分析的审计，需要审核是否己细致分析企业组织结构、是否确定用户功能和性能需求、是否确定用户的数据需求等。
3. 报告阶段
报告阶段是实质性的整个IT审计工作的结束，主要工作有:
（1）整理、评价执行审计业务过程中收集到的证据。
（2）复核审计底稿，完成二级复核。传统审计的三级复核制度对IT审计同样适用，它是保证审计质量、降低审计风险的重要措施。一级复核是由IT审计项目组长在审计过程进行中对工作底稿的复核，这层复核主要是评价已完成的审计工作、所获得的工作底稿编制人员形成的结论；二级复核是在外勤工作结束时，由审计部门领导对工作底稿进行的重点复核。
（3）评价审计结果，形成审计意见，完成三级复核，编制审计报告。三级复核由审计部门的主任进行，主要复核所采用审计程序的恰当性、审计工作底稿的充分性、审计过程中是否存在重大遗漏、审计工作是否符合事务所的质量要求等。
审计报告是审计工作的最终成果，审计报告首先应有审计人员对被审计系统的安全性、可靠性、稳定性、有效性的意见，同时提出改进建议。被审计单位对审计结论如有异议，可提出复审要求，审计部门可组织复审。当被审计单位的信息系统有了新的改进时，还需要组织后续审计。
2.6.3 IT审计的方法与工具
已学习
2.6.3 IT审计的方法与工具
IT审计的方法包括一般方法（手工方法）和应用计算机审计的方法。一般方法主要用于对信息系统的了解和描述，包括面谈法、系统文档审阅法、观察法、计算机系统文字描述法、表格描述法、图形描述法等；应用计算机的方法一般用于对信息系统的控制测试，包括测试数据法、平行模拟法、在线连续审计技术（通过嵌入审计模块实现）、综合测试法、受控处理法和受控再处理法等。应用计算机技术的审计方法主要是指计算机辅助审计技术与工具的运用，但不能把计算机辅助审计技术与工具的使用过程与IT审计等同起来。在IT审计的过程中，仍然需要运用大量的手工审计技术。
在IT审计的实施过程中，IT审计师应该根据审计目的和实际情况，灵活运用各种审计策略，并采用高效、灵活的辅助工具。
1. 面谈、问卷调查和系统评审会
与信息系统的相关人员进行面谈，是IT审计师了解系统各方面特点的最直接和最简便的方法。IT审计师在面谈之前要做好充分的准备，明确面谈的目标，选择合适的面谈对象。IT审计师应该拥有良好的沟通技巧。在面谈过程中，要注意消除面谈对象的抵触情绪，提高被访问者对面谈目标的兴趣和责任感，以获取客观、真实、全面、翔实的信息。
问卷调查也是获取信息的一种常用手段。相对面谈而言，问卷调查可以在更节省的时间内获得更广泛的信息。问卷调查同时还能作为审计证据收集的工具。IT审计师通过对问卷回复信息的分析和比较，可以提取对信息系统的较全面的评估意见。IT审计师必须精心设计问卷的格式和内容，以便回答者能够清晰、正确地理解问题的含义。此外，问卷的发放对象、发放时间、发放方式、以及问卷的收集、分析等，都应该仔细考虑，以发挥调查问卷的最大作用。
系统评审会是重要的审计证据来源。系统评审会可分为技术评审和管理评审两大类。技术评审是从技术角度进行的审查，是保证各阶段工作质量的重要措施。管理评审是从管理的角度，对信息系统的建设成本、项目进度等过程加以审查，达到有效管理和控制的目的。
2. 计算机辅助审计技术和工具
对于以计算机为核心的信息系统，如果只采用常规的审计方法，显然无法完成对复杂、强大的信息系统的审计任务。因此，要完成全面的审计证据的收集、实现IT审计的自动化，在审计中采用计算机辅助审计技术和工具是十分必要的。例如，集成测试、快照/扩展记录、系统控制审计评审文件、连续与中断模拟等。其中，集成测试是用综合测试的方法对系统进行评估；快照/扩展记录方法可以对运行中的信息系统的变化状态进行跟踪；系统控制审计评审文件和连续与中断模拟技术主要应用于从信息系统的开发环境中选择事物进行处理，得到审计结论。
3. 通用审计软件包
通用审计软件包是用于IT审计的工具软件，它包含一些必要的数据提取、分析等功能。一般是由专业的软件公司开发并维护，使用起来相对简单，能有效降低IT审计师的工作量。但是，审计软件一般是通用的，往往会在实际的IT审计过程中遇到局限。因此，IT审计师不能完全依赖于审计软件的使用。
4. 测试用例法
测试用例法是最常用的IT审计策略，其原理是根据信息系统的特点，设计有针对性的测试用例和测试程序，对系统的数据处理和功能进行测试，分析其处理结果，判断它的有效性；或者模拟用户操作，检测被审计系统的有效性和稳定性。测试用例法和系统建设阶段的测试方法有所类似。但是，IT审计阶段的测试用例法主要是针对已经投入运行的系统所进行的测试和分析，因此，在审计过程中，应该注意避免对系统的正常运行产生影响。
5. 源代码和文档分析
对系统的源代码、项目文档进行深入分析，找到其中的遗漏和瑕疵，这也是一种常用的IT审计方法。
2.6.4 IT审计的重点环节
已学习
2.6.4 IT审计的重点环节
IT审计应关注的重点环节主要有数据环节、内部控制环节和数据传输转移环节。
1. 数据环节
在审计中，必须使用一种方法能够向前、向后追踪数据的来源和去向，以便使审计师选择一些数据对其进行详细检查，确认数据是否符合一般的审计目标。对数据的分析可以采用计算机辅助审计技术，按照特定的标准对数据进行汇总、分类、排序、比较和选择，并进行各种运算。
2. 内部控制环节
内部控制是指组织经营管理者为了维护财产、物资的安全和完整，保证信息的真实可靠，保证经营管理活动的经济性、效率性和效果性，以及各项法律和规范的遵守，而对经营管理活动进行调整、检查和制约所形成的内部管理机制，是组织为实现管理目标而形成的自律系统。信息系统的内部控制主要分为应用控制、一般控制和管理控制三个方面。在审计过程中，要对被审计单位内部控制制度进行评价。为了对系统的内部控制制度进行评价，审计师必须验证内部控制系统是否存在，并能提供令人满意的证据，证明它正在有效地发挥作用。
在信息系统中，应检查以下方面来证明内部控制制度的有效性：
（1）控制系统资源的存取。包括物理资源（例如，终端、服务器等）和逻辑资源（例如，软件、系统文件、数据等）。
（2）控制系统资源的使用。用户应该只能对授权给他们的那些资源进行操作。
（3）建立按用户职能分配资源的制度。把重要的任务功能按用户或用户组进行分离，以减少无意的误操作、滥用系统资源和对数据的非授权修改。
（4）记录系统的使用情况。按时间顺序建立一个使用记录，记录内容应包括例外事例和与安全有关的事件是由谁触发的，信息的创建、修改和删除是由谁完成的。
（5）确认处理过程的准确性。所有处理过程都要按照预定的算法准确完成。
（6）管理人员对信息系统的修改。应该保证信息系统的所有修改都是经过授权、有文档记录、经过彻底（独立地）测试的，确认最后以一种有控制的方式投入使用。
（7）保护信息系统免遭病毒和黑客的攻击。必须建立一套有效的控制措施，检测病毒和网络攻击，防止病毒感染信息系统，防止黑客的攻击。
3. 数据传输转移环节
在企业信息系统中，有些数据需要在多个系统之间相互转移，在此过程中可能会出现一些问题，尤其是在需要手工重新录入时。因此，在检查这一环节时，一定要保证输出的数据是经过批准、完整和精确的，保证输出的数据在约定时间内准确地发送给指定的接收者，保证流入的数据是完整、准确和真实可靠的。
2.7 概率统计应用
概率论与数理统计作为一门学科，主要是研究现实生活中的数据和客观世界中的随机现象，它通过对数据收集、整理、描述和分析，以及对事件发生可能性的刻画，来帮助人们作出合理的判断和预测。通过学习概率论与数理统计，可以培养系统分析师以随机观点来理解丰富多彩的现实世界，形成数学思考和分析的意识，提高解决问题的能力。
2.7.0 内容介绍
已学习
概率论与数理统计作为一门学科，主要是研究现实生活中的数据和客观世界中的随机现象，它通过对数据收集、整理、描述和分析，以及对事件发生可能性的刻画，来帮助人们作出合理的判断和预测。通过学习概率论与数理统计，可以培养系统分析师以随机观点来理解丰富多彩的现实世界，形成数学思考和分析的意识，提高解决问题的能力。
2.7.1 古典概率应用
已学习
2.7.1 古典概率应用
人们在客观世界中所观察到的现象大致可以分为两类，一类是在一定条件下必然发生，这类现象是可以事前预言的，其结果是确定的，称为确定性现象或必然现象；另一类是在一定条件下可能发生也可能不发生，这类现象在观察之前无法预知它的准确结果，称为随机现象。
1. 事件

可以在相同的条件下重复进行，并且每次试验的结果是事先不可预知的试验称作随机试验。在随机试验中，可能发生也可能不发生的事件称为随机事件，简称事件。随机试验中每一个可能的试验结果称为样本点，样本点的全体称为样本空间，常用Ω表示。
必然发生的事件称为必然事件，必然事件应包含所有的样本点，因而为Ω；不可能发生的事件称为不可能事件，不可能事件不包含任何样本点，记作φ（空集）。
如果事件A发生必然导致事件B发生，则称A是B的子事件，或称事件B包含事件A，记作；如果且，即A与B同时发生或同时不发生，则称A等于B，记作A=B。
http://www.educity.cn/article_images/2014-01-16/f7877528-18b7-4e2c-93d9-2c20e935d0e3.png
http://www.educity.cn/article_images/2014-01-16/f7877528-18b7-4e2c-93d9-2c20e935d0e3.png
http://www.educity.cn/article_images/2014-01-16/efd73394-6d46-4f68-87b6-6af59d6c526a.png
（1）和事件。如果A1,A2,...,An都是事件，则事件“A1,A2,...,An中至少有一个发生”称作A1,A2,...,An的和事件（或事件、并事件），记作。和事件具有以下定律：
http://www.educity.cn/article_images/2014-01-16/accb7c3b-5420-4206-8c28-ae07e2cc5050.png


http://www.educity.cn/article_images/2014-01-16/f3c4e708-7dcf-403a-894c-56d55fbb0ceb.png
（2）积事件。如果A1,A2,...,An都是事件，则事件“A1,A2,...,An同时发生”称作A1,A2,...,An的积事件（与事件、交事件），记作。积事件具有以下定律：
http://www.educity.cn/article_images/2014-01-16/abcd8c85-b362-4eeb-baa7-3b5a8abf487e.png

http://www.educity.cn/article_images/2014-01-16/519dc240-3436-4c89-af38-9844fae33332.png
（3）差事件。如果A,B是两个事件，则事件“A发生且B不发生”称作A与B的差事件，记作A-B。差事件具有以下定律：

http://www.educity.cn/article_images/2014-01-16/ad501344-43d4-49f2-be76-278f837110ee.png
（4）逆事件。如果Ω是样本空间，A是一个事件，则Ω-A称作A的逆事件或对立事件，记作。发生当且仅当A不发生。逆事件具有以下定律：
http://www.educity.cn/article_images/2014-01-16/dff2458f-e47a-4eda-bcdd-2ce7a096e053.png
http://www.educity.cn/article_images/2014-01-16/dff2458f-e47a-4eda-bcdd-2ce7a096e053.png

http://www.educity.cn/article_images/2014-01-16/41b357fe-ffaf-4e9b-9164-bf4f25778d16.png
（5）互斥事件。如果A、B是两个事件，且A和B与不可能同时发生，则称与为互斥事件，也称互不相容事件。逆事件一定是互斥事件，但互斥事件不一定互为逆事件。
2. 概率
在不变的条件下，重复做n次试验，设n次试验中事件A发生m次。如果当n很大时，频率m/n稳定地在某一数值p的附近摆动，而且随着n的增大，这种摆动的幅度越小，则称数值m/n为事件A的概率，记作P(A)=p。
（1）概率的基本性质

http://www.educity.cn/article_images/2014-01-16/f9023a87-44ec-4bb6-b449-c3a2a26d2476.png
（2）条件概率和事件的独立性
如果A,B是两个事件，且P(A)>0，称


http://www.educity.cn/article_images/2014-01-16/ca61b1da-0f86-4bf4-9a29-a03ecea830a9.png
为事件A发生的条件下事件B的条件概率。
如果P(AB)=P(A)P(B)，则称A与B相互独立。
容易推出，A与B相互独立当且仅当P(B|A)=P(B)。也就是说，A与B相互独立意味着B发生的概率与A是否发生无关。同样，A发生的概率与B是否发生也无关。
对于n个事件A1,A2,...,An，如果对任意的1≤k≤n和1≤i1＜i2＜...＜ik≤n，都有
P(Ai1Ai2...Aik)=P(Ai1)P(Ai2)...P(Aik)
则称这n个事件A1,A2,...,An相互独立。
【例】根据张工的经验，在系统开发中，用户提出界面修改的需求出现得比较频繁。在他参与的3个不同行业的系统开发中，“用户提出界面修改”出现的概率相等，若已知“用户提出界面修改”至少出现一次的概率为19/27，求“用户提出界面修改”在一个系统开发中出现的概率。
【解】令A表示事件“用户提出界面修改”，“3个不同行业的系统开发”可以看作是3次独立试验。设事件A在一次试验中出现的概率为p，Ai(i=1,2,3)表示“事件A在第i次试验中出现”这一事件，则P(Ai)=p。注意到事件“A至少出现一次”的逆事件是“A一次也不出现”，即。根据题意和互逆事件的概率性质，有：
http://www.educity.cn/article_images/2014-01-16/5f685ff7-e0d5-4e13-a09a-e18a20707acf.png

http://www.educity.cn/article_images/2014-01-16/6721cc1d-8c39-4efb-8037-8346611a8a1a.png
又因为Ai相互独立，所以

http://www.educity.cn/article_images/2014-01-16/7d112ccb-47c5-43bf-ac34-46504c2075d0.png
因此，

http://www.educity.cn/article_images/2014-01-16/0c1ccc3c-e724-43cf-b5ff-4536059474db.png
解得p=1/3 。
（3）加法公式

http://www.educity.cn/article_images/2014-01-16/1d994518-296c-4f82-b892-531ecf759b79.png
（4）乘法公式
设P(A)>0，则
P(AB)=P(A)P(B|A)
设P(A1A2...An-1)>0，则
P(A1A2...An)=P(A1)P(A2|A1)P(A3|A1A2)...P(An|A1A2...An-1)
【例】袋中放有a(a≥3)个红球和b个白球，求连取三球（无放回）均为红球的概率。
【解】设Ai(i=1,2,3)表示事件“第i次取的是红球”，根据乘法公式，

http://www.educity.cn/article_images/2014-01-16/aa53266f-2d9c-40de-a730-e6316300e07b.png
（5）全概率公式
如果n个事件B1,B2,...,Bn两两互斥，且，则称这N个事件是一个完全事件组。设B1,B2,...,Bn是一个完全事件组，且 P(Bi)>0（1≤i≤n），则
http://www.educity.cn/article_images/2014-01-16/22a14a3b-f01f-4f68-a633-044328f736b7.png

http://www.educity.cn/article_images/2014-01-16/3efc439c-4dd3-4194-87c0-e5fbcc23f773.jpg
【例】设一仓库中有10箱同种规格的产品，其中由甲、乙、丙三厂生产的分别有5箱、3箱、2箱，三厂产品的废品率依次为0.1、0.2、0.3。从这10箱产品中任取一箱，再从这箱中任取一件产品，求取得的正品概率。
【解】令A表示事件“取得的产品为正品”，B1,B2,B3分别表示事件“任取一件产品是甲、乙、丙厂生产的”。显然，B1,B2,B3是一个完全事件组。根据全概率公式，

http://www.educity.cn/article_images/2014-01-16/27982ff6-1903-45b8-8b78-226f41772c7c.png
（6）贝叶斯（Bayes）公式
如果B1,B2,...,Bn是一个完全事件组，且P(Bi)>0（1≤i≤n）。又设P(A)>0，则对每一个k=1,2,...n，有


http://www.educity.cn/article_images/2014-01-16/0a2b527a-1f2d-401b-84a0-a3e8af85fca2.png
【例】某公司的员工中有40％是男性，80％的男性员工和70％的女性员工都通过了了程序员考试，并且有1人进入了全国前50名，请问，此员工是男性的概率是多少？
【解】令A表示事件“该员工通过了程序员考试”，B表示事件“该员工是男性”。显然，是一个完全事件组。根据全概率公式，
http://www.educity.cn/article_images/2014-01-16/b16c4659-515c-40b9-888d-02af3ce3323e.png

http://www.educity.cn/article_images/2014-01-16/4c2af19d-180d-4247-86ec-8e29f81d26d4.png
再根据贝叶斯公式

http://www.educity.cn/article_images/2014-01-16/39131537-2260-43b6-b537-06bfece802f8.png
（7）伯努利二项概率公式
在相同的条件下，将同一试验重复做n次，且这n次试验是相互独立的，每次试验的结果只有两种可能，这样的n次试验称作伯努利（Bernoulli）概型。
在伯努利概型中，如果事件A在每次试验中发生的概率为p，则在n次试验中事件A恰好发生k(0≤k≤n)次的概率为

http://www.educity.cn/article_images/2014-01-16/0bb4c166-4099-47be-bd00-eab2bd2064c3.png
2.7.2 随机变量及其分布
已学习
2.7.2 随机变量及其分布
2.7.1节讨论了随机事件的概率，但是，一种随机现象含有的随机事件不止一个，为了全面刻画随机现象，揭示随机现象的统计规律，需要引入随机变量的概念。

https://img.ixueyi.net/images/px_vc/2022-06/934/5CUCDGAm9a.png
1. 离散型随机变量

https://img.ixueyi.net/images/px_vc/2022-06/504/JpBbWK3pU9.png
2. 连续型随机变量

https://img.ixueyi.net/images/px_vc/2022-06/788/H3SqCEdTh5.png
3. 二维离散型随机变量

https://img.ixueyi.net/images/px_vc/2022-06/27/HqqmWZs8kg.png
4. 二维连续型随机变量

https://img.ixueyi.net/images/px_vc/2022-06/996/6yJLMUCyyN.png

2.7.3 随机变量的数字特征
已学习
2.7.3 随机变量的数字特征
分布函数可以完整地描述随机变量的统计规律，但在实际问题中，要求出分布函数并非易事。在许多常见的分布中都有一些参数，参数确定则分布函数随之确定。所谓数字特征，是指与随机变量分布相关的一些特征数，它们能够反映这些分布在某些方面的重要特性，并且决定这些分布中的参数。
1. 数学期望

http://www.educity.cn/article_images/2014-01-16/431b0298-da0c-43c3-92f3-0ef670e71044.jpg
2. 方差

http://www.educity.cn/article_images/2014-01-16/cca05a30-1849-405b-a949-f71bfe56c4c9.jpg
2.7.4 常用分布
已学习
2.7.4 常用分布
为了便于查询，本节把常用的分布及相关数字特征进行归类，包括离散型的分布和连续型的分布。
1. 0-1分布
0-1分布也称为伯努利分布。在实际问题中，凡是只考虑两个可能结果的随机试验，例如，抛掷一枚硬币观察正反面、测试某系统的质量指标是否合格、新生婴儿的性别登记等，都可以用0-1分布来描述。
0-1分布的概率分布函数为：

http://www.educity.cn/article_images/2014-01-16/0ada3a42-3c38-4cf7-b51d-18efaeb4bc05.jpg
【例】设某一机器加工一种产品的次品率为0.1。检验员每天检验4次，每次随机地抽取5件产品进行检验。如果发现多于1件次品，就要调整机器。求一天中调整机器次数的概率分布及数学期望。

http://www.educity.cn/article_images/2014-01-16/83bc4a70-ecac-40a8-9eec-b33cab5aaaa2.jpg

http://www.educity.cn/article_images/2014-01-16/fba9703d-8783-4e8c-98d6-b7345664c228.jpg
4. 泊松分布
泊松（Poisson）分布可作为描述大量试验中稀有事件出现次数的概率分布的数学模型。例如，数字通信中的误码数、大批量产品中不合格品数、原子蜕变放射出的粒子数都可用服从泊松分布的随机变量来表示。
泊松分布的概率分布函数为：

http://www.educity.cn/article_images/2014-01-16/627ef305-283c-4aed-b5b8-d8b67dfbddc4.jpg

http://www.educity.cn/article_images/2014-01-16/2ba49f79-761f-49c3-95da-86ecea911eb1.jpg

S/T的期望值为:

http://www.educity.cn/article_images/2014-01-16/0a3a927a-4689-4555-b156-ec72dd76ef9a.jpg
6. 标准正态分布
正态分布是概率论中最重要的一种分布。例如，测试的误差、一批产品的质量指标、项目的进度等都服从或近似服从正态分布。一般来说，如果影响某一数量指标的随机因素很多，而每个因素相互独立且所起的作用都不太大，则可认为这个指标服从正态分布。

http://www.educity.cn/article_images/2014-01-16/9ab2e754-d17e-4ffc-869a-f409fc39267a.jpg
2.7.5 常用统计分析方法
已学习
2.7.5 常用统计分析方法
数理统计以概率论为理论基础，收集、整理试验或观察得到的数据，将获得的数据进行分析和推理，从而对研究对象的客观规律作出合理的估计和判断。

http://www.educity.cn/article_images/2014-01-16/44b4d0dc-8bca-4de8-991c-1bcdf0458ed8.jpg
（3）样本标准差。样本标准差等于样本方差开平方，计算公式如下（第1个公式称为修正样本标准差）：

http://www.educity.cn/article_images/2014-01-16/b4eb022b-8dc8-44f9-99e3-b5ef86c4866c.jpg
2. 参数估计
统计推断的基本问题大致可以分为两类，一类是估计问题，另一类是假设检验问题。对于参数估计问题，根据样本所提供的信息，对总体分布中含有的未知常数（称其为参数）进行估计，也就是从样本出发构造一些统计量作为总体某些参数的估计量。当取得一个样本值时，就以相应的统计量的值作为总体参数的估计值。最常估计的参数是总体的数学期望和方差。
根据实际问题的需要，参数估计的形式又可分为点估计和区间估计。
（1）点估计。估计值是一个数，表现为实数轴上的一个点，故这种做法通常又称为参数的点估计或定值估计。一般情况下，不区分估计量与估计值，统称为估计。点估计给人们一个明确的数量概念，比较直观，容易理解和接受，在实际估计中经常被采用。进行参数的点估计和构造估计量有直接的关系，同一个参数，同一组样本值，采用不同的估计量得到的估计值是不同的。因此，如何构造估计量是至关重要的，常用方法有矩估计法和极大似然估计法。矩估计法是用样本矩作为相应的总体矩的估计，从而得到总体分布参数估计的一种估计方法。在运用矩估计法时，并不一定需要事先知道总体的分布，另外，一个参数的矩估计量也不一定是唯一的；极大似然估计法是参数估计的一个最重要的方法，它建立在极大似然原理的基础上。极大似然原理的直观描述是：一个随机试验如有若干个可能的结果A，B，C，…。若在一次试验中，结果A出现，则一般认为试验条件对A出现有利，也即A出现的概率很大。
（2）区间估计。用数轴上的一个数据区间（a,b）表示总体参数的可能范围。区间估计是从点估计值和抽样标准出发，按给定的概率值建立包含待估计参数的区间，其中这个给定的概率值称为置信度或置信水平，这个建立起来的包含待估计函数的区间称为置信区间。置信区间是在某一置信水平下，样本统计值与总体参数值间的误差范围。置信区间越大，置信水平就越高。划定置信区间的两个数值分别称为置信下限（a）和置信上限（b）。
3. 假设检验
假设检验是根据原资料作出一个总体指标是否等于某一个数值，某一随机变量是否服从某种概率分布的假设，然后利用样本资料采用一定的统计方法计算出有关检验的统计量，依据一定的概率原则来判断估计数值与总体数值（或者估计分布与实际分布）是否存在显着差异，是否应当接受原假设选择的一种检验方法。
假设检验主要强调的是根据样本的信息对总体分布是否具有指定的特征进行合理的判断，是接受还是拒绝。一般地，将关于总体的未知分布所作的各种论断称为统计假设，简称为假设。针对总体分布的未知参数作出的假设称为参数假设，针对总体的分布作出的假设称为非参数假设。通常所说的假设检验主要是针对参数假设检验而言的。常用的假设检验方法有U检验法、t检验法、检验法、F检验法等。
用样本指标估计总体指标，其结论有的完全可靠，有的只有不同程度的可靠性，需要进一步加以检验和证实。这里必须明确，进行检验的目的不是怀疑样本指标本身是否计算正确，而是为了分析样本指标和总体指标之间是否存在显着差异。从这个意义上，假设检验又称为显着性检验。
4. 回归分析
回归分析是处理两个及两个以上变量之间相关关系的一种基本方法。在现实世界中，变量之间的关系可以分为两类，一类是变量之间有确定性关系，也就是函数关系；另一类是变量之间有一定的关系，由于错综复杂的原因或者不可避免的误差等原因，这种关系无法用定性的模型描述。实际上，即使是具有确定关系的变量之间由于试验误差、测量误差等随机因素的影响，其表现形式也会具有某种程度的不确定性。
根据研究目的，常把具有相关关系的变量区分为因变量和自变量，这时因变量被看作是随机变量，而自变量可能是随机变量，也可能是可以人为控制或测量的非随机变量（一般变量）。回归分析按照涉及的自变量的多少，可分为一元回归分析和多元回归分析；按照自变量和因变量之间的关系类型，可分为线性回归分析和非线性回归分析。如果在回归分析中，只包括一个自变量和一个因变量，且二者的关系可用一条直线近似表示，这种回归分析称为一元线性回归分析；如果回归分析中包括两个或两个以上的自变量，且因变量和自变量之间是线性关系，则称为多元线性回归分析。
回归分析的主要内容为：
（1）从一组数据出发确定某些变量之间的定量关系式，即建立数学模型并估计其中的未知参数。估计参数的常用方法是最小二乘法。有关数学建模的方法，将在2.12节中介绍。
（2）对这些关系式的可信程度进行检验。
（3）在许多自变量共同影响着一个因变量的关系中，判断哪个（或哪些）自变量的影响是显着的，哪些自变量的影响是不显着的，将影响显着的自变量选入模型中，而剔除影响不显着的变量，通常用逐步回归、向前回归和向后回归等方法。
（4）利用所求的关系式对某一生产过程进行预测或控制。
5. 方差分析
一个复杂的事物，其中往往有许多因素互相制约又互相依存。方差分析的目的是通过数据分析找出对该事物有显着影响的因素，各因素之间的交互作用，以及显着影响因素的最佳水平等。方差分析是在可比较的数组中，把数据间的总的“变差”按各指定的变差来源进行分解的一种技术。对变差的度量，采用离差平方和。方差分析方法就是从总离差平方和分解出可追溯到指定来源的部分离差平方和，这是一个很重要的思想。
方差分析的基本思想是，通过分析不同来源的变异对总变异的贡献大小，从而确定可控因素对研究结果影响力的大小。经过方差分析，若拒绝了检验假设，只能说明多个样本总体均值不相等或不全相等。若要得到各组样本均值之间更详细的信息，应在方差分析的基础上进行多个样本均值的两两比较。
方差分析主要用于均值差别的假设检验、分离各有关因素并估计其对总变异的作用、分析因素间的交互作用、方差齐性检验。应用方差分析对数据进行统计推断之前应注意其使用条件，包括：
（1）可比性。如果数据中各组数本身不具可比性，则不适用方差分析。
（2）正态性。即偏态分布数据不适用方差分析。对偏态分布的数据应考虑用对数变换、平方根变换、倒数变换、平方根反正弦变换等变换方法，把它转换为正态或接近正态后再进行方差分析。
（3）方差齐性。若各方差之间在给定显着性水平没有显着性差异，则称为方差齐性，也称为等方差性、同方差性或方差一致性。如果数据中各组数之间的方差不齐，则不适用方差分析。
根据数据设计类型的不同，有以下两类方差分析的方法，它们的基本步骤相同，只是变异的分解方式不同。
（1）单因素方差分析。用于完全随机设计的多个样本均值间的比较，其统计推断是推断各样本所代表的各总体均值是否相等。完全随机设计不考虑个体差异的影响，仅涉及一个处理因素，但可以有两个或多个水平，所以也称为单因素试验设计。在试验中按随机化原则将受试对象随机分配到一个处理因素的多个水平中去，然后观察各组的试验效应；在观察研究（调查）中按某个研究因素的不同水平分组，比较该因素的效应。
（2）双因素方差分析。在实际问题的研究中，有时需要考虑两个因素对试验结果的影响，就属于双因素方差分析的内容。双因素方差分析是对影响因素进行检验，究竟是一个因素在起作用，还是两个因素都起作用，或是两个因素的影响都不显着。双因素方差分析有两种类型，一个是无交互作用的双因素方差分析，它假定因素A和因素B的效应之间是相互独立的，不存在相互关系；另一个是有交互作用的双因素方差分析，它假定因素A和因素B的结合会产生出一种新的效应。
6. 正交试验法
在开发和科研中，为了研制新产品，改进开发技术，需要做许多的多因素试验。在方差分析中，对于一个或两个因素的试验，可以对不同因素的所有可能的水平组合做试验，这叫做全面试验。当因素较多时，虽然理论上仍可采用方差分析，但是，在实际中有时会遇到试验次数太多的问题，设计全面的试验往往耗时、费力，从而很难做到。因此，如何设计多因素试验方案，选择合理的试验设计方法，使之既能减少试验次数，又能收到较好的效果，是需要解决的问题。正交试验法就是研究与处理多因素试验的一种有效方法。
正交试验法利用正交表来对试验进行整体设计、综合比较、统计分析，实现通过少数的试验次数找到较好的生产条件，以达到最高生产工艺效果。在正交表中，每一列中不同的数字出现的次数相等，任意两列中数字的排列方式齐全而且均衡。这充分体现了正交表的两大优越性，即“均衡分散，整齐可比”。通俗的说，每个因素的每个水平与另一个因素各水平各碰一次，这就是正交性。因此，正交表能够在因素变化范围内均衡抽样，使每次试验都具有较强的代表性。由于正交表具备均衡分散的特点，保证了全面试验的某些要求，这些试验往往能够较好或更好地达到试验的目的。
2.8 图论应用
在现实世界中，有很多现象、事物、状态都可以用图形来描述，许多学科都以图论作为工具来研究和解决问题。例如，在软件开发中，各项任务之间怎么衔接，才能使开发工作完成得既快又好。在信息系统建设中，将庞大而复杂的信息系统工程和管理问题用图来描述，可以解决很多工程设计和管理决策的最优化问题，例如，完成工程任务的时间最少、费用最省等。
2.8.0 内容介绍
已学习
在现实世界中，有很多现象、事物、状态都可以用图形来描述，许多学科都以图论作为工具来研究和解决问题。例如，在软件开发中，各项任务之间怎么衔接，才能使开发工作完成得既快又好。在信息系统建设中，将庞大而复杂的信息系统工程和管理问题用图来描述，可以解决很多工程设计和管理决策的最优化问题，例如，完成工程任务的时间最少、费用最省等。
2.8.1 最小生成树
已学习
2.8.1 最小生成树
在连通的带权图的所有生成树中，权值和最小的那棵生成树（包含图中所有顶点的树），称作最小生成树。求带权连通无向图的最小生成树的算法有普里姆（Prim）算法和克鲁斯卡尔（Kruskal）算法。
1. 普里姆算法
设已知G=（V，E）是一个带权连通无向图，顶点V={0，1，2，…，n-1}。设U是构造生成树过程中已被考虑在生成树上的顶点的集合。初始时，U只包含一个出发顶点。设T是构造生成树过程中已被考虑在生成树上的边的集合，初始时T为空。如果边（i，j）具有最小代价，且，，那么最小代价生成树应包含边（i，j）。把j加到U中，把（i，j）加到T中。重复上述过程，直到U等于V为止。这时，T即为要求的最小代价生成树的边的集合。
普里姆算法的特点是，当前形成的集合T始终是一棵树。因为每次添加的边是使树中的权尽可能小，因此，这是一种贪心的策略。普里姆算法的时间复杂度为O(n2)，与图中边数无关，适合于稠密图（边数远远大于顶点数的图）。
2. 克鲁斯卡尔算法
设T的初始状态只有n个顶点而无边的森林T=（V，φ），按边长递增的顺序选择E中的n-1安全边（u，v）并加入T，生成最小生成树。所谓安全边是指两个端点分别是森林T里两棵树中的顶点的边。加入安全边，可将森林中的两棵树连接成一棵更大的树，因为每一次添加到T中的边均是当前权值最小的安全边，这能保证最终的T是一棵最小生成树。
克鲁斯卡尔算法的特点是当前形成的集合T除最后的结果外，始终是一个森林。克鲁斯卡尔算法的时间复杂度为O(elog2e)，与图中顶点数无关，较适合于稀疏图（边数远远小于顶点数的图）。
【例】图2-2是某地区的通信线路图，假设其中标注的数字代表通信线路的长度（单位为千米），现在要求至少要架设多长的线路，才能保持6个城市的通信连通。

http://www.educity.cn/article_images/2014-01-15/3e1dd145-7e18-4381-9f7f-3587077ed633.jpg
图2-2  由线路相接的城市
【解】作为一个例子，下面使用克鲁斯卡尔算法来解答，如图2-3所示。

http://www.educity.cn/article_images/2014-01-16/2678ed31-77f5-486b-b1c3-7734b44d9799.png
图2-3  求解的过程
到了第5步，就有了多种选择，即可以选择AF，也可以选择BF，因为其路程都是300千米。图2-3给出的第6步是选择AF的结果。还有一种结果，就是在第4步时，不是选择AB，而是选择AF或者BF，则结果如图2-4所示。

http://www.educity.cn/article_images/2014-01-15/24e4a4bd-f675-4667-9f73-18afcb6f8069.jpg
图2-4  另外一种结果
从第6步的结果可以计算出，至少要架设的线路长度为200*2+300*3=1300千米。
作为一个练习，建议读者使用普里姆算法解答本题，看能得到什么样的结果。
通过这个例子可以发现，一个给定的图的最小生成树不一定是唯一的，但不管有多少棵最小生成树，其权值之和是相等的。
2.8.2 最短路径
已学习
2.8.2 最短路径
带权图的最短路径问题即求两个顶点间长度最短的路径。其中路径长度不是指路径上边数的总和，而是指路径上各边的权值总和。路径长度的的具体含义取决于边上权值所代表的意义。
1. 单源最短路径
已知有向带权图G=（V，E），找出从某个源点到V中其余各顶点的最短路径，称为单源最短路径。
目前，求单源最短路径主要使用迪杰斯特拉（Dijkstra）提出的一种按路径长度递增次序产生各顶点最短路径的算法。若按长度递增的次序生成从源点s到其他顶点的最短路径，则当前正在生成的最短路径上除终点以外，其余顶点的最短路径均已生成（将源点的最短路径看作是已生成的源点到其自身的长度为0的路径）。
迪杰斯特拉算法的基本思想是：设S为最短距离已确定的顶点集（看作红点集），V-S是最短距离尚未确定的顶点集（看作蓝点集）。
（1）初始化：初始化时，只有源点s的最短距离是已知的（SD(s)=0），故红点集S={s}，蓝点集为空。
（2）重复以下工作，按路径长度递增次序产生各顶点最短路径：在当前蓝点集中选择一个最短距离最小的蓝点来扩充红点集，以保证算法按路径长度递增的次序产生各顶点的最短路径。当蓝点集中仅剩下最短距离为的蓝点，或者所有蓝点已扩充到红点集时，s到所有顶点的最短路径就求出来了。
需要注意的是：
（1）若从源点到蓝点的路径不存在，则可假设该蓝点的最短路径是一条长度为无穷大的虚拟路径。
（2）从源点s到终点t的最短路径简称为t的最短路径；s到t的最短路径长度简称为t的最短距离，并记为SD(t)。
根据按长度递增次序产生最短路径的思想，当前最短距离最小的蓝点k的最短路径是：
源点，红点1，红点2，…，红点n，蓝点k
距离为：源点到红点n的最短距离+ <红点n，蓝点k>的边长
为求解方便，可设置一个向量D[0．．n-1]，对于每个蓝点，用D[v]记录从源点s到达v且除v外中间不经过任何蓝点（若有中间点，则必为红点）的“最短”路径长度（简称估计距离）。若k是蓝点集中估计距离最小的顶点，则k的估计距离就是最短距离，即若D[k]=min{D[i] |}，则D[k]=SD(k)。
初始时，每个蓝点v的D[c]值应为权w<s，v>，且从s到v的路径上没有中间点，因为该路径仅含一条边<s，v>。
将k扩充到红点后，剩余蓝点集的估计距离可能由于增加了新红点k而减小，此时必须调整相应蓝点的估计距离。对于任意的蓝点j，若k由蓝变红后使D[j]变小，则必定是由于存在一条从s到j且包含新红点k的更短路径：P=<s，…，k，j>。且D[j]减小的新路径P只可能是由于路径<s，…，k>和边<k，j>组成。所以，当length(P)=D[k]+w<k，j>小于D[j]时，应该用P的长度来修改D[j]的值。
【例】如图2-5所示，有一批货物要从城市s发送到城市t，线条上的数字代表通过这条路的费用（单位为万元）。那么，运送这批货物，至少需要花费多少元？

http://www.educity.cn/article_images/2014-01-15/92ae8ded-c9d2-4cb5-a9bf-1c86befb8801.jpg
图2-5  待求最少费用的图
【解】这是一个求最短路径的问题，求解过程如表2-4所示。
表2-4  求最短路径的过程

http://www.educity.cn/article_images/2014-01-15/2e8a7698-492e-4922-9f02-1d93ca1c40d1.jpg
因此，从s到t的最短路径长度为81万元，路径为s→②→③→⑤→⑥→t。
2. 每一对顶点之间的最短路径
对图中每对顶点u和v，找出u到v的最短路径问题。在实际应用中，这一问题可用每个顶点作为源点调用一次单源最短路径问题的迪杰斯特拉算法予以解决。但在理论算法上，更常用的是弗洛伊德（Folyd）提出的求每一对顶点之间的最短路径的算法。限于篇幅，本书不再介绍。
2.8.3 网络与最大流量
已学习
2.8.3 网络与最大流量
许多应用包含了流量问题。例如，公路系统中有车辆流，控制系统中有信息流，网络系统中有数据流，金融系统中有现金流等。在实际应用中，很多时候需要寻求最大流量问题。
最大流量问题是一个特殊的线性规划问题，有关线性规划的知识，请学习2.11.2节。为了便于读者理解和解答相关问题，本节不介绍有关网络与最大流量的理论知识，而是通过一个实际例子，来说明最大流量问题的基本概念和解答方法。
【例】图2-6标出了某地区的运输网，各节点之间的运输能力如表2-5所示。

http://www.educity.cn/article_images/2014-01-15/492ebaf1-860d-43ab-a351-5241318af8e2.jpg
图2-6  某地区的运输网
表2-5  各节点之间的运输能力（单位：万吨／小时）

http://www.educity.cn/article_images/2014-01-15/53e2b5dd-6a11-442e-be8c-203a3c8811ae.jpg
那么，从节点①到节点⑥的最大运输能力（流量）可以达到多少万吨/小时？
【解】为了便于计算，把表2-5中的数据标记到图2-6上，形成图形2-7。

http://www.educity.cn/article_images/2014-01-15/a1a67bbc-247b-4547-8ecf-44b717c97a3e.jpg
图2-7  新的运输网
在运输网络的实际问题中，可以看出，对于流有两个明显的要求，一是每条边（弧）上的流量不能超过该边的最大通过能力（即边的容量），二是中间节点的流量为0。因为对于每个节点，运出这个节点的产品总量与运进这个节点的产品总量之差，是这个节点的净输出量，简称为这个节点的流量。由于中间节点只起到转运作用，所以中间节点的流量为0。另外，起始点的净流出量和终点的净流入量必须相等，也是这个方案的总运输量。
在本题中，从节点①到节点⑥可以同时沿多条路径运输，总的最大流量应是各条路径上的最大流量之和，每条路径上的最大流量应是其各段流量的最小值。
解题时，每找出一条路径算出流量后，该路径上各段线路上的流量应扣除已经算过的流量，形成剩余流量。剩余流量为0的线段应将其删除（断开）。这种做法比较简单。例如，路径①③⑤⑥的最大流量为10万吨，计算过后，该路径上各段流量应都减少10万吨。从而①③之间将断开，③⑤之间的剩余流量是4万吨，⑤⑥之间的剩余流量为11万吨，如图2-8所示。

http://www.educity.cn/article_images/2014-01-15/d1f01df4-9a61-48e9-b102-c7294e9dcd0d.jpg
图2-8  ①③断开后的运输网
同理，依次执行类似的步骤：
（1）路径①②⑤⑥的剩余最大流量为6万吨。计算过后，该路径上各段流量应都减少6万吨。从而①②之间将断开，②⑤之间的剩余流量是1万吨，⑤⑥之间的剩余流量为5万吨，如图2-9所示。

http://www.educity.cn/article_images/2014-01-15/2529dfbb-c3be-47c2-99b8-02b984a66f0d.jpg
图2-9  ①②断开后的运输网
（2）路径①④⑥的剩余最大流量为5万吨。计算过后，该路径上各段流量应都减少5万吨。从而④⑥之间将断开，①④之间的剩余流量是5万吨，如图2-10所示。

http://www.educity.cn/article_images/2014-01-15/a325c500-2215-457c-8ea9-a255882baef6.jpg
图2-10  ④⑥断开后的运输网
（3）路径①④③⑤⑥的剩余最大流量为1万吨。计算过后，该路径上各段流量应都减少1万吨。从而④③之间将断开，①④之间的剩余流量是4万吨，③⑤之间的剩余流量是3万吨，⑤⑥之间的剩余流量是4万吨，如图2-11所示。

http://www.educity.cn/article_images/2014-01-15/4def99c0-06d9-4109-b134-62f0a55ca967.jpg
图2-11  ④③断开后的运输网
（4）路径①④②⑤⑥的剩余最大流量为1万吨。计算过后，该路径上各段流量应都减少1万吨。从而②⑤之间将断开，①④之间、④②之间、⑤⑥之间的剩余流量都是3万吨，如图2-12所示。

http://www.educity.cn/article_images/2014-01-15/3c69c4c1-ec96-4621-8f49-e3ed356d6ce1.jpg
图2-12  ②⑤断开后的运输网
至此，从节点①到节点⑥已经没有可通的路径，因此，从节点①到节点⑥的最大流量应该是所有可能运输路径上的最大流量之和，即10+6+5+1+1=23万吨。
按照习惯，每次应尽量先找出具有最大流量的路径。理论上可以证明，虽然寻找各种路径的办法可以不同，运输方案也可以有很多种，但总的最大流量是唯一确定的。
2.9 组合分析
组合分析是离散数学中的一个重要组成部分，它研究的对象是排列和组合问题。在排列合组合问题中，充分体现了分类、回溯的数学思想。它应用性强，具有思维抽象、分类复杂、问题交错、易出现重复和遗漏，以及不易发现错误等特征。通过学习组合分析，可以使系统分析师理解并掌握处理排列和组合问题的基本策略，提高分析和解决问题的能力，培养探索和创新意识。
2.9.0 内容介绍
已学习
组合分析是离散数学中的一个重要组成部分，它研究的对象是排列和组合问题。在排列合组合问题中，充分体现了分类、回溯的数学思想。它应用性强，具有思维抽象、分类复杂、问题交错、易出现重复和遗漏，以及不易发现错误等特征。通过学习组合分析，可以使系统分析师理解并掌握处理排列和组合问题的基本策略，提高分析和解决问题的能力，培养探索和创新意识。
2.9.1 排列和组合
已学习
2.9.1 排列和组合
组合分析的研究对象是排列和组合问题，而这些问题的研究都是以计数基本原理为前提的。
1. 计数原理基础
基本的计数原理主要包括乘法原理和加法原理。
（1）乘法原理。假设把一件事分成m个步骤来完成，做第一步有n1种不同的处理方法，做第二步有n2种不同的处理方法，……，做第m步有nm种不同的处理方法，则完成这件事共有n1×n2…×nm种不同的方法。
（2）加法原理。假设做一件事有m类办法，而在第一类办法中又有n1种不同的处理方法，在第二类办法中有n2种不同的处理方法，……，在第m类办法中有nm种不同的处理方法，则完成这件事共有n1+n2+……+nm种不同的处理方法。
【例】假设某程序语言对合法的标识符有如下规定：标识符可由两个字符组成，其中第1个字符需为英文字母，第2个字符可由英文字母或数字构成；或者标识符也可以只有一个字符，即由一个英文字母组成。请问合法的标识符数目最多有多少个？
【解】先考虑标识符由两个字符组成的情况：第1个字符为英文字母，则有26种可能，第2个字符为英文字母或数字，则有26+10=36种可能性。根据乘法原理，共有26×36=936种可能。
接下来考虑只有一个英文字母构成的标识符的情况，则只有26种可能。根据加法原理，合法的标识符总数可为936+26=962个。
2. 排列
设S为具有n个不同元素的n元集，从S中选取r个元素且考虑其顺序称为“S的一个r排列”，不同排列的总数记为Pnr，有时也用P(n,r)表示。如果r=n，则称这个排列为S的全排列。从排列的定义可知，如果两个排列相同，不仅这两个排列的元素必须完全相同，而且排列的顺序也必须完全相同。有关排列的计算公式如下：

http://www.educity.cn/article_images/2014-01-16/f5e1ca97-68aa-4104-ab3c-502daac68f93.png
【例】在某数据通信编码体系中，假设只使用A、B、C、D、E进行编码。
（1）有多少种不同的编码？
（2）如果规定A不能作为第一个字符，有多少种不同的编码？
（3）如果规定A必须排在中间，则有多少种不同的编码？
（4）如果规定A、B必须相邻，则有多少种不同的编码？
（5）如果规定C、D不相邻，则有多少种不同的编码？
（6）如果规定D、E不能出现在首个字符和最后字符，则有多少种不同的编码？
（7）如果规定A不能作为第一个字符，B不能作为最后一个字符，则有多少种不同的编码？
【解】（1）这是一个全排列的问题，共有P55=120种编码。
（2）A不能作为第一个字符，可以这样考虑，让A排在除第一个位置外的其他4个位置的任意地方，有P41种排法；然后剩下的让其他4个字符排列，有P44种排法，所以一共有P41×P44=96种编码。本小题还可以这样去解，A不能作为第一个字符，那么，把5个字母排列的方法总数，减去A在第一个字符的情况，共有P55-P44=96种编码。
（3）由于A的位置已确定，其余4个字母可任意排列，有P44=24种编码。
（4）因为A、B必须相邻，可视A、B在一起（为一个元素）与其他3个字母进行排列，有P44种排法，而A、B又有P22种排法（即AB和BA），因此，共有P22×P44=48种编码。
（5）除C、D外的其余3个字母有P33种排法，要使C、D不相邻，只有排在这3个字母的排列的空档位置，有P42种排法，所以共有P33×P42=72种编码。本小题还可以通过总的排法减去相邻的排法来求解，即P55-P22×P44=72种编码。
（6）D、E不能出现在首个字符和最后字符，则这两个位置可从其余3个字母中选2个字母来排，有P32种排法，剩下的字母有P33种排法，共有P32×P33=36种编码。
（7）A作为第一个字符，有P44种排法；B作为最后一个字符，有P44种排法。但两种情况都包含了“A作为第一个字符，B作为最后一个字符”的情况，有P33种排法。因此，共有P55-2×P44+P33=78种编码。
3. 组合
设S为具有n个不同元素的n元集，从S中选取r个元素（不考虑其顺序）称为“S的一个r组合”，不同组合的总数记为Cnr，有时也用C(n,r)或表示。
http://www.educity.cn/article_images/2014-01-16/b8dad0da-8c78-4b44-b44e-973d85114f5a.png
从排列和组合的定义可知，排列与元素的顺序有关，组合与顺序无关。如果两个组合中的元素完全相同，不管元素的顺序如何，都是相同的组合；只有当两个组合中的元素不完全相同时，才是不同的组合。有关组合的计算公式如下：

http://www.educity.cn/article_images/2014-01-16/adc2af66-4fe7-44f2-811d-20a07fb34293.png
【例】在信息系统监理中，检验产品质量时，通常是进行抽样检查，也就是从产品中抽出一部分进行检验。现从100件产品中任意抽出3件：
（1）共有多少种不同的抽法？
（2）如果100件产品中有2件次品，抽出的3件中恰好1件是次品的抽法有多少种？
（3）如果100件产品中有2件次品，抽出的3件中至少有1件是次品的抽法有多少种？
【解】（1）共有种。
http://www.educity.cn/article_images/2014-01-16/8775717f-d80c-4f4b-9ae7-f90c4f562dca.png
（2）从2件次品中抽出1件次品的抽法有C21种，从98件合格产品中抽出2件合格品的抽法有C982种。因此，抽出的3件产品中恰好有1件是次品的抽法的种数是C21×C982=2×4753=9506种。
（3）从100件产品中抽出3件，共有C1003种抽法，其中抽出的3件都是合格品的抽法有C983种。因此，抽出的3件产品中至少有1件是次品的抽法的种数有C1003-C983=161700-152096=9604种。本小题的求解过程也可以这么来考虑，从100件产品中抽出1件是次品的抽法有C21×C982种，而抽出的3件产品中有2件次品的情况也可推出其抽法有C22×C981种，因此，至少有1件是次品的抽法共有C21×C982+ C22×C981=9506+98=9604种。
2.9.2 抽屉原理和容斥原理
已学习
2.9.2 抽屉原理和容斥原理
抽屉原理又称鸽巢原理，它是组合数学的一个基本原理，最先是由德国数学家狭利克雷（Dirichlet）明确地提出来的，因此，也称为狭利克雷原理。13个人中至少有2个人是在同一个月过生日；把10个程序员安排到3个项目组中，则至少有一个项目组中有4个程序员。这些都是抽屉原理在生活和工作中的简单应用。
在计数时，必须注意无一重复，无一遗漏。为了使重叠部分不被重复计算，人们研究出一种新的计数方法，这种方法的基本思想是：先不考虑重叠的情况，把包含于某内容中的所有对象的数目先计算出来，然后再把计数时重复计算的数目排除出去，使得计算的结果既无遗漏又无重复，这种计数的方法称为容斥原理。
1. 抽屉原理
抽屉原理有多种不同形式的定义：
（1）简单形式：若n+1个物体被放进n个抽屉中，则至少有一个抽屉中有2个或2个以上的物体。
（2）推广形式：设k和n都是任意的正整数。若至少有k×n+1个物体被放进n个抽屉中，则至少有一个抽屉中有至少k+1个物体。
（3）强形式：设有p1+p2+…+pn-n+1个物体，有标号分别为1，2，…，n的抽屉，则存在至少一个标号为j的抽屉至少有pj个物体，j=1，2，…，n。
根据抽屉原理的定义，可以得出一些基本的结论：
（1）若m个物体被放进n个抽屉中，则至少有一个抽屉中有不少于个物体。
http://www.educity.cn/article_images/2014-01-16/21a95724-57ed-460d-8f9f-cf27dd2461b6.png
（2）若n×(m-1)+1个物体被放进n个抽屉，则至少有一个抽屉中有m个物体。
应用抽屉原理解题的步骤如下：
（1）分析题意。分清什么是“物体”，什么是“抽屉”。
（2）制造抽屉。这是关键的一步，根据题目条件和结论，结合有关的数学知识，抓住最基本的数量关系，设计和确定解决问题所需的抽屉及其个数，为使用抽屉铺平道路。
（3）运用抽屉原理。观察题目的假设条件，结合第（2）步，恰当应用各个原则或综合运用几个原则，以解决问题。
【例】某公司的构件库中共有3类构件，分别是界面构件、算法构件、数据处理构件。该公司的测试部门共有50名测试人员，在构件测试的过程中，规定每个人至少测试1类构件，至多测试2类构件，问至少有几名测试人员所测试的构件种类是一致的？
【解】根据题目条件，所有测试人员测试构件的配组方式共有6种，分别是{界面}、{算法}、{数据}、{界面，算法}、{界面，数据}、{算法，数据}。用这6种配组方式制造6个抽屉，将50个测试人员看作是要放进抽屉的物体。根据抽屉原理的结论（1），这里n=6，m=50，即至少有9名测试人员所测试的构件种类是完全一致的。
2. 容斥原理
在容斥原理中，要用到著名的德摩根（De Morgan）定理。因此，先介绍德摩根定理。
德摩根定理：设A1，A2，…，An是集合U的子集，则

http://www.educity.cn/article_images/2014-01-16/1ef55107-d1cf-4faa-8960-d0c2f138df95.png
容斥原理的两个基本公式如下：
（1）设A1，A2，…，An是有限集合，且都是集合U的子集，则

http://www.educity.cn/article_images/2014-01-16/8d5a7d93-5c23-4fef-a010-48965b1f5719.png
（2）设A1，A2，…，An是有限集合，且都是集合U的子集，N为集合U的元素个数，则

http://www.educity.cn/article_images/2014-01-16/3d4f4944-6a96-4a07-826e-eb96ee6bc091.png
显然，，
http://www.educity.cn/article_images/2014-01-16/45ec2fbe-c255-4a8d-a1c9-620964919c5b.png
http://www.educity.cn/article_images/2014-01-16/f460f080-cf16-4cbf-9b52-e6eb085d28f3.png
【例】某企业有350个员工，张工在获取该企业电子商务系统的需求时，针对其中一个核心小模块设计了调查表，调查表中有3个选项（分别记为M、P、C），并规定在这3个选项中可以多选。张工在收集调查表后发现，选择M、P、C的分别有170、130和120人；同时选择M和P的有45人，同时选择M和C的有20人，同时选择P和C的有22人；还有3人同时选择了M、P、C。请问该调查表的反馈率是多少？
【解】调查问卷是一种典型的需求获取方法，要使用好该方法，首先要设计好调查表，对调查表的问题进行精心研究和设计，然后就是要提高调查表的反馈率。根据题意，可以得出如下一组基本数据：

http://www.educity.cn/article_images/2014-01-16/6ffc3242-3447-4bdb-8e6c-329f99f41522.png
根据容斥原理，=170+130+120-45-20-22+3=336人。也就是说，一共有336人反馈了调查表，因为该企业有350名员工，所以调查表的反馈率为(336/350)×100%=96%。
http://www.educity.cn/article_images/2014-01-16/f1ebf3d3-08df-454a-bab1-27b7816b6d2c.png
2.10 算法的选择与应用
简单地说，算法就是为解决某个问题而设计的步骤和方法。从程序设计的角度看，算法由有限条可以执行的、有确定结果的指令组成，这些指令正确地描述了要完成的任务和它们被执行的顺序。所谓“有限”，是指计算机按照算法顺序执行指令可以在有限步结束。当然，“结束”并不等于一定可以得到问题的解。实际上，在许多情况下，问题可能是无解的。
在程序设计中，算法可以体现设计者的个人特色。解决同一个问题，不同的人会有不同的算法，甚至同一个人也可能写出不同的算法，但算法有优劣之分。衡量算法优劣的标准有两个层次，其一是算法的正确性、可靠性和易理解性，其二为执行算法所需的时间和空间。后者也被称为算法的效率，算法的复杂性主要指的就是算法的效率。当然，执行时间最少、所需存储空间最小的算法，肯定是最优算法，但“鱼”与“熊掌”往往不可兼得。在实际工作中，可根据计算机速度与主存储器（通常简称为“内存”或“主存”）状况综合考虑，采用“以时间换空间”或“以空间换时间”的策略。

2.10.0 内容介绍
开始学习
简单地说，算法就是为解决某个问题而设计的步骤和方法。从程序设计的角度看，算法由有限条可以执行的、有确定结果的指令组成，这些指令正确地描述了要完成的任务和它们被执行的顺序。所谓“有限”，是指计算机按照算法顺序执行指令可以在有限步结束。当然，“结束”并不等于一定可以得到问题的解。实际上，在许多情况下，问题可能是无解的。
在程序设计中，算法可以体现设计者的个人特色。解决同一个问题，不同的人会有不同的算法，甚至同一个人也可能写出不同的算法，但算法有优劣之分。衡量算法优劣的标准有两个层次，其一是算法的正确性、可靠性和易理解性，其二为执行算法所需的时间和空间。后者也被称为算法的效率，算法的复杂性主要指的就是算法的效率。当然，执行时间最少、所需存储空间最小的算法，肯定是最优算法，但“鱼”与“熊掌”往往不可兼得。在实际工作中，可根据计算机速度与主存储器（通常简称为“内存”或“主存”）状况综合考虑，采用“以时间换空间”或“以空间换时间”的策略。

2.10.1 非数值算法
开始学习
2.10.1 非数值算法
可以分为数值算法和非数值算法。数值算法用于解决一般数学解析方法难以解决的问题，例如，求超越方程的根、求定积分、解微分方程等；非数值算法用于对非数值信息进行查找、排序等。
1. 查找算法
查找是指根据给定的某个值，在表中（假设有n个记录）确定一关键字等于给定值的记录或数据元素，如果表中存在这样的记录，则称查找是成功的；如果表中不存在关键字等于给定值的记录，则称为查找不成功。
（1）顺序查找。从表中的第1个记录开始，逐个进行记录关键字与给定值的比较。
这种方法比较简单，适用于任何表结构，其缺点是查找效率比较低。查找成功时，平均查找长度为(n+1)/2；查找不成功时，平均查找长度为n+1。
（2）折半查找。也称为二分法查找，首先确定待查记录所在的范围（区间），与中间元素进行比较，然后再逐步缩小范围直到找到或查找不到该记录为止。这种方法只适用于对有序表的查找，查找效率较高，平均查找长度为log2(n+1)-1，查找成功时和给定值进行比较的关键字个数最多不超过。
http://www.educity.cn/article_images/2014-01-16/a251fd0c-d710-47ad-aa05-baedce7810d9.png
（3）分块查找。首先确定要查找的关键字所在的数据块号，一般可采用顺序查找或折半查找方法；然后再在已确定的数据块内进行顺序查找。在进行分块查找时，必须先将数据元素组织成索引表和顺序表，索引表按关键字排序，顺序表（表本身）分块排序。
（4）哈希（Hash）查找。通过计算数据元素的存储地址进行查找的一种方法，首先用给定的哈希函数构造哈希表，然后根据选择的冲突处理方法解决地址冲突，再在哈希表的基础上执行哈希查找。哈希查找的效率与装填因子有关，装填因子=哈希表中填入的记录数/哈希表的长度。装填因子越小，发生冲突的可能性也就越小，反之亦然。
2. 排序算法
排序是数据处理中经常使用的一种重要运算。设{R1,R2,…,Rn}是由n个记录组成的序列，按照记录中某些数据项的值按递增或递减的次序，重新排列记录文件的过程，称为排序。排序中参照的数据项称为排序码。
由于待排序的记录数量不同，使得排序过程中涉及的存储器不同，可将排序方法分为两大类：一类是内部排序，指的是待排序记录存放在计算机随机存储器中进行的排序过程；另一类是外部排序，指的是待排序记录的数量很大，以致内存一次不能容纳全部记录，在排序过程中尚需对外存进行访问的排序过程。
（1）插入排序。每一步都将一个待排序记录按其排序码的大小插入到前面已排好序的序列的适当位置上，直到全部记录插完为止。如果在已排好序的序列中找插入位置时用顺序查找方法，则称为直接插入排序；如果在已排好序的序列中找插入位置时用折半查找方法，则称为折半插入排序。直接插入排序的比较次数为O(n2)，移动次数也为O(n2)，平均时间复杂度和最坏情况下的时间复杂度均为O(n2)；折半插入排序的比较次数为O(nlog2n) ，移动次数仍为O(n2)，平均时间复杂度和最坏情况下的时间复杂度均为O(n2)。
（2）简单选择排序。反复从还未排好序的记录中选出排序码最小（或最大）的记录，顺序地放在已排序的记录序列的最后，直到全部排完。选择排序的比较次数为O(n2)，移动次数也为O(n2)，平均时间复杂度和最坏情况下的时间复杂度均为O(n2)。
（3）冒泡排序。将待排序的记录顺次两两比较，若为逆序则进行交换。将序列照此方法从头到尾处理一遍，称作一趟冒泡。一趟冒泡的效果是将排序码最大（或最小）的记录交换到了最后的位置，即该记录的排序最终位置。若某一趟冒泡过程中没有发生任何交换，则排序过程结束。冒泡排序的比较次数为O(n2)，移动次数也为O(n2)，平均时间复杂度和最坏情况下的时间复杂度均为O(n2)。
（4）快速排序。又称为分区交换排序，是对冒泡排序的一种改进。其基本方法是：
在待排序序列中任取一个记录，以它为基准用交换的办法将所有的记录分成两部分，排序码比它小的在一个部分，排序码比它大的在另一个部分。再分别对两个部分实施上述过程，一直重复到排序完成。快速排序的平均时间复杂度为O(nlog2n)，在最坏情况下的时间复杂度同为O(n2)。
（5）希尔排序。又称为缩小步长法，是对插入排序的一种改进。使用插入排序法，如果原来的顺序好，排序效率就高。但在插入排序中，每插入一个记录，有序序列的长度仅增加1，且对插入下一个记录没有提供任何帮助。希尔排序法的基本思路是，将插入排序按某种规则分为若干趟进行，使后一趟的插入排序可以充分利用前一趟的排序结果。希尔排序的分析是一个复杂的问题，因为它的时间是所取增量序列的函数，这涉及一些数学上尚未解决的问题。
（6）堆排序。堆排序是一种树形选择排序，是对选择排序的有效改进。所谓堆，就是一个数值序列(K1,K2 ,...,kn) ，它具有如下特性：

http://www.educity.cn/article_images/2014-01-15/56b1dd10-1b4b-463b-aed7-2b923f0357e8.jpg
如果把堆看作是一棵完全二叉树节点的层次序列，则此完全二叉树任一结点的值都小于或等于它的两个子结点的值。显然，具有此特性的完全二叉树的任何一棵子树都对应于一个堆。堆排序的基本思想是：对一组待排序的记录，首先将其排序码按堆的定义排成一个序列（称为建堆），这就找到了排序码最小（最大）的记录。将此记录取出，用其余的记录再建堆，便得到排序码次最小（次最大）的记录。如此反复进行，直到将全部记录排好序为止。堆排序平均时间复杂度和最坏情况下的时间复杂度均为O(nlog2n)。
（7）归并排序。归并排序是指将两个或两个以上的有序子序列合并成一个新的有序序列的过程。其基本思想是：归并时只要比较各子序列的第一个记录的排序码，最小的一个就是排序后的第一个记录。取出这个记录，继续比较各子序列的第一个记录，便可找出排序后的第二个记录。如此继续下去，只要经过一遍扫描，就得结果。归并排序平均时间复杂度和最坏情况下的时间复杂度均为O(nlog2n)。
（8）外排序。排序过程中，内存只存储文件的一部分记录，整个排序过程需进行多次内外存间的交换。外排序多使用归并排序法，一般分两步进行。第一步，建立外排序所用的内存缓冲区，并根据其大小将输入文件划分为若干段，用某种有效的内排序方法，对各段进行排序。这些经过排序的段叫做初始归并段，当它们生成后就被写到外存中去；第二步，对第一步形成的归并段用某种归并方法进行一趟趟的归并，使文件中的有序段越来越长，直到整个文件成为一个有序段为止。
2.10.2 数值算法
开始学习
2.10.2 数值算法
数值计算的过程首先需要建立科研和工程设计中所提出的实际问题的数学模型，再用数值方法来求解相应数学问题，并以某种计算机能理解的语言来描述相应算法，上机运算并求出计算结果，最后还要验证结果的正确性。
数值计算方法是研究运用计算机去求解各种数学问题的算法及相关问题，它已经成为当今数学科学的重要内容和组成部分，称为计算数学。计算数学的学习不同于一般的理论数学，需要借助计算工具，复杂的、运算量较大的问题还得借助于计算机求解。
1. 误差分析
从求解实际问题到最后得出解答是一个逐步近似的过程。每一步都可能，甚至必然产生误差，因此，有必要对求解过程可能产生的误差进行分析，并在分析中对解的正确性进行估计和判断。
（1）模型误差。用数学方法解决一个具体的实际问题，首先要建立数学模型，这就要对实际问题进行抽象、简化，因而数学模型本身总含有误差，这种误差叫做模型误差。
（2）观测误差。在数学模型中通常包含各种各样的参变量，如温度、长度、电压等，这些参数往往都是通过观测得到的，因此也带来了误差，这种误差叫做观测误差。
（3）截断误差。当数学模型不能得到精确解时，通常要建立一套行之有效的数值方法求它的近似解，近似解与准确解之间的误差就称为截断误差或方法误差。
（4）舍入误差。由于在计算机中浮点数只能表示实数的近似值，因此，用计算机进行实际计算时每一步都可能有误差，这种误差称为舍入误差。
（5）过失误差。由于人为的原因所造成的误差。例如，抄写公式出错、程序编制出错、输入错误等。
（6）绝对误差。设x*为准确值x的一个近似值，则x-x*称为绝对误差。通常无法知道准确值，也不能算出误差的准确值，只能根据测量或计算估计出误差的绝对值不超过某个正数a，则称a为绝对误差限。有了绝对误差限，就可知道x的范围，即落在[x-a，x+a]区间内。
（7）相对误差。绝对误差是误差度量的一种标准，但不能完全刻画出近似数的精确程度。例如，甲程序员每百行代码出现1个错误，乙程序员每千行代码出现1个错误，他们的错误都是1个，但显然乙要准确些。通常，把绝对误差与准确值的比值(x-x*)/x称为相对误差。相对误差可正可负，它的绝对值的上界叫做相对误差限。
2. 穷举搜索法
穷举搜索法也称为逐一验证法，是对可能是解的众多候选解按某种顺序逐一枚举和检验，从而找出那些符合要求的候选解。穷举搜索法简单易行，当变量个数不多且每个变量取值个数也不多的情况下，使用这种方法是非常有效的。对于复杂问题，如果找不到更好的算法，计算机的速度和容量又允许，也可以使用穷举搜索法。
穷举搜索法的要点在于“穷举”，即必须列出所有可能的候选解，并用逻辑表达式表达清楚，特别应注意边界条件和组合条件。当候选解可能取无限个值时，不能使用穷举搜索法。当候选解取值虽为有限但取值空间非常大时，虽然从理论上也可以用穷举搜索法，但考虑到计算机硬件条件的限制，可能不得不将方法优化或采用别的办法。
在实际工作中，有些问题的候选解空间虽为无限，但允许一定误差，在没有其他更好办法的情况下，也可采用化“无限”为“有限”的办法，使用穷举搜索法找出最近似的解。例如，某个问题的解空间为[0,1]，如果允许的解误差为0.01％，则无限解空间[0,1]就变成了有限解空间｛0.0000，0.0001，0.0002，……，0.9999，1.0000｝，这时，就可以使用穷举搜索法。
3. 迭代法
迭代法是用于求方程或方程组近似根的一种常用算法。其基本思想是：从某个点出发，通过某种方式求出下一个点，此点应该离方程（组）的解更近一步，当两者之差接近到可以接受的精度范围时，就认为找到了问题的解。迭代法又分为精确迭代和近似迭代，二分法和牛顿迭代法都属于近似迭代法。
迭代算法是用计算机解决问题的一种基本方法。它利用计算机运算速度快、适合做重复性操作的特点，让计算机对一组指令（或一定步骤）进行重复执行，在每次执行这组指令（或这些步骤）时，都从变量的原值推出它的一个新值。利用迭代算法解决问题，需要做好以下三个方面的工作：确定迭代变量、建立迭代关系式、对迭代过程进行控制。
4. 递推法
递推法是利用问题本身所具有的一种递推关系求解问题的一种方法。递推法的关键是找出递推关系式，并确定初值。递推法是一种简单有效的方法，一般用此方法编写的程序执行效率很高。递推算法分为顺推和逆推两种。顺推法是从已知条件出发，逐步推算出要解决的问题；逆推法从已知问题的结果出发，用迭代表达式逐步推算出问题开始的条件，即顺推法的逆过程。
与递归法相比，递推法免除了数据进栈和出栈的过程。也就是说，不需要函数不断地向边界值靠拢，而直接从边界出发，直到求出函数值。由此可见，递推的效率要高一些，在可能的情况下应尽量使用递推。
5. 递归法
递归法可以看作是递推法的扩展和延伸。用递归法写出的程序简单易懂，但与递推法相比，往往效率不高，因为每一次递归函数调用都要压栈占用内存，而计算机的内存是有限的。与递推法一样，递归法的关键是找出递归关系式，并确定初值。应当注意，递归关系式并不一定是一个数学表达式，也可以用自然语言或形式语言描述，只要将递归关系表达清楚即可。初值也不一定是数值，它只是代表一种已知的或容易确定的基本元素，有时甚至代表一种已知的算法。
程序设计中的递归分为定义递归和过程递归。定义递归是指在数据结构或函数的定义中使用了递归；过程递归是指在程序执行过程中使用了递归。程序执行过程中有时只在满足某种条件的情况下才能执行递归，这种递归被称为有条件递归；有些递归并不以直接的形式表现出来，而是通过“第二者”、“第三者”（另外的数据结构或函数）以间接形式表现出来，这种递归称为间接递归。
设计递归时要注意，应确保每次递归后都朝既定目标更近了一步，而且经过有限步就能达到目标。考虑到计算机的速度和容量，这有限步的步数也要根据实际情况加以限制。
6. 分治法
分治法的基本思想是“分而治之”，就是把一个复杂的问题分成两个或更多的相同或相似的子问题，再把子问题分成更小的子问题，……，直到最后子问题可以简单的直接求解，原问题的解即子问题解的合并。这个技巧是很多高效算法的基础，例如，快速排序、归并排序、傅立叶变换等都使用了这个方法。
分治法需要把大问题分解成许多小问题，而小问题若仍不够小还得不到解时，需要再分解成更小的问题，因此，分治法经常需要与递归法结合使用。
分治法所能解决的问题一般具有几个特征：
（1）该问题的规模缩小到一定的程度就可以容易地解决；
（2）该问题可以分解为若干个规模较小的相同问题，即该问题具有最优子结构性质；
（3）利用该问题分解出的子问题的解可以合并为该问题的解；
（4）该问题所分解出的各个子问题是相互独立的，即子问题之间不包含公共的子子问题。
第一条特征是绝大多数问题都可以满足的，因为问题的计算复杂性一般是随着问题规模的增加而增加；第二条特征是应用分治法的前提，它也是大多数问题可以满足的，此特征反映了递归思想的应用；第三条特征是关键，能否利用分治法完全取决于问题是否具有第三条特征，如果具备了第一条和第二条特征，而不具备第三条特征，则可以考虑用贪心法或动态规划法；第四条特征涉及到分治法的效率，如果各子问题是不独立的，则分治法要做许多不必要的工作，重复地解公共的子问题，此时虽然可用分治法，但一般用动态规划法更好。
分治法在每一层递归上都有3个步骤：
（1）分解：将原问题分解为若干个规模较小、相互独立、与原问题形式相同的子问题；
（2）解决：若子问题规模较小而容易被解决则直接解，否则，递归地解各个子问题；
（3）合并：将各个子问题的解合并为原问题的解。
7. 回溯法
回溯法又称为试探法，基本思路是：在用某种方法找出解的过程中，若中间项结果满足所解问题的条件，则一直沿这个方向搜索下去，直到无路可走或无结果，则开始回溯，改变其前一项的方向（或值）继续搜索。若其上一项的方向（或值）都已经测试过，还无路可走或无结果，则再继续回溯到更前一项，改变其方向（或值）继续搜索。若找到了一个符合条件的解，则停止或输出这个结果；否则，继续回溯下去，直到回溯到问题的开始处（不能再回溯），此时已经找到了全部的解。如果仍没有找到符合条件的解，则表示此问题无解。
用回溯法求解问题的一般步骤如下：
（1）针对所给问题，定义问题的解空间；
（2）确定易于搜索的解空间结构；
（3）以深度优先方式搜索解空间，并在搜索过程中用剪枝函数避免无效搜索。
8. 贪心法
贪心法是一种不追求最优解，只希望得到较为满意解的方法。贪心法一般可以快速得到满意的解，因为它省去了为找最优解要穷尽所有可能而必须耗费的大量时间。贪心法常以当前情况为基础作最优选择，而不考虑各种可能的整体情况，所以，贪心法不要回溯。
贪心法与动态规划法的不同之处在于，它对每个子问题的解决方案都做出选择，不能回溯。动态规划法则会保存以前的运算结果，并根据以前的结果对当前进行选择，有回溯功能。
贪心法在有最优子结构的问题中尤为有效。最优子结构的意思是局部最优解能决定全局最优解。简单地说，问题能够分解成子问题来解决，子问题的最优解能递推到最终问题的最优解。贪心法可以解决一些最优性问题，例如，求图中的最小生成树、哈夫曼编码等。对于计算机内存管理、磁盘管理或作业管理，有时为了减少计算量，也采用贪心法。一旦一个问题可以通过贪心法来解决，那么贪心法一般是解决这个问题的最好办法。由于贪心法的高效性，以及它所求得的解比较接近最优结果，因此，贪心法也可以用作辅助算法，或者直接解决一些要求结果不特别精确的问题。
使用贪心法求解问题的一般步骤如下：
（1）从问题的某个初始解出发；
（2）采用循环语句，当可以向求解目标前进一步时，就根据局部最优策略，得到一个部分解，缩小问题的范围和规模；
（3）将所有部分解综合起来，得到问题最终解。
9. 动态规划法
某些复杂问题不能简单分解成几个小问题，然后在小问题解的基础上简单综合得到问题的解，这样费时费力，重复度高，问题求解耗时会按问题规模呈幂级数增加。动态规划法的基本思想是：引入一个数组，把所有子问题的解存在其中，问题的最后解将从这个序列中得到，往往是选取概率最大的、得分最高的子问题的解综合得到问题的最后解。
动态规划法是系统分析中的一种常用方法，是解决多阶段决策过程问题的一种最优化方法。所谓多阶段决策过程，就是把研究问题分成若干个相互联系的阶段，每个阶段都作出决策，从而使整个过程达到最优化。许多实际问题利用动态规划法处理，常比线性规划法更为有效，特别是对于那些离散型问题。
动态规划的实质是分治思想和解决冗余，因此，动态规划是一种将问题实例分解为更小的、相似的子问题，并存储子问题的解而避免计算重复的子问题，以解决最优化问题的算法策略。由此可知，动态规划法与分治法和贪心法类似，它们都是将问题实例归纳为更小的、相似的子问题，并通过求解子问题产生一个全局最优解。其中贪心法的当前选择可能要依赖已经作出的所有选择，但不依赖于有待于做出的选择和子问题。因此，贪心法自顶向下，一步一步地作出贪心选择；而分治法中的各个子问题是独立的（即不包含公共的子子问题），因此，一旦递归地求出各子问题的解后，便可自下而上地将子问题的解合并成问题的解。但不足的是，如果当前选择可能要依赖子问题的解时，则难以通过局部的贪心策略达到全局最优解；如果各子问题是不独立的，则分治法要做许多不必要的工作，重复地解公共的子问题。
设计一个标准的动态规划算法，通常可按以下2个步骤进行：
（1）划分阶段：按照问题的时间或空间特征，把问题分为若干个阶段。这若干个阶段一定要是有序的或者是可排序的（即无后向性），否则问题就无法用动态规划法求解。
（2）选择状态：将问题发展到各个阶段时所处于的各种客观情况用不同的状态表示出来。状态的选择要满足无后效性，即无论当前取哪个解，对后面的子问题都没有影响。
10. 随机模拟
模拟又称为仿真，它的基本思想是：构造一个试验模型，这个模型与待研究系统的主要性能十分近似。模拟是一种定量过程，先为过程设计一个模型，然后再组织一系列的反复试验，以预测该过程全部时间里所发生的情况。
在下列情况下，可以使用模拟：
（1）由于难以观察到实际环境，模拟可能是唯一可以利用的方法；
（2）不可能求出一个数学解；
（3）实际观察一个系统的成本可能太高；
（4）不可能有足够的时间来广泛地操作该系统；
（5）对一个系统的观察可能破坏性太大。
系统模拟过程是建立模型并通过模型的运行，对模型进行检验和修正，使模型不断趋于完善的过程。进行模拟的步骤包括确定问题、收集资料、制订模型、建立模型的计算程序、鉴定和证实模型、设计模型试验、进行模拟操作和分析模拟结果。
模拟的作用主要体现在以下几个方面：
（1）能对高度复杂的内部交互作用的系统进行研究和试验；
（2）能设想各种不同方案，观察这些方案对系统的结构和行为的影响；
（3）能反映变量间的相互关系，说明哪些变量更重要，如何影响其他变量和整个系统；
（4）能研究不同时期相互间的动态联系，反映系统行为随时间变化而变化的情况；
（5）能检验模型的假设，改进模型的结构。
模拟的局限性主要表现在以下几个方面：
（1）模拟是不精确的。它选择的方案，可能遗漏掉最优方案。另外，模拟能产生一种估算答案的方法，但不能得出答案本身。
（2）并非所有的问题都可用模拟的方法来估算。它的运用范围只限于能考察的情况，一旦出现不能模拟的特殊情况时，就会发生困难；
（3）当模拟的规模很大时，较难取得资料和模拟细节；
（4）一个良好的模型成本高、费时间，工作复杂。
2.11 运筹方法
运筹学是近代应用数学的一个分支，主要是将生产、管理等事件中出现的一些带有普遍性的运筹问题加以提炼，然后利用数学方法进行解决。前者提供模型，后者提供理论和方法。运筹学可以根据问题的要求，通过数学上的分析、运算，得出各种各样的结果，最后提出综合性的合理安排，以达到最好的效果。
运筹学作为一门用来解决实际问题的学科，在处理千差万别的各种问题时，一般有以下几个步骤：确定目标、制订方案、建立模型、制订解法。

2.11.0 内容介绍
开始学习
运筹学是近代应用数学的一个分支，主要是将生产、管理等事件中出现的一些带有普遍性的运筹问题加以提炼，然后利用数学方法进行解决。前者提供模型，后者提供理论和方法。运筹学可以根据问题的要求，通过数学上的分析、运算，得出各种各样的结果，最后提出综合性的合理安排，以达到最好的效果。
运筹学作为一门用来解决实际问题的学科，在处理千差万别的各种问题时，一般有以下几个步骤：确定目标、制订方案、建立模型、制订解法。

2.11.1 网络计划技术
开始学习
2.11.1 网络计划技术
用网络分析的方法编制的计划称为网络计划，它是一种编制大型工程项目进度计划的有效方法。计划借助于网络表示各项工作与所需要的时间，以及各项工作的相互关系。通过网络分析研究工程费用与工期的关系，并找出在编制计划及计划执行过程中的关键路径，这种方法称为关键路径法（Critical Path Method，CPM）。还有一种方法，也是应用网络分析方法与网络计划，但它注重于对各项工作安排的评价和审查，这种方法称为计划评审技术（Program Evaluation and Review Technique，PERT）。
1. 关键路径
在现代管理中，人们常用有向图来描述和分析一项工程的计划和实施过程，一项工程常被分为多个小的子工程，这些子工程被称为活动。在有向图中，若以顶点表示活动，弧表示活动之间的先后关系，这样的图简称为AOV（Activity On Vertex）网；若以顶点表示事件，弧表示活动，权表示完成该活动所需的时间（称为活动历时或持续时间），这样的图称为AOE（Activity On Edge）网。例如，图2-13表示一个具有10个活动的某个工程的AOE网。图中有7个顶点，分别表示事件1～7，其中1表示工程开始状态，7表示工程结束状态。

http://www.educity.cn/article_images/2014-01-15/c046c446-6813-4bab-bd17-5c77855927b0.jpg
因AOE网中的某些活动可以并行地进行，所以完成工程的最少时间是从开始顶点到结束顶点的最长路径长度，称从开始顶点到结束顶点的最长路径为关健路径（临界路径），关键路径上的活动为关键活动。
为了找出给定的AOE网络的关键活动，从而找出关键路径，先定义几个重要的量：
（1）Ve(j)、Vl(j)：顶点j事件最早、最迟发生时间。
（2）e(i)、l(i)：活动i最早、最迟开始时间。
从源点V1到某顶点Vj的最长路径长度，称为事件Vj的最早发生时间，记作Ve(j)。Ve(j)也是以Vj为起点的出边<Vj,Vk>所表示的活动ai的最早开始时间e(i)。
在不推迟整个工程完成的前提下，一个事件Vj允许的最迟发生时间，记作Vl(j)。显然，l(i)=Vl(j)-(ai所需时间)，其中j为ai活动的终点。满足条件l(i)=e(i)的活动为关键活动，关键活动所组成的路径称为关键路径。
求顶点Vj的Ve(j)和Vl(j)可按以下两步来做：
（1）由源点开始向汇点递推

http://www.educity.cn/article_images/2014-01-16/cda40d6b-5333-4024-ab1a-91ac2edfdbfa.png
其中，E1是网络中以Vj为终点的入边集合。
（2）由终点（汇点）开始向源点递推

http://www.educity.cn/article_images/2014-01-16/12835144-0b75-437c-8dd8-c58fdca5b9f9.png
其中，E2是网络中以Vj为起点的出边集合。
要求一个AOE网的关键路径，一般需要根据以上变量列出一张表格，逐个检查。例如，求图2-13所示的AOE网的关键路径的表格如表2-6所示。
表2-6  求关键路径的过程

http://www.educity.cn/article_images/2014-01-16/98ade5dd-ac19-4310-a4a5-bfa596782573.png
因此，图2-13的关键活动为a1，a2，a4，a8和a9，其对应的关键路径有两条，分别为V1→V2→V5→V7和V1→V4→V5→V7，长度都是10。
2. 网络优化
在得到了关键路径后，就相当于得到了项目的计算工期，得到了一个初始的计划方案。但通常还要对初始方案进行调整和完善。根据计划的要求，综合考虑进度、资源、费用等目标，即进行网络优化，确定最优的计划方案。
（1）时间优化。根据对计划进度的要求，缩短工程完成时间。既可以采取技术措施，缩短工程完工时间，也可以采取组织措施，充分利用非关键活动的总时差（最迟开始时间-最早开始时间），合理调配技术力量及人、财、物等资源，缩短关键活动的持续时间。还可以通过改变工作之间的逻辑关系，采用并行的方式来缩短工期。
（2）时间-资源优化。在编制网络计划、安排工程进度的同时，就要考虑尽量合理地利用现有资源，并缩短工程周期。但是，由于一项工程所包含的活动繁多，涉及到的资源利用情况比较复杂，往往不可能在编制网络计划时，一次性把进度和资源利用都能够作出统筹合理的安排，而是需要进行几次综合平衡之后，才能得到在时间进度及资源利用等方面都比较合理的计划方案。具体的要求和做法是：优先安排关键活动所需要的资源；利用非关键活动的总时差，错开各活动的开始时间，拉平资源需要量的高峰；在确实受到资源限制，或者在考虑综合经济效益的条件下，也可以适当地推迟工程完工时间。
（3）时间-费用优化。在编制网络计划过程中，研究如何使得工程完工时间短、费用少；或者在保证既定工程完工时间的条件下，所需要的费用最少；或者在限制费用的条件下，工程完工时间最短。这就是时间-费用优化所要研究和解决的问题。为完成一项工程，所需要的费用可分为直接费用和间接费用。同时，项目有不可压缩的最短时间，也称为极限时间，它是指为了缩短各活动的持续时间而采取一切可能的技术和组织措施后，可能达到的最短的工作时间和完成项目的最短时间。在进行时间-费用优化时，需要计算活动的直接费用变动率（简称为直接费用率）：
直接费用率 = (极限时间的活动直接费用-正常时间的活动直接费用)/(正常时间-极限时间)。
3. 综合实例
下面通过一个综合实例，帮助读者理解本节的知识。
【例】 假设某信息系统开发工程合同工期为25个月，承建单位编制的网络计划图如图2-14所示。

http://www.educity.cn/article_images/2014-01-15/8d52dd72-4564-4641-89cd-975a1afa06ab.jpg
（1）该网络计划能否满足合同工期要求？为确保工程按期完工，哪些工作应作为重点对象？
（2）当该计划执行7个月后，经监理工程师检查发现，工作C和D已完成，而E将拖后2个月。当计划执行到第7个月后，工作E的实际进度是否影响总工期？如果实际进度确定影响到总工期，为保证总工期不延长对原进度计划的调整方案有哪些？
（3）如果承建单位提出采用压缩某些工作持续时间，对原计划进行调整以保证工期不延长，各工作的直接费用率及极限时间如表2-7所示。在不改变各工作逻辑关系的前提下，原进度计划的最优调整方案是什么？此时直接费用将增加多少万元？

http://www.educity.cn/article_images/2014-01-15/3b6e75c3-43c9-4be5-8c89-6336c0cfc96a.jpg
【解】 一般利用所给出的图形找出关键路径和计算工期，从而确定重点工作。
（1）在图2-14中，有2条虚线弧，它表示虚活动，即不需要任何资源（时间、费用等），只表示逻辑关系的活动。从图2-14中可以看出，关键路径为A→E→H→I→K，长度为25，也就是说，项目的计算工期为25个月，正好等于合同工期，因此，该网络计划能满足合同工期要求。为了确保工程按期完工，A、E、H、I、K工作应作为重点控制对象，因为它们为关键工作。
（2）分析拖延工作是否在关键路径上，拖延的时间是否超过工作的总时差来衡量与判断是否影响工期。因为工作E为关键工作，其总时差为0。所以，E拖延2个月将影响总工期2个月。由于工作E拖延了2个月，使总工期延长了2个月，为了保证总工期不延长，对原计划的调整方法有2种，一是改变某些工作之间的逻辑关系，二是缩短某些工作的持续时间。
（3）要调整计划，使之不延长时间，则需要调整关键路径上的工作，即A、E、H、I、K。但题目已经告诉我们，是从第7个月开始，这时A已经完成了。因此，只能选择E、H、I、K。从表2-7中可以看出，E是不可以压缩的。所以，只能压缩H、I、K。
再看表2-7，压缩直接费用率最小的为工作K，K原计划时间为6个月，极限时间为4个月，可以压缩2个月，正好可以满足要求。但是要注意，如果K压缩2个月，则会引起关键路径的变化。图2-15是K压缩1个月后的计划图。

http://www.educity.cn/article_images/2014-01-15/a621f9c0-d36b-489b-b9ee-ee9909fd4aad.jpg
从图2-15中可以看出，这时关键路径有2条，分别是A→E→H→I→K和A→E→H→I→L。因此，需要把I压缩1个月，费用为4.5万元。
综上所述，应该压缩K、I各1个月，增加费用为4.0+4.5=8.5万元。
4. 计划评审技术
PERT的理论基础是假设项目持续时间和整个项目完成时间是随机的，且服从某种概率分布。PERT可以估算整个项目在某段时间内完成的概率。由于PERT和CPM在项目的进度计划中应用非常广，因此，下面将通过一个项目实例对此技术加以介绍。
PERT对项目各个活动的完成时间按三种不同情况进行估算：
（1）乐观时间：在任何事情都很顺利的情况下，完成某项工作的时间；
（2）最可能时间：在正常情况下，完成某项工作的时间；
（3）悲观时间：在最不利的情况下，完成某项工作的时间。
PERT认为以上三个估算值服从β分布，因此，可算出每个活动的期望ti：

http://www.educity.cn/article_images/2014-01-15/204b7013-bc0f-405a-8535-2950b32f9adc.jpg
其中，ai表示第i项活动的乐观时间，mi表示第i项活动的最可能时间，bi表示第i项活动的悲观时间。通常把这种估算方法称为三点估算法。
根据β分布的方差计算方法，第i项活动的持续时间方差为：

http://www.educity.cn/article_images/2014-01-15/8163eff8-9bdd-44c6-9517-ceb3daf2f4c9.jpg
例如，某IT在线教育平台系统的建设可分解为需求分析、设计编码、测试、安装部署等4个活动，各个活动顺次进行，没有时间上的重叠，活动的完成时间估算如图2-16所示。
图2-16  工作分解和活动工期估算
http://www.educity.cn/article_images/2014-01-16/dedf700a-180a-49cf-9f0d-750ce430239b.png
图2-16中每个箭头下给出的3个数字分别代表ai、mi和bi。则各活动的期望工期和方差为：

http://www.educity.cn/article_images/2014-01-16/a68cb766-1d29-44a6-b41c-4ad1b6231f1c.png
PERT认为整个项目的完成时间是各个活动完成时间之和，且服从正态分布。整个项目完成时间t的数学期望T和方差σ2分别等于：

http://www.educity.cn/article_images/2014-01-16/b0472c78-1f1e-4894-8655-5a7d4a1bb1c7.png
标准差为：

http://www.educity.cn/article_images/2014-01-16/2e2f425d-496c-48c8-a2a6-0e71b2f0068b.png
据此，可以得出正态分布曲线，如图2-17所示。因为图2-17是正态曲线，根据正态分布规律，在±σ范围内，即在47.258～54.742天之间完成的概率为68.26%；在±2σ范围内，即在43.561～58.484天完成的概率为95.43%；在±3σ范围内，即39.774～62.226天完成的概率为99.73%。如果客户要求在39天内完成，则可完成的概率几乎为0，也就是说，项目有不可压缩的最小周期，这是客观规律。

http://www.educity.cn/article_images/2014-01-15/36a79bb8-4c34-48fb-a120-7be1dc422f81.jpg
通过查标准正态分布表，可得到整个项目在某段时间内完成的概率。例如，如果客户要求在60天内完成，那么可能完成的概率为：
如果客户要求再提前7天，则完成的概率为：

http://www.educity.cn/article_images/2014-01-16/a52274e7-f39b-4d38-b134-77a1618acfca.png
如果客户要求再提前7天，则完成的概率为：

http://www.educity.cn/article_images/2014-01-16/a877e2d0-f35b-4a37-8391-d6d8d321a0cc.png
实际上，大型项目的工期估算和进度控制非常复杂，往往需要将CPM和PERT结合使用，用CPM求出关键路径，再对关键路径上的各个活动用PERT估算完成期望和方差，最后得出项目在某一时间段内完成的概率。PERT还告诉我们，任何项目都有不可压缩的最小周期，这是客观规律，千万不能不顾客观规律而对用户盲目承诺，否则，必然会受到客观规律的惩罚。
2.11.2 线性规划
开始学习
2.11.2 线性规划
线性规划是研究在有限的资源条件下，如何有效地使用这些资源达到预定目标的数学方法。用数学的语言来说，也就是在一组约束条件下寻找目标函数的极值问题。
求极大值（或极小值）的模型表达如下：

http://www.educity.cn/article_images/2014-01-16/4b33ea46-89ce-4ef7-9821-f837169d5234.png
在上述条件下，求解x1,x2,...,xn，使满足下列表达式的z取极大值（或极小值）：

http://www.educity.cn/article_images/2014-01-16/7c8c8139-d482-47ea-92ba-d0248eb44e2f.png
1. 图解法
解线性规划问题的方法有很多，最常用的有图解法和单纯形法。图解法简单直观，有助于了解线性规划问题求解的基本原理，下面，通过一个例子来说明图解法的应用。
【例】某工厂在计划期内要安排生产I、II两种产品，已知生产单位产品所需的设备台时及A、B两种原料的消耗，如表2-8所示。
表2-8 产品及原料表

http://www.educity.cn/article_images/2014-01-16/66921a1a-f101-40b7-af7b-e2640e545cd7.png
该工厂每生产一件产品I可获利2元，每生产一件产品II可获利3元，问应该如何安排计划使该工厂获利最多？
【解】该问题可用以下数学模型来描述，设x1,x2分别表示在计划期内产品I、II的产量，因为设备的有效台时是8，这是一个限制产量的条件，所以在确定产品I、II的产量时，要考虑不超过设备的有效台时数，即可用不等式表示为
同理，因原料A、B的限量，可以得到以下不等式
该工厂的目标是在不超过所有资源限制的条件下，如何确定产量，以得到最大的利润。若用z表示利润，这时。综上所述，该计划问题可用数学模型表示为：
x1+2x2≤8
同理，因原料A、B的限量，可以得到以下不等式
4x1≤16
4x2≤12
该工厂的目标是在不超过所有资源限制的条件下，如何确定产量x1,x2，以得到最大的利润。若用z表示利润，这时z=2x1+3x2。综上所述，该计划问题可用数学模型表示为：
目标函数：
max z=2x1+3x2

满足约束条件：

http://www.educity.cn/article_images/2014-01-16/cda161fc-0cc2-4337-8cf3-2ed50776f233.png
在以x1,x2为坐标轴的直角坐标系中，非负条件x1,x2≥0是指第一象限。上述每个约束条件都代表一个半平面。例如，约束条件x1+2x2≤8代表以直线x1+2x2=8为边界的左下方的半平面。若同时满足x1,x2≥0，x1+2x2≤8，4x1≤16和4x2≤12的约束条件的点，必然落在由这三个半平面相交组成的区域内，如图2-18中的阴影部分所示。阴影区域中的每一个点（包括边界点）都是这个线性规划问题的解（称可行解），因而此区域是本题的线性规划问题的解的集合，称它为可行域。

http://www.educity.cn/article_images/2014-01-15/8789cb17-d9a4-40bd-a40f-9d620b558a0b.jpg
再分析目标函数z=2x1+3x2，在坐标平面上，它可表示以z为参数，-2/3为斜率的一族平行线：

http://www.educity.cn/article_images/2014-01-15/ac29ed27-a608-4a40-b338-5520c9580168.jpg
位于同一直线上的点，具有相同的目标函数值，因此称它为等值线。当z值由小变大时，直线沿其法线方向向右上方移动。当移动到Q2点时，使z值在可行域边界上实现最大化，这就得到了本题的最优解Q2，Q2点的坐标为（4，2）。经过计算，可以得出z=14。
这说明该厂的最优生产计划方案是：生产4件产品I，2件产品II，可得最大利润为14元。
2. 关于解的讨论
在上述例题中，得到的最优解是唯一的，但对一般线性规划问题而言，求解结果还可能出现以下几种情况：无穷多最优解（多重解），无界解（无最优解），无可行解。当求解结果出现后两种情况时，一般说明线性规划问题的数学模型有错误。无界解源于缺乏必要的约束条件，无可行解源于矛盾的约束条件。
从图解法中直观地看到，当线性规划问题的可行域非空时，它是有界或无界凸多边形。若线性规划问题存在最优解，它一定在可行域的某个顶点得到；若在两个顶点同时得到最优解，则它们连线上的任意一点都是最优解，即有无穷多最优解。
3. 单纯形法
图解法虽然直观，但当变量数多于三个以上时，它就无能为力了，这时需要使用单纯形法。
单纯形法的基本思路是：根据问题的标准，从可行域中某个可行解（一个顶点）开始，转换到另一个可行解（顶点），并且使目标函数达到最大值时，问题就得到了最优解。限于篇幅，本书不再介绍单纯形法的详细求解过程。
4. 线性规划的适用性
线性规划模型用在原材料单一、生产过程稳定不变、分解型生产类型的企业是十分有效的，例如，石油化工厂等。对于产品结构简单、工艺路线短，或者零件加工企业，有较大的应用价值。需要注意的是，对于机电类企业用线性规划模型只适用于作年度的总生产计划，而不宜用来做月度计划。这主要与工件在设备上的排序有关，计划期太短，很难安排过来。
一般来说，一个经济管理问题问题以下条件时，才能建立线性规划的模型：
（1）要求解问题的目标函数能用数值指标来反映，且为线性函数；
（2）存在着多种方案；
（3）要求达到的目标是在一定约束条件下实现的，这些约束条件可用线性等式或不等式描述。
2.11.3 决策论
开始学习
2.11.3 决策论
决策就是决定的意思，大至国家经济、政治，小到个人生活，凡是在有选择的地方就有决策。关于决策的重要性，诺贝尔奖金获得者西蒙有一句名言“管理就是决策”。这就是说，管理的核心是决策。
1. 决策的分类
从不同的角度出发，可以对决策进行不同的分类。
按性质的重要性分类，可将决策分为战略决策（涉及某组织发展和生存有关的全局性、长远问题的决策），策略决策（为完成战略决策所规定的目的而进行的决策）和执行决策（根据策略决策的要求对执行方案的选择）。
按决策的结果分类，可分为程序决策（有章可循的决策，可重复的）和非程序决策（无章可循的决策，一次性的）。
按定量和定性分类，可分为定量决策和定性决策。
按决策环境分类，可分为确定型决策（决策环境是完全确定的，作出的选择的结果也是确定的），风险决策（决策的环境不是完全确定的，其发生的概率是已知的）和不确定型决策（将来发生结果的概率不确定，凭主观倾向进行决策）。
按决策过程的连续性分类，可分为单项决策（整个决策过程只作一次决策就得到结果）和序列决策（整个决策过程由一系列决策组成）。
2. 决策过程和模型
构造决策行为的模型主要有两种，分别为面向结果的方法和面向过程的方法。面向决策结果的方法程序比较简单，其过程为“确定目标→收集信息→提出方案→方案选择→决策”。面向决策过程的方法一般包括“预决策→决策→决策后”三个阶段，其中决策阶段又可分为分部决策和最终决策两个子阶段。
任何决策问题都由以下要素构成决策模型：
（1）决策者。可以是个人、委员会或某个组织，一般指领导者或领导集体。
（2）可供选择的方案（替代方案）、行动或策略。
（3）衡量选择方案的准则。包括目的、目标、属性、正确性的标准，在决策时有单一准则和多准则。
（4）事件：不为决策者所控制的客观存在的将发生的状态。
（5）每一事件的发生将会产生的某种结果。例如，获得收益或损失。
（6）决策者的价值观。例如，决策者对货币额或不同风险程度的主观价值观念。
3. 不确定型决策
不确定型决策（非确定型决策）是指决策者对环境情况一无所知，决策者根据自己的主观倾向进行决策。根据决策者的主观态度不同，可分为5种准则，分别为悲观主义准则、乐观主义准则、折中主义准则、等可能性准则和后悔值准则。下面通过一个例题，具体介绍这些准则的含义和求解方法。
【例】某公司需要根据下一年度宏观经济的增长趋势预测决定投资策略。宏观经济增长趋势有不景气、不变和景气3种，投资策略有积极、稳健和保守3种，各种状态的收益如表2-9所示。

http://www.educity.cn/article_images/2014-01-15/41ef4a76-8187-41b9-b01b-b50e9f7c09e6.jpg
【解】在本题中，由于下一年度宏观经济的各种增长趋势的概率是未知的，所以是一个不确定型决策问题。
（1）乐观主义准则。乐观主义准则也称为最大最大准则（maxmax准则），其决策的原则是“大中取大”。持这种准则思想的决策者对事物总抱有乐观和冒险的态度，他决不放弃任何获得最好结果的机会，争取以“好中之好”的态度来选择决策方案。决策者在决策表中各个方案对各个状态的结果中选出最大者，记在表的最右列，再从该列中选出最大者。在表2-9中，积极方案的最大结果为500，稳健方案的最大结果为300，保守方案的最大结果为400。三者的最大值为500，因此，选择其对应的积极投资方案。
（2）悲观主义准则。悲观主义准则也称为最大最小准则（maxmin准则），其决策的原则是“小中取大”。这种决策方法的思想是对事物抱有悲观和保守的态度，在各种最坏的可能结果中选择最好的。决策时从决策表中各方案对各个状态的结果选出最小者，记在表的最右列，再从该列中选出最大者。在表2-9中，积极方案的最小结果为50，稳健方案的最小结果为150，保守方案的最小结果为200。三者的最大值为200，因此，选择其对应的保守投资方案。
（3）折中主义准则。折中主义准则也称为赫尔威斯（Harwicz）准则，这种决策方法的特点是对事物既不乐观冒险，也不悲观保守，而是从中折中平衡一下，用一个系数α（称为折中系数）来表示，并规定0≤α≤1，用以下算公式计算结果：
cvi = α×max{aij}+(1-α)×min{aij}
即用每个决策方案在各个自然状态下的最大效益值乘以α，再加上最小效益值乘以1-α。然后再比较cvi，从中选择最大者。显然，折中主义准则的结果取决于α的选择。α接近于1，则偏向于乐观；α接近于0，则偏向于悲观。
（4）等可能准则。等可能准则也称为拉普拉斯（Laplace）准则。当决策者无法事先确定每个自然状态出现的概率时，就可以把每个状态出现的概率定为1/n（n是自然状态数），然后按照最大期望值准则决策。也就是说，把一个不确定型决策转换为风险决策。
（5）后悔值准则。后悔值（遗憾值）准则也称为萨维奇（Savage）准则、最小机会损失准则。决策者在制订决策之后，如果不能符合理想情况，必然有后悔的感觉。这种方法的特点是每个自然状态的最大收益值（损失矩阵取为最小值），作为该自然状态的理想目标，并将该状态的其他值与最大值相减所得的差作为未达到理想目标的后悔值。这样，从收益矩阵就可以计算出后悔值矩阵。最后按照最大后悔值达到最小的方法进行决策，因此，也称为最小最大后悔值（minmax）。在本题中，根据表2-9可以得出后悔值矩阵，如表2-10所示。

http://www.educity.cn/article_images/2014-01-15/f0795850-9dab-4e31-b920-c3043a701b40.jpg
在表2-10中，积极方案的最大后悔值为350，稳健方案的最大后悔值为250，保守方案的最大后悔值300。三者的最小值为250，因此，选择其对应的稳健投资方案。
4. 风险决策
风险决策是指决策者对客观情况不甚了解，但对将发生各事件的概率是已知的。在风险决策中，一般采用期望值作为决策准则，常用的有最大期望收益决策准则（Expected Monetary Value，EMV）和最小机会损失决策准则（Expected Opportunity Loss，EOL）。
（1）最大期望收益决策准则。决策矩阵的各元素代表“策略-事件”对的收益值，各事件发生的概率为pj，先计算各策略的期望收益值，然后从这些期望收益值中选取最大者，以它对应的策略为决策者应选择的决策策略。
http://www.educity.cn/article_images/2014-01-16/678c5db2-6f0e-4a74-b2bd-119a9a808867.png
（2）最小机会损失决策准则。决策矩阵的各元素代表“策略-事件”对的损失值，各事件发生的概率为pj，先计算各策略的期望损失值，然后从这些期望收益值中选取最小者，以它对应的策略为决策者应选择的决策策略。
http://www.educity.cn/article_images/2014-01-16/a5049018-6eb1-4a61-951b-e3011a43e437.png
当EMV为最大时，EOL便为最小。因此，在决策时用这两个决策准则所得的结果是一致的。
【例】某电子商务公司要从A地向B地的用户发送一批价值为90000元的货物。从A地到B地有水、陆两条路线。走陆路时比较安全，其运输成本为10000元；走水路时一般情况下的运输成本只要7000元，不过一旦遇到暴风雨天气，则会造成相当于这批货物总价值的10%的损失。根据历年情况，这期间出现暴风雨天气的概率为1/4，那么该电子商务公司该如何选择呢？
【解】这是一个风险决策问题，其决策树如图2-19所示。

http://www.educity.cn/article_images/2014-01-15/cfd38ef9-b212-4d7f-b395-e75dc3e1ff37.jpg
根据图2-19，走水路时，成本为7000元的概率为75%，成本为16000元的概率为25%，因此，走水路的期望成本为(7000×75%)+(16000×25%) =9250元；走陆路时，其成本为(10000×75%)+(10000×25%)=10000元。所以，走水路的期望成本小于走陆路的成本，应该选择走水路。
5. 灵敏度分析
通常，在决策模型中，自然状态的概率和损益值往往由估计或预测得到，不可能十分准确。此外，实际情况也是在不断发生变化的。因此，需要分析为决策所用的数据可在多大范围内变动，原最优决策方案继续有效，这就是灵敏度分析。
【例】假设有外表完全相同的木盒100只，将其分为2组，一组装白球，有70盒；另一组装黑球，有30盒。现从这100盒中任取一盒，请你猜，如果这盒内装的是白球，猜对了得500分，猜错了罚200分；如果这盒内装的是黑球，猜对了得1000分，猜错了罚150分。为使期望得分最多，应选哪一个方案？

http://www.educity.cn/article_images/2014-01-15/6412007c-c2b5-4145-b94c-67cdb576a471.jpg
【解】先画出决策树，如图2-20所示。
根据图2-20，可以计算出各方案的期望值：
“猜白”的期望值：(0.7×500)+(0.3×(-200)) = 290；
“猜黑”的期望值：(0.7×(-150))+(0.3×1000) = 195。
因此，“猜白”的方案是最优的。现假定出现白球的概率从0.7变为0.8，这时，各方案的期望值为：
“猜白”的期望值：(0.8×500)+(0.2×(-200)) = 360；
“猜黑”的期望值：(0.8×(-150))+(0.2×1000) = 80。
可见，“猜白”的方案仍然是最优的。但是，如果假设出现白球的概率从0.7变为0.6。这时，各方案的期望值为：
“猜白”的期望值：(0.6×500)+(0.4×(-200)) = 220；
“猜黑”的期望值：(0.6×(-150))+(0.4×1000) = 310。
现在的最优方案就不是“猜白”，而是“猜黑”了。由此可见，各自然状态发生的概率的变化，可引起最优方案的改变。那么，转折点如何确定呢？
设p为出现白球的概率，1-p为出现黑球的概率。当这2个方案的期望值相等时，即
p×500+(1-p)×(-200) =p×(-150)+(1-p)×1000
求得p=0.65。称它为转折概率。
同理，对其他数据也可以进行类似的分析，看哪些数据是非常敏感的变量，哪些数据是不太敏感的变量，以及最优方案在不变的条件下，这些变量允许变化的范围。这都是灵敏度分析的内容。
2.11.3 对策论
开始学习
2.11.4 对策论
对策论也称为竞赛论或博弈论，是研究具有竞争（或斗争）性质现象的数学理论和方法。大到国际间的谈判、各种政治力量的较量，小到日常生活中的“诡计”，都是对策论的研究对象。
具有竞争或对抗性质的行为称为对策行为。在这类行为中，参加竞争的各方各自具有不同的目标和利益。为了达到各自的目标和利益，各方必须考虑对手的各种可能的行动方案，并力图选取对自己最为有利或最为合理的方案。对策论就是研究对策行为中竞争各方是否存在最合理的行动方案，以及如何找到这个合理的行动方案的数学理论和方法。
1. 对策行为的要素
对策行为的种类可以有很多，但本质上都必须包括如下的三个基本要素：
（1）局中人。指在一个对策行为中，有权决定自己行动方案的对策参加者。显然，一个对策中至少有两个局中人。局中人既可以是自然人，也可以是法人或者某一集体。当研究在不确定的气候条件下进行某项与气候条件有关的生产决策时，也可以把大自然当作局中人。另外，在一个对策中，利益完全一致的参加者只能看成是一个局中人。要注意的是，在对策论中总是假定每一个局中人都是“理性人”，即对任一局中人来说，只能合理利用自己的有限资源为自己取得最大的效用、利润或社会效益，不存在利用其他局中人决策的失误来扩大自身利益的可能性。
（2）策略集。指可供局中人选择的一个实际可行的完整的行动方案的集合。每个局中人的策略集中至少应包括两个策略。
（3）赢得函数（支付函数）。在一局对策中，各局中人所选定的策略形成的策略组称为一个局势，即若si是第i个局中人的一个策略，则n个局中人的策略组s=(s1,s2,…,sn)就是一个局势。全体局势的集合S可用各局中人策略集的笛卡尔积表示，即
S=S1×S2×…×Sn
对任一局势s∈S，局中人i可以得到一个赢得值Hi(s)。显然，Hi(s)是局势s的函数，称为第i个局中人的赢得函数。
一般来说，当这三个基本因素确定后，一个对策模型也就确定了。
2. 对策的分类
可以根据不同的原则将对策进行分类。
根据参加对策的局中人的数量，可以分为二人对策和多人对策。在多人对策中，还有结盟对策与不结盟对策之分。结盟对策又包括联合对策和合作对策。
根据局中人策略集中策略的有限或无限，可将对策分为有限对策和无限对策。
根据各局中人赢得函数值的代数和是否为零，将对策分为零和对策（对抗对策）和非零和对策。零和对策是指一方的所得值为他方的所失值。在所有对策中，占有重要地位的是二人有限零和对策（矩阵对策）。
根据策略与时间的关系，可将对策分为静态对策与动态对策。
根据对策的数学模型的类型，可将对策分为矩阵对策、连续对策、微分对策、阵地对策、随机对策等。
3. 赢得矩阵
为简单起见，这里主要讨论二人有限零和对策。用I和II分别表示两个局中人，设局中人I有m个策略α1,α2,...,αm可供选择，局中人II有n个策略β1,β2,...,βn可供选择，则局中人I和II的策略集分别为：

http://www.educity.cn/article_images/2014-01-16/58e33fdc-5e17-4d06-872e-fb32d429c959.png
当局中人I选定策略αi和局中人II选定策略βj后，就形成了一个局势(αi,βj)。这样的局势共有m×n个，对任一局势(αi,βj)，记局中人I的赢得值为αij，并称

http://www.educity.cn/article_images/2014-01-16/08db11d2-5626-4ca7-bccb-985bf17009d1.png
为局中人I的赢得矩阵（或为局中人II的支付矩阵）。由于假定对策为零和的，所以局中人II的赢得矩阵就是-A。
【例】战国时期，齐王有一天提出要与田忌进行赛马。双方约定：从各自的上、中、下三个等级中各选一匹参赛，每匹马只能参赛一次，每一次比赛双方各出一匹马，负者要付给胜者千金。已经知道，在同等级的马中，田忌的马不如齐王的马，而如果田忌的马比齐王的马高一等级，则田忌的马可能取胜。当时，孙膑给田忌出了个主意：每次比赛时先让齐王牵出他要参赛的马，然后用下马对齐王的上马，用中马对齐王的下马，用上马对齐王的中马。比赛结果，田忌二胜一负，可得千金。
【解】在这个例题中，局中人是齐王和田忌，局中人集合为。各自都有六个策略，分别为（上，中，下）、（上，下，中）、（中，上，下）、（中，下，上）、（下，中，上）、（下，上，中）。可分别表示为S1={α1,α2,α3,α4,α5,α6}和S2={β1,β2,β3,β4,β5,β6}，这样齐王的任一策略αi和田忌的任一策略βj就决定了一个局势Sij。如果α1=（上，中，下），β1=（上，中，下），则在局势s11下齐王的赢得值为H1(s11)=3，田忌的赢得值为H2(s11)=-3。其他局势的结果可类似得出，因此，齐王的赢得矩阵为

http://www.educity.cn/article_images/2014-01-15/02a0c178-1603-41e4-ad40-26fc2e531acf.jpg
接下来，再分析一个二人有限非零和对策的例子。
【例】甲、乙两个独立的网站主要靠广告收入来支撑发展，目前都采用较高的价格销售广告。这两个网站都想通过降价争夺更多的客户和更丰厚的利润。假设这两个网站在现有策略下各可以获得 1000 万元的利润。如果一方单独降价，就能扩大市场份额，可以获得1500万元利润，此时，另一方的市场份额就会缩小，利润将下降到200万元。
如果这两个网站同时降价，则他们都将只能得到700万元利润。那么，这两个网站的主管各自经过独立的理性分析后，决定采取什么策略呢？
【解】这是一个比较简单但又常见的对策问题，可以表示为图2-21所示的赢得矩阵。

http://www.educity.cn/article_images/2014-01-15/03f309e3-3015-4b58-a67b-6f7621f53425.jpg
由图2-21可以看出，假设乙网站采用高价策略，那么甲网站采用高价策略得1000万元，采用低价策略得1500万元。因此，甲网站应该采用低价策略；如果乙网站采用低价策略，那么甲网站采用高价策略得200万元，采用低价策略得700万元，因此，甲网站也应该采用低价策略。采用同样的方法，也可分析乙网站的情况，也就是说，不管甲网站采取什么样的策略，乙网站都应该选择低价策略。因此，这个博弈的最终结果一定是两个网站都采用低价策略，各得到700万元的利润。
这个对策是一个非合作对策问题，且两个局中人都肯定对方会按照个体行为理性原则决策，因此，虽然双方采用低价策略的均衡对双方都不是理想的结果，但因为两个局中人都无法信任对方，都必须防备对方利用自己的信任（如果有的话）谋取利益，所以双方都会坚持采用低价，各自得到700万元的利润，各得1000万元利润的结果是无法实现的。即使两个网站都完全清楚上述利害关系，也无法改变这种结局。
2.11.4 排队论
开始学习
2.11.5 排队论
排队论也称为随机服务系统理论，是通过对服务对象到来及服务时间的统计研究，得出这些数量指标（等待时间、排队长度、忙期长短等）的统计规律，然后根据这些规律来改进服务系统的结构或重新组织被服务对象，使得服务系统既能满足服务对象的需要，又能使机构的费用最经济或某些指标最优。
1. 排队论研究的内容
排队论研究的内容有三个方面：
（1）系统的性态，即研究各种排队系统的的概率规律性；
（2）系统的优化问题，可分为静态最优和动态最优，前者指最优设计，后者指现有排队系统的最优运营。
（3）统计推断，即判断一个给定的排队系统符合哪种模型，以便根据排队理论进行分析和研究。
2. 排队系统的组成
排队系统由以下三个部分组成 ：
（1）输入过程。即顾客到达排队系统的规律，例如，定长输入、泊松输入、埃尔朗（Erlang）输入、独立输入等。
（2）排队规则。例如，损失制（即时制，是指顾客到达时，所有服务台全正被占用，顾客随即离去）、等待制（顾客排队等候，按照先到先服务、后到先服务、随机服务、优先级服务等规则进行服务）、混合制等。
（3）服务机构。包括服务台设置、服务方式及服务时间等。
3. 排队模型的分类
排队系统的经典表示方法为X/Y/Z/A/B/C。其中，X表示顾客到达间隔时间分布，Y表示服务时间的分布，Z表示服务机构中的服务台个数，A表示系统容量限制（默认为∞），B表示顾客源数目（默认为∞），C表示服务规则（默认为先到先服务)。例如，在计算机性能评估领域中常见的M/M/1模型就是表示相继到达间隔时间为负指数分布、服务时间为负指数分布、一个服务台的模型；D/M/c模型表示确定的到达间隔、服务时间为负指数分布、c个并行服务台的模型。
4. 排队问题的求解
一个实际问题作为排队问题求解时，首先要研究它属于哪个模型，其中只有顾客到达的间隔时间分布和服务时间的分布需要实测的数据来确定，其他因素都是在问题提出时给定的。
求解排队问题的目的，是研究排队系统运行的效率，估计服务质量，确定系统参数的最优值，以决定系统结构是否合理，研究设计改进措施等。所以，必须确定用以判断系统运行优劣的基本数量指标，求解排队问题首先就要求出这些数量指标的概率分布或特征数。这些指标通常有以下几个：
（1）队长和排队长。队长是指系统中的顾客总数；排队长也称为队列长，是指队列中等待服务的顾客数。显然，队长=排队长+正被服务的顾客数。
（2）逗留时间和等待时间。逗留时间是指顾客在系统中的停留时间；等待时间是指顾客在队列中的等待时间。显然，逗留时间=等待时间+服务时间。
（3）忙期。忙期是指顾客到达空闲服务机构起到服务机构再次为空闲这段时间的长度，即服务机构连续繁忙的时间长度，它关系到服务员的工作强度。忙期和一个忙期中平均完成服务的顾客数都是衡量服务机构效率的指标。
（4）服务强度。服务强度是指单位时间平均到达的顾客数与服务机构的平均服务率的比值。
5. 到达间隔的分布和服务时间的分布
解决排队问题首先要根据原始资料做出顾客到达间隔和服务时间的经验分布，然后按照统计学的方法确定适合哪种理论分布，并估计它的参数值。常见的理论分布有泊松分布、负指数分布和爱尔朗分布。在计算机领域中，用得最多的是负指数分布和M/M/1模型，因此，下面主要介绍这方面的知识。
随机变量T的概率密度函数如果是：

http://www.educity.cn/article_images/2014-01-16/1afc7018-00eb-4993-a72d-69108fbf1342.png
则称T服从负指数分布（简称为指数分布），它的分布函数是：

http://www.educity.cn/article_images/2014-01-16/04cd7394-3d1f-4731-97b0-484bfc771ea4.png
数学期望为1/λ，方差为1/λ2，标准差为1/λ。用在排队系统中，这里的λ表示单位时间平均到达的顾客数，1/λ表示顾客相继到达的平均间隔时间。
负指数分布具有下列性质：
（1）无记忆性或马尔柯夫（Markov）性。一个顾客到来所需的时间与过去一个顾客到来所需时间无关，所以说这种情形下的顾客到达是纯随机的。
（2）当输入过程是泊松流时，顾客相继到达的间隔时间T必服从负指数分布。
在排队系统中，系统对顾客的服务时间有时也服从负指数分布，这时，设它的分布函数和密度函数分别是：

http://www.educity.cn/article_images/2014-01-15/cffe347d-eae0-4cfc-a81a-20890ce03bef.jpg
其中μ表示单位时间能被服务完成的顾客数，称为平均服务率，而1/μ表示一个顾客的平均服务时间。
6. M/M/1模型
标准的M/M/1模型是指适合下列条件的排队系统：
（1）输入过程：顾客源是无限的，顾客单个到来，相互独立，一定时间的到达数服从泊松分布，到达过程已经是平稳的。
（2）排队规则：单队，且对队长没有限制，采用先到先服务的规则。
（3）服务机构：单服务台，各顾客的服务时间是相对独立的，服从相同的负指数分布。到达间隔时间与服务时间是相互独立的。
限于篇幅，本书不再介绍有关M/M/1模型的数学推导过程，而是直接给出相关的推导结果。
（1）在系统中的平均顾客数（队长的期望值）

http://www.educity.cn/article_images/2014-01-15/39fc4c71-99a6-4214-9dd3-07c4271516cf.jpg
其中，ρ=λ/μ表示服务强度（资源利用率）。
（2）在队列中等待的平均顾客数（队列长期望值）

http://www.educity.cn/article_images/2014-01-16/7ae66161-822c-4ed5-892f-5926d528d703.png
（3）在系统中顾客逗留时间的期望值

http://www.educity.cn/article_images/2014-01-16/1a5b1821-903d-40a7-bb95-94a84c06a61e.png
（4）在队列中顾客等待时间的期望值

http://www.educity.cn/article_images/2014-01-16/7ad826e2-13ae-4aea-a54f-7fe0099a70c0.png
【例】某企业正在创建一个工作流管理系统，目前正处于过程定义阶段，即创建工作流模型阶段。对于这些工作流模型，除了要考虑工作流的正确性外，工作流的性能也是十分重要的。工作流性能主要反映工作流定量方面的特性，例如，任务的完成时间、单位时间内处理的任务数量、资源的利用率，以及在预定的标准时间内完成任务的百分比等。
图2-22所示的是一个简单的工作流模型（其中单位时间为1小时），它表示这样一个执行过程：每小时将会有20项任务达到c1，这20项任务首先经过处理taskl，再经过处理task2，最终将结果传递到c3。处理taskl和处理task2相互独立。

http://www.educity.cn/article_images/2014-01-15/4ce4b07c-8c92-42ec-ba3f-7cdea8b820c0.jpg
计算图2-22所示的工作流模型的下列性能指标：
（1）每个资源的利用率；
（2）每个处理中的平均任务数L；
（3）平均系统时间S；
（4）每个处理的平均等待时间W。
【解】根据前面介绍的4个公式，可以很简单地计算出结果。
对task1而言，λ=20，μ=60/2.5=24，ρ=20/24=0.833，L=0.833/(1-0.833)=4.988，S=1/(24-20)4=0.25，W=0.833/(24-20)=0.208。
对task2而言，λ=20，μ=60/2=30，ρ=20/30=0.667，L=0.667/(1-0.667)=2，S=1/(30-20)=0.1，W=0.667/(30-20)=0.067。
2.11.5 存贮论
开始学习
2.11.6 存贮论
工厂为了生产，必须存贮一些原料；商店必须存贮一些商品。那么，对于一个工厂或商店来说，在某个时候，究竟存贮多少原料或商品，才是最合适的呢？专门研究这类有关存贮问题的科学，构成运筹学的一个分支，叫做存贮论或库存理论。
1. 存贮论研究的内容
物资的存贮，按其目的的不同，可分为三种：
（1）生产存贮，它是企业为了维持正常生产而储备的原材料或半成品。
（2）产品存贮，它是企业为了满足其他部门的需要而存贮的半成品或成品。
（3）供销存贮，它是指存贮在供销部门的各种物资，直接满足顾客的需要。
存贮系统可以用“供-存-销”来描述，通过订货以及进货后的存贮与销售来满足顾客的需求。或者说由于生产或销售的需要，从存贮系统中取出一定数量的库存货物，这就是存贮系统的输出；贮存的货物由于不断的输出而减少，必须及时补充，补充就是存贮系统的输入，补充可以通过外部订货、采购等活动来进行，也可以通过内部的生产活动来进行。在这个系统中，决策者可以通过控制订货时间间隔和订货量的多少来调节系统的运行，使得在某种准则下系统运行达到最优。
因此，存贮论中研究的主要问题可以概括为：何时订货（补充存贮），每次订多少货（补充多少库存）这两个问题。
2. 基本概念
为了对存贮问题有一个概括性的了解，下面说明存贮论中常用的几个基本概念。
（1）需求。对于一个存贮系统而言，需求就是它的输出，即从存贮系统中取出一定数量的物资以满足生产消费的需要，存贮量因满足需求而减少。输出的方式可能是均匀连续式的，也可能是间断瞬间式的。对存贮系统来说，需求是客观存在的，管理者必须设法了解或预测所存贮的物资的需求规律。需求量可以是确定性的，也可以是随机性的。对于随机性需求，可以根据大量的统计资料，用某种随机分布来加以描述。
（2）补充供应。存贮由于需求而不断减少，必须加以补充。否则，最终将无法满足需求。补充就是存贮系统的输入，补充可以通过向供货厂商订购或者自己组织生产来实现，存贮系统对于补充订货的订货时间及每次订货的数量是可以控制的。从订货到货物入库往往需要一段时间，把这段时间称为拖后时间。从另一个角度来看，为了在某一时刻能补充存贮，必须提前订货，那么这段时间也可称之为提前时间（或称备货时间）。提前时间可以是确定性的，也可以是随机性的。
（3）费用。存贮论所要解决的问题是：多少时间补充一次，每次补充的数量应该是多少？决定多少时间补充一次以及补充数量的策略称为存贮策略。存贮策略的优劣最直接的衡量标准是：该策略所耗用的平均费用。一般来说，一个存贮系统主要包括存贮费、订货费、生产费、缺货损失费。在不允许缺货的情况下，在费用上处理的方式是将缺货损失费视为无穷大。为了保持一定的库存，要付出存贮费；为了补充库存，要付出订货费；当存贮不足发生缺货时，要付出缺货损失费。这三项费用之间是相互矛盾、相互制约的。存贮费与所存贮物资的数量和时间成正比，如降低存贮量，缩短存贮周期，自然会降低存贮费；但缩短存贮周期，就要增加订货次数，势必增加订货费支出；为了防止缺货现象发生，就要增加安全库存量，这样在减少缺货损失费的同时，增大了存贮费的开支。因此。要从存贮系统总费用为最小的前提出发，进行综合分析，以寻求一个最佳的订货批量和订货间隔时间。一般来说，在进行存贮系统的费用分析时，是不必考虑所存贮物资的价格的。但有时由于订购的批量大，物资的价格有一定的优惠折扣；在生产企业中，如果生产批量达到一定的数量，产品的单位成本也往往会降低。这时，进行费用分析时，就需要考虑物资的价格因素。
（4）目标函数。要在一类策略中选择一个最优策略，就需要有一个衡量优劣的标准，这就是目标函数。在存贮问题中，通常把目标函数取为平均费用函数或平均利润函数。选择的策略应使平均费用达到最小，或使平均利润达到最大。
3. 存贮策略
常见的存贮策略有以下3种：
（1）t0-循环策略：每隔t0时间补充存贮量为Q，使库存水平达到S。这种策略的方法有时称为经济批量法。
（2）(s, S)策略：每当存贮量x>s时不补充，当x≤s时补充存贮，补充量Q=S-x，使库存水平达到S。其中s称为最低库存量。
（3）(t0, s, S)混合策略：每经过t0时间检查存贮量x，当x>s时不补充，当x≤s时补充存贮，补充量Q=S-x，使库存水平达到S。
一个好的存贮策略，即可以使总费用小，又可避免因缺货影响生产。确定存贮策略时，首先是把实际问题抽象为数学模型。在形成模型过程中，对一些复杂的条件要尽量加以简化，只要模型能反映问题的本质就可以了。然后对模型用数学方法加以研究，得出数量的结论。这些结论是否正确，还要拿到实践中去加以检验。如结论与实际不符，则要对模型重新加以研究和修改，存贮问题经过长期研究，已得出一些行之有效的模型。
从存贮模型来看，大体上可分为两类。一类是确定性模型，即模型中的数据皆为确定的数值；另一类是随机性模型，即模型中含有随机变量，而不是确定的数值。
2.12 数学建模
开始学习
2.12 数学建模
在前面几节的讨论中，多处提到了“数学模型”，但并未对其进行解释。那么，什么是数学模型，怎么建立数学模型呢？作为本章的结束，本节主要介绍数学建模相关知识。
当需要从定量的角度分析和研究一个实际问题时，人们就要在深入调查研究、了解对象信息、作出简化假设、分析内在规律等工作的基础上，用数学的符号和语言，把它表述为数学式子，也就是数学模型，然后用通过计算得到的模型结果来解释实际问题，并接受实际的检验。这个建立数学模型的全过程就称为数学建模。
数学建模是一种数学的思考方法，是运用数学的语言和方法，通过抽象和简化，建立能近似刻画并解决实际问题的模型的一种强有力的数学手段。
1. 数学模型
数学模型是客观世界中的实际事物的一种数学简化，它常常是以某种意义上接近实际事物的抽象形式存在的，但它和真实的事物有着本质的区别。要描述一个实际现象可以有很多种方式，例如，录音、录像、比喻等。为了使描述更具科学性、逻辑性、客观性和可重复性，人们采用一种普遍认为比较严格的语言来描述各种现象，这种语言就是数学。使用数学语言描述的事物就称为数学模型。
模型的一般数学形式可用下列表达式描述：

http://www.educity.cn/article_images/2014-01-15/90279b57-a246-43d8-b431-9455c79cacf1.jpg
目标的评价准则一般要求达到最佳（最小或最大）、适中、满意等。准则可以是单一的，也可以是多个的。约束条件可以没有也可有多个。当g是等式时，即为平衡条件。
当模型中无随机因素时，称它为确定性模型，否则为随机模型。随机模型的评价准则可用期望值、方差表示，也可用某种概率分布来表示；当可控变量只取离散值时，称为离散模型，否则称为连续模型。也可按使用的数学工具，将模型分为代数方程模型、微分方程模型、概率统计模型、逻辑模型等；若用求解方法来命名时，有直接最优化模型、数字模拟模型、启发式模型等；也有按用途来命名的，例如，分配模型、运输模型、更新模型、排队模型、存贮模型等；还可以用研究对象来命名，例如，能源模型、教育模型、军事对策模型、宏观经济模型等。
2. 数学建模的过程
应用数学去解决各类实际问题时，建立数学模型是十分关键的一步，同时也是十分困难的一步。建立数学模型的过程，是把错综复杂的实际问题简化、抽象为合理的数学结构的过程。要通过调查、收集数据资料，观察和研究实际对象的固有特征和内在规律，抓住问题的主要矛盾，建立起反映实际问题的数量关系，然后利用数学理论和方法去分析和解决问题。这就需要深厚而扎实的数学基础，敏锐的洞察力和想象力，对实际问题的浓厚兴趣和广博的知识面。
虽然面临的各种实际问题不一样，但数学建模的基本过程基本上是一致的，可以遵循以下过程：
（1）模型准备：了解问题的实际背景，明确其实际意义，掌握对象的各种信息。用数学语言来描述问题。
（2）模型假设：根据实际对象的特征和建模的目的，对问题进行必要的简化，并用精确的语言提出一些恰当的假设。
（3）模型建立：在假设的基础上，利用适当的数学工具来刻划各变量之间的数学关系，建立相应的数学结构。只要能够把问题描述清楚，尽量使用简单的数学工具。
（4）模型求解：利用获取的数据资料，对模型的所有参数做出计算（估计）。
（5）模型分析：对所得的结果进行数学上的分析。
（6）模型检验：将模型分析结果与实际情形进行比较，以此来验证模型的准确性、合理性和适用性。如果模型与实际较吻合，则要对计算结果给出其实际含义，并进行解释。如果模型与实际吻合较差，则应该修改假设，再次重复建模过程。
（7）模型应用：应用方式因问题的性质和建模的目的而异。
3. 数学建模的方法
构造模型是一种创造性劳动，成功的模型往往是科学与艺术的结晶，一般的建模方法和思路有以下四种：
（1）直接分析法：根据对问题内在机理的认识，直接构造出模型。
（2）类比法：根据类似问题的模型构造新模型。
（3）数据分析法：通过试验，获得与问题密切相关的大量数据，用统计分析方法进行建模。
（4）构想法：对将来可能发生的情况给出逻辑上合理的设想和描述，然后用已有的方法构造模型，并不断修正完善，直至比较满意为止。
['第3章', '操作系统基本原理']
3.0 内容介绍
开始学习
系统分析师必须具备扎实的理论知识和丰富的实际项目经验，而操作系统作为计算机科学最为基本的理论基础和分支领域之一，是系统分析师必须重点掌握的知识。
操作系统是计算机系统中最重要、最基本的系统软件，它位于硬件和用户之间，一方面能向用户提供接口，方便用户使用计算机；另一方面能管理计算机软硬件资源，以便合理充分地利用它们。从资源管理的角度来看，它是计算机系统中的资源管理器，负责对系统的软硬件资源实施有效的控制和管理，提高系统资源的利用率；从方便用户使用的角度来看，操作系统是一台虚拟机，它是计算机硬件的首次扩充，隐藏了硬件操作细节，使用户与硬件细节隔离，从而方便了用户的使用。

3.1 操作系统概述
操作系统是控制和管理计算机软硬件资源，以尽量合理、有效的方法组织多个用户共享多种资源的程序集合。它具有并发性、共享性、虚拟性和不确定性等特点，一般的操作系统都具有处理机管理、存储器管理、设备管理、文件管理和用户接口等五种主要功能。
（1）处理机管理。负责对处理机的分配和运行实施有效的管理。在多道程序环境下，处理机的分配和运行是以进程为基本单位的。因此，处理机管理可归结为进程管理。
（2）存储器管理。存储器管理的主要任务是对内存进行分配、保护和扩充。
（3）设备管理。设备管理应具有设备分配、设备传输控制和设备独立性等功能。其中设备分配是指根据一定的原则对设备进行分配，为了使设备与主机并行工作，常需采用缓冲技术和虚拟技术；设备传输控制是指实现物理的输入/输出（Input/Output，I/O）操作，即启动设备、中断处理、结束处理等；设备独立性是指用户向系统申请的设备与实际操作的设备无关。
（4）文件管理。负责对文件存储空间进行管理，包括存储空间的分配和回收，目录管理、文件操作管理和文件保护等功能。
（5）用户接口。为了使用户能灵活、方便地使用计算机和系统功能，操作系统还提供了一组友好的使用其功能的手段，称为用户接口，它包括两大类，分别是程序接口和操作接口。用户通过这些接口能方便地调用操作系统的功能，有效地组织作业和处理流程，并使整个系统能高效地运行。

3.1.0 内容介绍
开始学习
操作系统是控制和管理计算机软硬件资源，以尽量合理、有效的方法组织多个用户共享多种资源的程序集合。它具有并发性、共享性、虚拟性和不确定性等特点，一般的操作系统都具有处理机管理、存储器管理、设备管理、文件管理和用户接口等五种主要功能。
（1）处理机管理。负责对处理机的分配和运行实施有效的管理。在多道程序环境下，处理机的分配和运行是以进程为基本单位的。因此，处理机管理可归结为进程管理。
（2）存储器管理。存储器管理的主要任务是对内存进行分配、保护和扩充。
（3）设备管理。设备管理应具有设备分配、设备传输控制和设备独立性等功能。其中设备分配是指根据一定的原则对设备进行分配，为了使设备与主机并行工作，常需采用缓冲技术和虚拟技术；设备传输控制是指实现物理的输入/输出（Input/Output，I/O）操作，即启动设备、中断处理、结束处理等；设备独立性是指用户向系统申请的设备与实际操作的设备无关。
（4）文件管理。负责对文件存储空间进行管理，包括存储空间的分配和回收，目录管理、文件操作管理和文件保护等功能。
（5）用户接口。为了使用户能灵活、方便地使用计算机和系统功能，操作系统还提供了一组友好的使用其功能的手段，称为用户接口，它包括两大类，分别是程序接口和操作接口。用户通过这些接口能方便地调用操作系统的功能，有效地组织作业和处理流程，并使整个系统能高效地运行。

3.1.1 操作系统的类型
开始学习
3.1.1 操作系统的类型
一般来说，操作系统可分为单用户操作系统、批处理系统、分时系统、实时系统、网络操作系统、分布式操作系统、并行操作系统和嵌入式操作系统等。
1. 单用户操作系统
单用户操作系统的基本特征是在一台处理机上只能支持一个用户程序的运行，系统的全部资源都提供给该用户使用。目前，多数微机上运行的操作系统都属于单用户操作系统。
2. 批处理系统
批处理系统也称为作业处理系统。在批处理系统中，作业成批地装入计算机中，由操作系统在计算机的输入井将其组织好，按一定的算法选择其中的一个或多个作业，将其调入内存使其运行。运行结束后，把结果放入磁盘输出井，由计算机统一输出后交给用户。
批处理操作系统中配置了一个监督程序，在该监督程序控制下，系统能够对一批作业自动进行处理。其基本特征是“批量”，把作业的吞吐量作为主要目标，同时兼顾作业的周转时间。批处理操作系统又分为单道批处理和多道批处理系统。
单道批处理系统在内存中只能存放一道作业，大大减少了人工操作的时间，提高了机器的利用率。但是，对于某些作业来说，当它发出I/O请求后，CPU（Central Processing Unit，中央处理单元）必须等待I/O的完成，而由于I/O设备的低速性，从而使CPU的利用率很低。为了改善CPU的利用率，引入了多道程序设计技术，就形成了多道批处理操作系统。
在多道批处理操作系统中，不仅在内存中可同时有多道作业在运行，而且作业可随时被调入系统，并存放在外存中形成作业队列。然后，由操作系统按一定的原则，从作业队列中调入一个或多个作业进入内存运行。多道批处理系统具有资源利用率高和系统吞吐量大的优点，但它将用户和计算机操作员分开，使用户无法直接与自己的作业进行交互。另外，作业要进行排队，依次处理，因此，作业的平均周转时间较长。
3. 分时操作系统
为了解决批处理系统无法进行人机交互的问题，并使多个用户能同时通过自己的终端以交互方式使用计算机，共享主机中的资源，为此，系统中采用了分时技术，即把CPU的时间划分成很短的时间片，轮流地分配给各个终端作业使用。这种操作系统就称为分时操作系统，简称为分时系统。
对于某个作业而言，若在分配给它的时间片内，作业没有执行完毕，也必须将CPU交给下一个作业使用，并等下一轮得到CPU时再继续执行。这样，系统便能及时地响应每个用户的请求，从而使每个用户都能及时地与自己的作业交互。分时系统具有多路性、独立性、及时性、交互性和同时性等特征。
4. 网络操作系统
网络操作系统是指在计算机网络环境下，具有网络功能的操作系统。计算机网络是一个数据通信系统，它把地理上分散的计算机和终端设备连接起来，达到数据通信和资源共享的目的。网络操作系统最主要的特点是网络中各种资源的共享，以及各台计算机之间的通信。有关数据通信与计算机网络方面的详细知识，将在第4章中介绍。
5. 分布式操作系统
分布式系统是由多台计算机组成的系统，系统中若干台计算机可以相互合作，共同完成同一个任务。在分布式系统中，任意两台计算机之间都可以利用通信来交换信息，系统中的资源为所有用户共享。分布式系统的优点是各节点的自治性好、资源共享的透明性强、各节点具有协同性，其主要缺点是系统状态不精确、控制机构复杂、通信开销会引起性能的下降。
分布式操作系统是网络操作系统的更高级形式，它保持了网络操作系统所拥有的全部功能，与网络操作系统的主要区别在于任务的分布性，即把一个大任务分为若干个子任务，分派到不同的CPU上执行。
6. 嵌入式操作系统
嵌入式操作系统运行在嵌入式智能芯片环境中，对整个智能芯片和它所操作、控制的各种部件装置等资源进行统一协调、处理、指挥和控制。嵌入式操作系统具有微型化、可定制、实时性、可靠性、易移植性等特点。嵌入式实时操作系统是指系统能及时响应外部事件的请求，在规定的时间内完成对该事件的处理，并控制所有实时任务协调一致地运行。嵌入式实时操作系统的特点是及时性、支持多道程序设计、高可靠性和较强的过载防护能力。有关嵌入式实时操作系统的详细知识，将在17.3节中介绍。
3.1.2 操作系统的结构
开始学习
3.1.2 操作系统的结构
从操作系统的结构来看，主要有整体结构、层次结构、客户/服务器结构和面向对象结构等。
1. 整体结构
整体结构也称为模块组合结构或无序结构，是基于结构化程序设计的一种软件设计方法，其主要设计思想和步骤如下：
（1）把模块作为操作系统的基本单位，按照功能将整个系统分解为若干个模块，每个模块具有一定的独立功能，若干个关联模块协作完成某个功能；明确各个模块之间的接口关系，各个模块之间可以不加控制地自由调用（无序调用法）；模块之间需要传递参数或返回结果时，其个数和方式也可以根据需要随意约定。
（4）分别设计、编码、调试各个模块。
（5）将所有模块连结成一个完整的系统。
这种结构设计方法的主要优点体现在以下三个方面：
（1）结构紧密、组合方便，对不同环境和用户的不同需求，可以组合不同模块来予以满足，因此，灵活性大。
（2）针对某个功能可用最有效的算法和任意调用其他模块中的过程来实现，因此，系统效率较高。
（3）由于划分成模块和子模块，设计及编码可齐头并进，能加快操作系统研制过程。
整体式结构的主要缺点是模块独立性差，模块之间牵连甚多，形成了复杂的调用关系，甚至有很多循环调用，造成系统结构不清晰，正确性难保证，可靠性降低，系统功能的增、删、改十分困难。
2. 层次结构
层次结构是将操作系统划分为内核和若干模块（或进程），这些模块按功能的调用次序排列成若干层次，各层之间只能是单向依赖或单向调用关系，即低层为高层服务，高层可以调用低层的功能，反之则不能。这样，不但系统结构清晰，而且不构成循环调用。层次结构可以有全序和半序之分。如果每层中的各模块之间保持独立，互相没有联系，则这种层次结构就称为全序；如果某些层内的模块之间允许有相互调用或通信的关系，则这种层次结构就称为半序。
在层次结构中，外层功能是内层功能的扩充或延伸，内层功能为外层提供了支撑和基础。因此，整个系统中的接口比其他结构方式的接口要少且简单。整个系统的正确性可通过各层的正确性来保证，从而使系统的正确性大大提高。层次结构的另一个优点是增加、修改或替换一个层次不会影响其他层次，有利于系统的维护和扩展。然而，层次结构是分层单向依赖的，必须要建立模块间的通信机制，系统花费在通信上的开销较大，系统效率有所降低。
3. 客户/服务器结构
现代操作系统大多拥有两种工作状态，分别是核心态和用户态。一般应用程序工作在用户态，而内核模块和最基本的操作系统核心工作在核心态。
客户/服务器结构也称为微内核结构。操作系统的一个发展趋势是将传统的操作系统代码放置到更高层，从操作系统中去掉尽可能多的东西，而只留下一个最小的核心，称之为微内核。通常的方法是将大多数操作系统功能由在用户态运行的服务器进程来实现。为了获取某项服务，用户进程（客户进程）将请求发送给一个服务器进程，服务器进程完成此操作后，把结果返回给用户进程。这样，服务器以用户进程的形式运行，而不是运行在核心态。因此，它们不能直接访问硬件，某个服务器的崩溃不会导致整个系统的崩溃。客户/服务器结构的另一个优点是它更适用于分布式系统。
微内核技术的主要优点如下：
（1）统一的接口，在用户态和核心态之间无需进程识别。
（2）可伸缩性好，能适应硬件更新和应用变化。
（3）可移植性好，所有与具体机器特征相关的代码，全部隔离在微内核中，如果操作系统要移植到不同的硬件平台上，只需修改微内核中极少代码即可。
（4）实时性好，微内核可以方便地支持实时处理。
（5）安全可靠性高，微内核将安全性作为系统内部特性来进行设计，对外仅使用少量应用编程接口。
（6）支持分布式系统，支持多处理器的体系结构和高度并行的应用程序。
4. 面向对象结构
随着计算机的发展，面向对象技术得到了广泛的重视和应用，由于其具有数据隐藏和消息激活对象等功能，被广泛应用于操作系统的设计和实现中，特别是在网络操作系统和分布式操作系统中。面向对象的操作系统中的对象是操作系统管理的信息和资源的抽象，可以被视为受保护的信息或资源的总称。它拥有自己的状态和存储空间，而且其状态（也就是存储内容）只能由事先定义好的操作来改变，而改变这些对象状态的操作又需要其他对象发送相应的消息后才能被启动，因此，容易采取某种手段对对象实施保护。例如，Windows Server中有执行体对象（进程、线程、文件和令牌等）和内核对象（时钟、事件和信号等）。
3.2 进程管理
进程是一个具有独立功能的程序关于数据集合的一次可以并发执行的运行活动，是系统进行资源分配和调度的基本单位。相对于程序，进程是动态的概念，而程序是静态的概念，是指令的集合。进程具有动态性和并发性，需要一定的资源（例如，CPU时间、内存、文件和I/O设备等）来完成其任务，这些资源在创建进程或执行时分配。在大多数操作系统中，进程是进行资源分配和调度的基本单位。
一个进程是通过其物理实体被感知的，进程的物理实体又称为进程的静态描述，通常由三部分组成，分别是程序、数据集合和进程控制块（Process Control Block，PCB）。程序描述了进程所要完成的功能，数据集合描述了程序运行所需要的数据部分和工作区，PCB包括进程的描述信息、控制信息和资源信息，是进程动态特性的集中反映。程序和数据集合是进程存在的物质基础，是进程的实体；PCB是进程存在的标志，进程与PCB是一对一的关系，操作系统利用PCB对并发执行的进程进行控制和管理。

3.2.0 内容介绍
开始学习
进程是一个具有独立功能的程序关于数据集合的一次可以并发执行的运行活动，是系统进行资源分配和调度的基本单位。相对于程序，进程是动态的概念，而程序是静态的概念，是指令的集合。进程具有动态性和并发性，需要一定的资源（例如，CPU时间、内存、文件和I/O设备等）来完成其任务，这些资源在创建进程或执行时分配。在大多数操作系统中，进程是进行资源分配和调度的基本单位。
一个进程是通过其物理实体被感知的，进程的物理实体又称为进程的静态描述，通常由三部分组成，分别是程序、数据集合和进程控制块（Process Control Block，PCB）。程序描述了进程所要完成的功能，数据集合描述了程序运行所需要的数据部分和工作区，PCB包括进程的描述信息、控制信息和资源信息，是进程动态特性的集中反映。程序和数据集合是进程存在的物质基础，是进程的实体；PCB是进程存在的标志，进程与PCB是一对一的关系，操作系统利用PCB对并发执行的进程进行控制和管理。

3.2.1 进程的状态
开始学习
3.2.1 进程的状态
一个进程从创建而产生至撤销而消亡的整个生命期间，有时占有处理器执行，有时虽可运行但分不到处理器，有时虽有空闲处理器但因等待某个事件的发生而无法执行，这一切都说明进程和程序不相同，它是活动的且有状态变化的。
1. 三态模型
进程具有三种最基本的状态，分别是运行、就绪和阻塞，如图3-1所示。

http://www.educity.cn/article_images/2014-01-15/1ac8139a-35b7-4adf-9ddd-8bbcceb3d014.jpg
（1）运行状态。运行状态是进程占用处理机正在执行其程序的状态。在单处理机系统中，某个时刻只能有一个进程处于运行状态；在多处理机系统中，可能有多个进程同时处于运行状态。
（2）阻塞状态。阻塞状态也称为等待状态或睡眠状态，是进程由于等待某个事件的发生而处于暂停执行的状态。例如，进程因等待I/O的完成或等待缓冲空间等。
（3）就绪状态。就绪状态是进程已分配到除处理机以外的所有必要资源，具备了执行的条件，等待处理机调度的状态。在系统中，同一时刻可能会有多个进程处于就绪状态，排成就绪队列。
2. 五态模型
由于进程的不断创建，系统资源特别是内存资源已不能满足所有进程运行的要求。这时就必须将某些进程挂起，放到磁盘对换区，暂时不参加调度，以均衡负载。进程挂起的原因可能是系统出现故障，或者是用户调试程序，也可能是需要检查问题。图3-2是具有挂起状态的进程状态及其转换。

http://www.educity.cn/article_images/2014-01-15/977cbd90-ca02-4081-adb7-19fb4648be33.jpg
活跃就绪是指进程在内存并且可被调度的状态。静止就绪是指进程被对换到外存时的就绪状态，是不能被直接调度的状态，只有当内存中没有活跃就绪态进程，或者挂起就绪态进程具有更高的优先级，系统才将把挂起就绪态进程调回内存，并转换为活跃就绪。
活跃阻塞状态是指进程已在内存，一旦所等待的事件发生，便进入活跃就绪状态；静止阻塞状态是指进程对换到外存时的阻塞状态，一旦所等待的事件发生，便进入静止就绪状态。
3.2.2 信号量与PV操作
开始学习
3.2.2 信号量与PV操作
在多道程序系统中，由于资源共享与进程合作，使各进程之间可能产生两种形式的制约关系，一种是间接相互制约，例如，在仅有一台打印机的系统中，有两个进程A和B，如果进程A需要打印时，系统已将打印机分配给进程B，则进程A必须阻塞；一旦进程B将打印机释放，系统便将进程A唤醒，使之由阻塞状态变为就绪状态；另一种是直接相互制约，例如，输入进程A通过单缓冲区向进程B提供数据。当该缓冲区为空时，进程B不能获得所需的数据而阻塞，一旦进程A将数据送入缓冲区中，进程B就被唤醒。反之，当缓冲区满时，进程A就被阻塞，仅当进程B取走缓冲区中的数据时，才唤醒进程A。
进程同步主要源于进程合作，是进程之间共同完成一项任务时直接发生相互作用的关系，为进程之间的直接制约关系。在多道程序系统中，这种进程间在执行次序上的协调是必不可少的；进程互斥主要源于资源共享，是进程之间的间接制约关系。在多道程序系统中，每次只允许一个进程访问的资源称为临界资源，进程互斥要求保证每次只有一个进程使用临界资源。在每个进程中访问临界资源的程序段称为临界区，进程进入临界区要满足一定的条件，以保证临界资源的安全使用和系统的正常运行。
1. 信号量
信号量是一个二元组（S，Q），其中S是一个整形变量，初值为非负数，Q为一个初始状态为空的等待队列。在多道程序系统中，信号量机制是一种有效的实现进程同步与互斥的工具。信号量的值通常表示系统中某类资源的数目，若它大于0，则表示系统中当前可用资源的数量；若它小于0，则表示系统中等待使用该资源的进程数目，即在该信号量队列上排队的PCB的个数。信号量的值是可变的，由PV操作来改变。
PV操作是对信号量进行处理的操作过程，而且信号量只能由PV操作来改变。P操作是对信号量减1，意味着请求系统分配一个单位资源，若系统无可用资源，则进程变为阻塞状态；V操作是对信号量加1，意味着释放一个单位资源，加1后若信号量小于等于0，则从就绪队列中唤醒一个进程，执行V操作的进程继续执行。
对信号量S进行P操作，记为P(S)；对信号量S进行V操作，记为V(S)。P(S)和V(S)的处理过程如表3-1所示。

http://www.educity.cn/article_images/2014-01-15/d5bd62a2-63ca-408b-b865-cfe8e987abea.jpg
2. 实现互斥模型
使用信号量机制实现进程互斥时，需要为临界资源设置一个互斥信号量S，其初值通常为1。在每个进程中将临界区代码置于P(S)和V(S)之间。必须成对使用PV原语，缺少P原语则不能保证互斥访问，缺少V原语则不能在使用临界资源之后将其释放。而且，PV原语不能次序颠倒、重复或遗漏。
3. 实现同步模型
使用信号量机制实现进程同步时，需要为进程设置一个同步信号量S，其初值通常为0。在进程需要同步的地方分别插入P(S)和V(S)。一个进程使用P原语时，则另一个进程往往使用V原语与之对应。具体怎么使用要根据实际情况决定，下面举个简单例子来加以说明。
有两个进程P1和P2，P1的功能是计算x=a+b的值，a和b是常量，在P1的前面代码中能得到；P2的功能是计算y=x+1的值。若这两个进程在并发执行，则有同步关系：P2要执行y=x+1时必须等到P1已经执行完x=a+b语句。P2进程可能会因为要等待x的值而阻塞，如果是这样的话，P1进程就要在计算出x的值后唤醒P2进程。因此，为了使P1和P2正常运行，用信号量来实现其同步的过程如表3-2所示。

http://www.educity.cn/article_images/2014-01-15/8e5fcd3f-cedb-4e01-b9d9-e20056eb24c1.jpg
再举一个较为复杂的例子，以加深对PV操作的理解。设有两个并发进程Read和Print，Read负责从输入设备读入信息到一个容量为N的缓冲区，Print负责从缓冲区中取出信息送打印机输出。设置信号量mutex的初值为1，empty的初值为N，full的初值为0，则程序如表3-3所示。

http://www.educity.cn/article_images/2014-01-15/30ae239f-aa53-47a0-a799-fab741def7fb.jpg
3.2.3 死锁问题
开始学习
3.2.3 死锁问题
当若干个进程竞争使用资源时，如果每个进程都占有了一定的资源，又申请使用已被另一个进程占用、且不能抢占的资源，则所有这些进程都纷纷进入阻塞状态，不能继续运行，即系统中两个或两个以上的进程无限期地等待永远不会发生的条件，系统处于一种停滞状态，这种现象就称为死锁。产生死锁的主要原因是，系统缺少足够的资源供进程使用，对互斥资源的共享与并发执行的顺序不当，以及资源分配不当。产生死锁的四个必要条件如下：
（1）互斥条件。任一时刻只允许一个进程使用资源。
（2）不剥夺条件。进程已经占用的资源，不会被强制剥夺。
（3）请求与保持条件。进程在请求其余资源时，不主动释放已经占有的资源。
（4）环路条件。环路中每一条边是进程在请求另一个进程已经占有的资源。
对死锁的处理，常用的方法有死锁的预防、避免和检测与解除等方法，它们各自的性能和主要优缺点如表3-4所示。

http://www.educity.cn/article_images/2014-01-15/c79ba775-2f8f-4ce6-9e14-89c44642fc9d.jpg
1. 死锁预防
所谓死锁预防，就是采用某种策略，限制并发进程对资源的请求，使系统在任何时刻都不满足死锁的必要条件。死锁预防主要是针对破坏死锁的四个必要条件进行的。
（1）破坏互斥条件。由于这是设备的固有特性，很难去改变，因此不仅不能改变，还应设法加以保证。
（2）破坏不剥夺条件。如果进程申请新的资源而得不到满足，则暂时释放已有的资源。这种策略实现复杂，例如，要保护进程及资源释放的现场等。此外，该策略还可能由于反复地申请和释放资源，使进程的执行无限推迟，延长了进程的周转时间，增加了系统开销，降低了系统吞吐量。
（3）破坏请求与保持条件。进程一次性申请全部资源，系统若有足够资源，则一次性把其所需资源分配给进程。在分配时，只有一个资源要求不能满足，则已有的其他资源也全部不分配给该进程，该进程只能等待。由于等待期间，该进程未占有任何资源，因此可以避免死锁。该策略的优点是简单、易于实现，但也可能造成资源浪费，以及进程延迟运行。
（4）破坏环路条件。这种策略将资源进行编号，进程按照资源的编号进行有序申请。该策略的主要缺点是，为系统中各种资源分配的序号必须相对稳定，尽管在分配资源序号时，考虑了大多数进程实际使用这些资源的排序，但也会经常发生进程使用资源的顺序与系统规定的顺序不同的情况，造成资源的浪费。另外，按规定次序申请资源的方法，限制了用户简单、自由地编程。
2. 死锁避免
死锁避免是将限制条件弱化，允许死锁的存在，但不让它发生，设置一种安全状态，进程按照某种顺序来为其分配资源。在某一时刻，系统能按某种顺序为每个进程分配其所需资源，直到最大需求，使每个进程都能顺利地完成，则称此时系统处于安全状态。反之，称之为不安全状态。例如，在系统资源分配状态如表3-5所示时，系统处于安全状态。因为此时存在一个安全序列<P2，P1，P3>。

http://www.educity.cn/article_images/2014-01-15/4f699404-1598-4a71-8fcc-f77a94ce6002.jpg
引入安全状态的目的在于，在进行资源分配时，要使系统不发生死锁，只要保证当前的系统状态是安全的，即每次资源分配之后系统都处于安全状态。银行家算法就是用来判断系统状态是否安全，从而决定是否为进程分配资源的一种方法。
银行家算法的基本思想是，银行家把他的固定资金借给若干顾客，使这些顾客能满足对资金的要求又能完成其交易，也使银行家可以收回全部的现金。只要不出现一个顾客借走所有资金后还不够，银行家的资金应是安全的。在进程管理中，系统就是“银行家”，进程就是“顾客”。例如，假设系统中有5个并发进程，共享3类资源，在某一时刻，出现如表3-6所示的资源分配情况。

http://www.educity.cn/article_images/2014-01-15/e850dd4b-a414-498f-b05a-ad0389ac1aeb.jpg
如果系统剩余资源数量为（3，2，2），则系统是安全的。因为存在安全序列<P1，P3，P0，P2，P4>，具体过程如下：
（1）首先，求出各进程剩余需求量。P0为（7，5，3）-（0，1，0）=（7，4，3）；P1为（3，2，2）-（2，1，0）=（1，1，2）；P2为（9，0，2）-（3，0，2）=（6，0，0）；P3为（2，2，2）-（2，1，1）=（0，1，1）；P4为（4，3，3）-（0，0，2）=（4，3，1）。
（2）根据系统剩余资源数（3，2，2），找到可以立即满足的进程是P1（或P3均可）。例如，分配给P1，则系统剩余资源数为（3，2，2）-（1，1，2）=（2，1，0）。
（3）P1满足后正常运行，运行结束时释放所占有的资源，此时，系统剩余资源数为（2，1，0）+（3，2，2）=（5，3，2）。
（4）找到可立即满足的进程是P3（或P4均可）。例如，分配给P3，则系统剩余资源数为（5，3，2）-（0，1，1）=（5，2，1）。
（5）P3满足后正常运行，运行结束时释放所占有的资源，此时，系统剩余资源数为（5，2，1）+（2，2，2）=（7，4，3）。
（6）依此类推，找到可立即满足的进程是P0（或P2、P4均可），所有进程依次进入安全序列。
3. 死锁检测和解除
死锁检测是指系统保存资源的请求和分配信息，利用某种算法对这些信息加以检查，以判断是否存在死锁。死锁检测算法主要检查是否有循环等待，可以对资源分配图进行简化来检测是否处于死锁状态，如图3-3所示。

http://www.educity.cn/article_images/2014-01-15/45b0bbb2-1586-4330-b23c-aedbe3d966f7.jpg
在图3-3中，有向图的顶点为资源或进程，从资源R1指向进程P1的边表示R1已分配给P1，从进程P1指向资源R2的边表示P1正因请求R2而处于等待状态。有向图中的回路表示可能存在死锁。
系统一旦出现死锁，必须采用一些方法来解除死锁和进行系统恢复，通常的恢复方法如下：
（1）资源剥夺法。挂起某些死锁进程，并抢占它的资源，让这些资源分配给其他的死锁进程。但应避免出现的进程“饿死”现象，“饿死”是指进程被剥夺资源而长时间得不到资源时处于资源匮乏的状态。
（2）进程撤销法。通过撤销占有资源多的进程或代价最小的进程，以解除死锁。撤销进程的原则是，根据进程优先级和其运行代价的高低来进行。
（3）进程回退法。让一个或多个进程回退到足以解除死锁的地步，进程回退时自愿释放资源而不是被剥夺资源。回退方法要求系统保持进程的历史信息。
3.2.4 线程管理
开始学习
3.2.4 线程管理
在现代操作系统中，通常都引进了线程的概念。线程是进程的活动成分，是处理器分配资源的最小单位，它可以共享进程的资源与地址空间，通过线程的活动，进程可以提供多种服务（对系统进程而言）或实行子任务并行（对用户进程而言）。每个进程创建时只有一个线程，根据需要在运行过程中创建更多的线程（前者也可称“主线程”）。显然，只有主线程的进程才是传统意义下的进程。
1. 线程的实现方式
线程基本上不拥有系统资源，只拥有在运行中必不可少的资源，例如，线程状态、寄存器上下文和栈等，它可与同属一个进程的其他线程共享进程所拥有的全部资源。线程也有就绪、阻塞和执行等基本状态，一个线程可以创建和撤销另一个线程；同一个进程中的多个线程之间可以并发执行。由于线程之间的相互制约，致使线程在运行中也呈现出间断性。
线程实现方式主要有以下三种：
（1）内核线程。内核线程依赖于操作系统内核，由内核的内部需求进行创建和撤销。一个线程发起系统调用而阻塞，不会影响其他线程。系统将CPU时间片分配给各线程，所以，多线程的进程可以获得更多的CPU时间。
（2）用户线程。用户线程不依赖于操作系统内核，进程利用线程库提供创建、同步、调度和管理线程的函数来控制用户线程。调度由应用软件内部进行，通常采用非抢先式或更简单的规则，无需在用户态和核心态之间切换，因此，速度特别快。如果某个线程因系统调用而阻塞，则整个进程需要等待。系统将CPU时间片分配给进程，所以，多线程时每个线程就慢。
（3）轻权进程。轻权进程是操作系统内核支持的用户线程。一个进程可有一个或多个轻权进程，每个轻权进程由一个单独的内核线程来支持。
2. 与进程的比较
在引入线程的操作系统中，通常一个进程有若干个线程，至少也需要有一个线程。进程和线程的区别主要体现在以下五个方面：
（1）调度。在传统的操作系统中，拥有资源的基本单位和独立调度、分配的基本单位都是进程。而在引入线程的操作系统中，则将线程作为调度和分配的基本单位，将进程作为资源拥有的基本单位。
（2）并发性。在引入线程的操作系统中，不仅进程之间可以并发执行，而且同一个进程的多个线程之间也可并发执行，从而使操作系统具有更好的并发性，能够有效地使用多个资源和提高系统吞吐量。
（3）拥有资源。一般来说，线程除了拥有一点必不可少的资源外，它自己不拥有系统资源，但它可以访问其隶属进程的资源。也就是说，一个进程所拥有的资源可供它的所有线程共享。
（4）系统开销。在进程切换时，涉及到整个当前进程CPU环境的保存和新被调度运行进程的CPU环境的设置、裸机地址空间的切换；而线程切换只需保存和设置少量寄存器的内容，并不涉及存储器管理方面的操作。可见，进程切换的开销远大于线程切换的开销。此外，由于同一进程中的多个线程具有相同的地址空间，这使它们之间的同步和通信变得比较容易。在有的系统中，线程的切换、同步和通信都无需操作系统内核的干预。
（5）通信方面。进程间通信需要进程同步和互斥手段的辅助，以保证数据一致性，而线程间可以直接读写进程数据段（例如，全局变量等）来进行通信。
3. 多线程模型
许多操作系统都提供用户和内核线程支持，从而有不同的多线程模型。
（1）多对一模型。多对一模型将多个用户线程映射到一个内核线程，如图3-4所示。线程管理是在用户空间进行的，因此效率比较高。但是，如果一个线程执行了阻塞系统调用，那么整个进程就会阻塞。而且，因为任一时刻只有一个线程能够访问内核，多个线程不能并行运行在多处理器上。

http://www.educity.cn/article_images/2014-01-15/2963e29f-5a36-45db-8ab1-d49f464ae207.jpg
（2）一对一模型。一对一模型将每个用户线程映射到一个内核线程，如图3-5所示。该模型在一个线程执行阻塞系统调用时，能允许另一个线程继续执行，所以，它提供了比多对一模型更好的并发功能，它也允许多个线程能并行地运行在多处理器上。这种模型的主要缺点是每创建一个用户线程，都需要一个相应的内核线程。由于创建内核线程的开销会影响到应用程序的性能，所以，这种模型的大多数实现限制了系统所支持的线程数量。

http://www.educity.cn/article_images/2014-01-15/6230bb31-c411-4d31-9853-7d42108b3f6c.jpg
（3）多对多模型。多对多模型复用了许多用户线程到同样数量或更小数量的内核线程上，如图3-6所示。内核线程的数量可能与特定应用程序或特定机器有关，位于多处理器上的应用程序可比单处理器上的应用程序分配更多数量的内核线程。

http://www.educity.cn/article_images/2014-01-15/734c6384-af32-4c48-870d-881d2a438b55.jpg
虽然多对一模型允许开发人员随意创建任意多的用户线程，但是，由于内核只能一次调度一个线程，所以并不能增加并发性。一对一模型提供了更大的并发性，但是开发人员必须小心，不要在应用程序内创建太多的线程。多对多模型没有这两者的缺点，开发人员可创建任意多的必要的用户线程，并且相应内核线程能在多处理器上并行执行。另外，当一个线程执行系统调用阻塞时，内核能调度另一个线程来执行。
3.3 内存管理
由于任何程序和数据都必须占用内存空间后才能执行，因此，内存管理的优劣直接影响系统的性能。尽管现代计算机中内存容量不断增大，但仍不能保证有足够的空间来支持大型应用程序和数据的使用，因此，操作系统的任务之一是尽可能地方便用户使用和提高内存的利用效率。此外，有效的内存管理也是多道程序设计系统的关键支撑。具体来说，内存管理的功能主要包括以下几个方面：
（1）内存空间的分配与回收。
（2）配合硬件进行地址转换工作，把用户使用的逻辑地址转换成处理器能访问的物理地址。
（3）内存空间的共享与保护，使得若干个进程能够同时访问公共程序所占的内存区，同时，能够防止多个程序在执行中互相干扰，并保护区域内的信息不被破坏。
（4）当内存容量不足时，操作系统要采取某种措施，在不改变实际内存容量的前提下，借助于大容量的外存来解决内存不够用的问题。

3.3.0 内容介绍
开始学习
由于任何程序和数据都必须占用内存空间后才能执行，因此，内存管理的优劣直接影响系统的性能。尽管现代计算机中内存容量不断增大，但仍不能保证有足够的空间来支持大型应用程序和数据的使用，因此，操作系统的任务之一是尽可能地方便用户使用和提高内存的利用效率。此外，有效的内存管理也是多道程序设计系统的关键支撑。具体来说，内存管理的功能主要包括以下几个方面：
（1）内存空间的分配与回收。
（2）配合硬件进行地址转换工作，把用户使用的逻辑地址转换成处理器能访问的物理地址。
（3）内存空间的共享与保护，使得若干个进程能够同时访问公共程序所占的内存区，同时，能够防止多个程序在执行中互相干扰，并保护区域内的信息不被破坏。
（4）当内存容量不足时，操作系统要采取某种措施，在不改变实际内存容量的前提下，借助于大容量的外存来解决内存不够用的问题。

3.3.1 地址变换
开始学习
3.3.1 地址变换
用户作业的程序通常用高级语言编写，称为源程序。但源程序是不能被计算机直接执行的，需要通过编译程序或汇编程序编译获得目标程序。目标程序的地址不是内存的实际地址，一般将用户目标程序使用的地址单元称为逻辑地址（也称为相对地址或虚拟地址），逻辑地址一般以0为基地址进行编址，是程序经过编译或汇编后形成的目标模块或装配连接程序的地址编码。一个用户作业的目标程序的逻辑地址集合称为该作业的逻辑地址空间。作业的逻辑地址空间可以是一维的，这时逻辑地址限制在从0开始顺序排列的地址空间内；也可以是二维的，这时整个用户作业被分成若干段，每段有不同的段号，段内地址从0开始。
当程序运行时，它将被装入内存地址空间的某些部分，此时程序和数据的实际地址一般不可能与原来的逻辑地址一致，将内存中的实际存储单元称为物理地址（也称为绝对地址或实际地址）。物理地址的总体构成了用户程序实际运行的物理地址空间（也称为存储空间），它是由存储器地址总线扫描出来的空间，其大小取决于实际安装的内存容量。
为了保证程序的正确运行，必须将程序和数据的逻辑地址转换为物理地址，这一工作称为地址转换或重定位。一般情况下，一个作业在装入内存时分配到的存储空间和它的地址空间是不一致的。在装入作业或执行时，若不对有关地址加以修改，将导致错误的结果。因此，需要将程序中的地址调整成与所装入的内存空间相一致，有关地址部分的调整过程就是地址重定位的过程。重定位公式表示为：
物理地址 = 起始的物理地址+逻辑地址
例如，一个作业被装入到从1000开始的内存区域中，则该作业的物理地址为其逻辑地址值加上1000。
地址转换通常有两种方式，分别是静态重定位和动态重定位。
静态重定位是指在作业装入时由作业装入程序（装配程序）实现地址转换。这种方式要求目标程序使用相对地址，地址变换在作业执行前一次性完成。静态重定位的特点是容易实现，无需增加硬件地址变换机构，当操作系统为程序分配了一个内存区域后，只需将程序中的指令或操作数的逻辑地址加上分配内存区的起始地址就得到了物理地址。但它要求为每个程序分配一个连续的存储区，在程序执行期间不能移动，且难以做到程序和数据的共享，其内存利用率低。
动态重定位是指在程序执行过程中，CPU访问程序和数据之前实现地址转换。在多道程序系统中，可用的内存空间常常被许多进程共享，程序员编程时事先不可能知道程序执行时的驻留位置，而且必须允许程序因对换或空间收集而被移动，这些现象都需要程序的动态重定位。动态重定位必须借助于硬件的地址转换机构来实现，最简单的方式是利用一个重定位寄存器。当某个作业开始执行时，操作系统负责将该作业在内存中的起始地址送入重定位寄存器中。之后，在作业的整个执行过程中，每当访问内存时，重定位寄存器的内容将被自动地加到逻辑地址送入内存地址寄存器中去，从而得到了该逻辑地址对应的物理地址，用内存地址寄存器的内容访问数据。动态重定位的优点是程序可在内存中移动，当程序移动后，只要将新的内存区域的首地址放进基址寄存器就可以了。而且，动态重定位方式容易实现程序的共享，有可能提供虚拟存储空间。
3.3.2 分区存储管理
开始学习
3.3.2 分区存储管理
存储器的管理方式随着操作系统的发展而发展，早期存储管理方式发展的推动力，主要来自于“千方百计地提高存储器的利用率”。这样，由固定式分区存储分配方式演变为分页式存储管理方式，此时，存储器利用率已达到较为令人满意的程度，而后存储器管理继续发展的动力，则主要来自于更好地满足用户的需要，这样，又产生了分段式存储管理方式和虚拟存储器。
在存储管理系统中，最简单的方法就是单一连续管理，即将内存空间分成两个存储区域，一个区域用来存储操作系统程序，另一个区域归用户使用，称为用户内存区。该管理方式的主要特点是管理简单，不需要太多的软硬件支持。但由于内存中只允许存放一个作业，系统的资源利用率不高，一般只能用于单用户、单任务的操作系统中。分区管理是支持多道程序运行的最简单的一种内存管理方式，主要有固定分区、可变分区、可重定位分区和多重分区四种方式。
1. 固定分区
固定分区也称为静态分区，是在作业装入之前，内存就被划分为若干个分区。划分工作可以由系统管理员完成，也可以由操作系统实现。一旦划分完成，在系统运行期间不再重新划分，即分区个数不可变，分区大小不可变。这种分区方式一般将内存的用户区域划分成大小不等的分区，以适应不同大小的作业的需要。系统有一张分区说明表，每个表目说明一个分区的大小、起始地址和是否已分配的标志。固定分区的主要优点是实现技术简单，适用于作业的大小和多少事先都比较清楚的系统中；其主要缺点是由于每个分区只能存放一个作业，所以内存的利用率不高，内部碎片较多。
2. 可变分区
可变分区也称为动态分区，是指在作业装入内存时，从可用的内存中划出一块连续的区域分配给它，形成一个新的分区，且分区大小正好等于该作业的大小。可变分区中分区的大小和分区的个数都是可变的，而且是根据作业的大小和多少动态地划分的。这种内存管理技术是固定分区的改进，既可以获得较大的灵活性，又能提高内存的利用率。
可变分区在分配时，首先找到一个足够大的空闲分区（自由分区），即这个空闲区的大小比作业要求的要大，系统则将这个空闲分区分成两个部分，一部分成为已分配的分区，剩余的部分仍作为空闲区。在回收撤除作业所占领的分区时，要检查回收的分区是否与前后空闲的分区相邻接，若是则加以合并，使之成为一个连续的大空间。在选择空闲分区时，可变分区分配策略主要采用以下几种算法：
（1）首次适应算法。从空闲区表（空闲区链）的第一个表目起查找该表，把最先能够满足要求的空闲区分配给作业，这种方法的目的在于减少查找时间。为适应这种算法，空闲区表中的空闲区要按地址由低到高进行排序。该算法的特点是，如果找出的空闲区长度恰好等于申请的长度则是最合适的；如果比申请的长度略大，则分割后剩下的空闲区就很小，这种空闲区不但不能被再度使用，而且还占用空闲区表的一个节点。当空闲区表中的小空闲区节点过多时，本算法的性能急剧下降。
（2）最佳适应算法。它从全部空闲区中找出能满足作业要求的、且最小的空闲区，这种方法能使碎片尽量小。为适应这种算法，空闲区表中的空闲区要按大小从小到大进行排序，自表头开始查找到第一个满足要求的空闲分区分配。最佳适应算法的特点是，分配空间时尽量利用低地址部分的存储区域，而使高地址部分保持较大的空闲区，有利于大进程空间的装入。
（3）最坏适应算法。从所有未分配的分区中挑选最大的且大于和等于作业大小的分区分给要求的作业；空闲区按由大到小排序，每次查找从链头开始。最坏适应算法的特点是，由于过多地分割大的空闲区，当遇到较大空间申请时，可能无法满足其申请。该算法对中、小作业比较有利。
实践表明，针对存储空间利用情况的三种策略中，首次适应算法可能比最佳适应算法好，而首次适应算法和最佳适应算法一定比最坏适应算法好。
3. 可重定位分区
可重定位分区分配是解决存储器碎片问题的简单而有效的方法。其基本思想是在适当的时候，把零散的空白区合并为一个大的空白空间，称为拼接。实现方式是移动某些已分配区域中的信息，使所有的分配去紧挨着存储器的一端，而空白区在另一端。
4. 多重分区
多重分区的基本思想是为一个作业分配一个以上的分区，允许一个作业在其运行过程中动态地申请附加存储空间，该空间不必和已有的作业分区相连接。多重分区的优点是便于使用共享子程序或数据，其缺点是需要较多的硬件支持，因为该分区方式一定要有动态重定位结构来支持，管理也较复杂。
5. 存储器保护
分区方式允许多道程序在内存中同时运行，因此，必须解决存储器保护问题。常用的方法有界地址保护和设置存储键保护。
界地址保护又称为界限寄存器保护，分为界限寄存器、基址和限长寄存器两种保护方式。其中界限寄存器方式是指下界寄存器存放作业分区的起始地址，上界寄存器存放下一个分区的起始地址。每次寻址和访问时，先与这两个寄存器的内容进行比较，以实现对分区的保护；基址和限长寄存器方式是指基址寄存器存放作业分区的起始地址，限长寄存器存放作业的最大偏移量（长度）。在作业运行过程中，在访问存储器时所计算出的存储地址如果超过限长，则发出越界中断信号。
存储键保护的基本思想是系统对每个作业或进程进行内存分配时，对同一作业的各页面所对应的内存块都要指定一个相同的、不与其他作业相重的键（代码），这个键保存于快速寄存器和该作业的程序状态字中。当程序要访问某一块时，将程序状态字中的键与被访问块的键进行比较，若相符，则表明允许本次访问，否则就发出越界中断，请求系统处理。为使系统能访问内存的任何块，其程序状态字的键为“0”，此时，不必进行键的比较工作。
存储器的管理方式随着操作系统的发展而发展，早期存储管理方式发展的推动力，主要来自于“千方百计地提高存储器的利用率”。这样，由固定式分区存储分配方式演变为分页式存储管理方式，此时，存储器利用率已达到较为令人满意的程度，而后存储器管理继续发展的动力，则主要来自于更好地满足用户的需要，这样，又产生了分段式存储管理方式和虚拟存储器。
在存储管理系统中，最简单的方法就是单一连续管理，即将内存空间分成两个存储区域，一个区域用来存储操作系统程序，另一个区域归用户使用，称为用户内存区。该管理方式的主要特点是管理简单，不需要太多的软硬件支持。但由于内存中只允许存放一个作业，系统的资源利用率不高，一般只能用于单用户、单任务的操作系统中。分区管理是支持多道程序运行的最简单的一种内存管理方式，主要有固定分区、可变分区、可重定位分区和多重分区四种方式。
3.3.3 段页式存储管理
开始学习
3.3.3 段页式存储管理
分区存储管理存在产生存储碎片和空间管理较复杂的问题，其原因在于，这种管理方式要求把作业放在内存的一片连续区域中。为了避免这种连续性要求，可以将作业的逻辑地址空间分成若干个长度相等的区域（称为页），内存空间也划分成若干个与页长度相等的区域（称为页帧或块），程序装入时，每页对应一个页帧，这就是分页存储管理的思想。
1. 页式存储管理
在分页存储管理中，页帧可以是连续的，也可以是不连续的。系统为每道作业建立一张页面映射表（称为页表），记录相应页在内存中对应的页帧号。这种管理方式消除了可变分区中紧致存储空间所带来的开销，同时，又能实现内存信息共享和虚拟存储技术。
在分页存储管理中，地址结构由两部分组成，分别是页号和页内位移（页内地址）。地址变换机构的基本任务是利用页表把用户程序中的逻辑地址变换成内存中的物理地址，为了实现地址变换功能，在系统中设置页表寄存器，用来存放页表的起始地址和页表的长度。在进程未执行时，每个进程对应的页表的起始地址和长度存放在进程的PCB中，当该进程被调度时，就将它们装入页表寄存器。在进行地址变换时，系统将页号与页表长度进行比较，如果页号大于页表寄存器中的页表长度，则访问越界，产生越界中断。如未出现越界，则根据页表寄存器中的页表起始地址和页号计算出该页在页表项中的位置，得到该页的物理块号，将此物理块号装入物理地址寄存器中。与此同时，将有效地址寄存器中的页内地址直接装入物理地址寄存器的块内地址字段中，这样，便完成了从逻辑地址到物理地址的变换。
如果页表存放在内存中，则每次访问内存时，都要先访问内存中的页表，然后根据所形成的物理地址再访问内存。这样，CPU保存一个数据必须访问两次内存，降低了计算机的处理速度。为了提高地址变换的速度，可以在地址变换机构中增设一个具有并行查询功能的特殊高速缓冲存储器（称为联想存储器或快表），用以存放当前访问的那些页表项。
2．段式存储管理
段式存储管理按用户作业中的自然段来划分逻辑空间，每段占用连续的地址空间，其逻辑地址是二维的，由段号和段内地址组成。系统为每个作业建立一张段表，记录该段在内存中的起始地址和段长，各段可以存放在内存不同的分区中，段的分配与回收与可变分区存储管理相同。段式存储管理的地址转换采用动态重定位方式，地址转换机构取出逻辑地址的段号和段内地址，根据段号检索段表，找到该段对应的表目，将该段的起始地址与段内地址相加得到绝对地址。段式存储管理也存在二次访存问题，可以通过增设快表来解决。
段式存储管理可以采用地址转换机制进行越界保护和在段表中增设一些标志位，进行存取控制保护。由于用户对信息的共享要求是以段为单位的，因此共享易于实现，若多个作业段表中的某一项指向内存的同一咯地址，则内存中以该地址为起始地址的那一段便被共享了。虽然段存储式管理方便用户编程，便于共享与保护，支持动态链接和动态增长，但它对内存的管理与可变分区存储管理是类似的，也存在存储管理复杂，空间利用差的缺点。
段式存储管理和分页存储管理有许多相似之处，例如，都采用离散分配方式来提高内存利用率，都要通过地址变换机构来实现地址变换。但在概念上两者是完全不同的，它们的主要区别表现在以下三个方面：
（1）分页是一个单一的线性地址空间，分段作业地址空间是二维的。
（2）页是信息的物理单位，大小固定，分页活动是用户看不见的，分页的目的是为了提高内存的利用率；段是信息的逻辑单位，其长度不定，分段是用户可见的活动，分段的目的是为了更好地满足用户的需要。
（3）分页存储管理实现单段式虚拟存储系统，而段式存储管理实现多段式虚拟存储系统。
3．段页式存储管理
段页式存储管理的基本思想是将段式存储管理与分页存储管理结合起来，正好克服了各自存在的一些问题。段页式存储管理将作业分成若干段，每个段分成若干页，每段赋予一个段名，为了实现地址转换，必须为每个作业配置一张段表和若干张页表。内存的分配与回收以页为单位进行。作业的逻辑地址是二维的，包括段号和段内地址，其中段内地址又包含页号和页内地址两部分。
段页式存储管理的地址转换的具体步骤为：地址转换机构取出逻辑地址，并根据页的大小将段内地址再细分为页号和页内地址。根据段号检索段表，找到该段的页表存放地址；根据页号查页表，取出相应的页帧号；把页帧号和页内地址合并，得到物理地址，执行访存操作。由此可知，为了获得一条指令或数据，需要三次访问内存，这使得系统执行指令的速度更慢，同样可通过快表来解决，快表中存放当前使用的段号、页号、页帧号和页内地址等表目。段页式存储管理的保护方法与段式存储管理相同，共享则从页表开始。
3.3.4 虚拟存储管理
开始学习
3.3.4 虚拟存储管理
3.3.2节和3.3.3节介绍的各种存储管理方式中，必须为作业分配足够的存储空间，以装入有关作业的全部信息，作业的大小不能超出内存的可用空间，否则，这个作业是无法运行的。但当有关作业的全部信息都装入内存后，作业执行时实际上不是同时使用全部信息的，有些部分运行一遍便不再使用，甚至有些部分在作业执行的整个过程中都不会被使用（例如，错误处理部分等）。这种情况的出现，是对宝贵的内存资源的一种浪费，大大降低了内存利用率。
虚拟存储管理的提出就是为了解决这一问题，应用程序在运行之前并不必全部装入内存，仅需将当前运行到的那部分程序和数据装入内存便可启动程序的运行，其余部分仍驻留在外存上。当要执行的指令或访问的数据不在内存时，再由操作系统通过请求调入功能将它们调入内存，以使程序能继续执行。如果此时内存已满，则还需通过置换功能，将内存中暂时不用的程序或数据调至外存上，腾出足够的内存空间后，再将要访问的程序或数据调入内存，使程序继续执行。这样，便可使一个大的用户程序能在较小的内存空间中运行，也可在内存中同时装入更多的进程使它们并发执行。从用户的角度看，该系统具有的内存容量比实际的内存容量大得多。将这种具有请求调入功能和置换功能，能从逻辑上对内存容量加以扩充的存储器系统称为虚拟存储系统。
1. 局部性原理
虚拟存储管理能够在作业信息不全部装入内存的情况下保证作业正确运行，是利用了程序执行时的局部性原理。局部性原理是指程序在执行时呈现出局部性规律，即在一较短的时间内，程序的执行仅局限于某个部分。相应地，它所访问的存储空间也仅局限于某个区域。程序局部性包括时间局部性和空间局部性，时间局部性是指程序中的某条指令一旦执行，不久以后该指令可能再次执行。产生时间局部性的典型原因是由于程序中存在着大量的循环操作；空间局部性是指一旦程序访问了某个存储单元，不久以后，其附近的存储单元也将被访问，即程序在一段时间内所访问的地址可能集中在一定的范围内，其典型情况是程序顺序执行。
2. 工作集
在虚拟存储管理中，可能会出现这种情况，即对于刚被替换出去的页，立即又要被访问，需要将它调入，因无空闲内存又要替换另一页，而后者是即将被访问的页，于是造成了系统需花费大量的时间忙于进行这种频繁的页面交换，致使系统的实际效率很低，严重时导致系统瘫痪，这种现象称为抖动现象。防止抖动现象有多种办法，例如，采取局部替换策略、引入工作集算法和挂起若干进程等。工作集是指在某段时间间隔内，进程实际要访问的页面的集合。引入虚拟内存后，程序只需有少量的内存就可运行，但为了使程序有效地运行，较少产生缺页，必须使程序的工作集全部在内存中。
3. 页面置换算法
当内存中没有空闲页面，而又有程序和数据需要从外存中装入内存运行时，就需要从内存中选出一个或多个页面淘汰出去，以便新的程序和数据装入运行，良好的页面置换算法应该淘汰那些被访问概率最低的页，将它们移出内存。
（1）随机淘汰算法。无法确定哪些页被访问的概率较低时，随机地选择某个页面，并将其换出。
（2）轮转算法。按照内存页面的编号，循环地换出内存中一个可以被换出的页，无论该页是刚换进来还是已驻留内存很长时间。
（3）先进先出算法（First In First Out，FIFO）。FIFO算法总是选择在内存驻留时间最长的一页将其淘汰。实现FIFO算法需要把各个已分配页面按页面分配时间顺序链接起来，组成FIFO队列，并设置一置换指针，指向FIFO队列的队首页面。FIFO算法忽略了一种现象的存在，那就是在内存中停留时间最长的页往往也是经常要访问的页。将这些页淘汰，很可能刚置换出去，又请求调用该页，致使缺页中断太频繁，严重降低内存的利用率。
FIFO的另一个缺点是它可能会产生一种异常现象。一般来说，对于任一作业或进程，如果给它分配的内存页面数越接近于它所要求的页面数，则发生缺页的次数会越少。但使用FIFO算法时，有时会出现分配的页面数增多，缺页次数反而增加的现象，称为belady现象。
（4）最近最久未使用算法（Least Recently Used，LRU）。当需要淘汰某一页时，选择离当前时间最近的一段时间内最久没有使用过的页先淘汰。例如，考虑一个仅460个字节的程序的内存访问序列（10，11，104，170，73，309，185，245，246，434，458，364），页面的大小为100个字节，则460个字节应占5页，编号为0~4，第0页字节为0~99，第1页为100~199，依此类推。得到页面的访问序列是（0，0，1，1，0，3，1，2，2，4，4，3），可简化为（0，1，0，3，1，2，4，3）。如果内存中有200个字节可供程序使用，则内存提供2个页帧供程序使用。按照FIFO算法，共产生6次缺页中断，如表3-7所示。

http://www.educity.cn/article_images/2014-01-15/50a0a8a5-89b2-431d-8dad-bfddf62d6d6c.jpg


按照LRU算法，共产生7次缺页中断，如表3-8所示。
表3-8   LRU算法缺页中断

http://www.educity.cn/article_images/2014-01-15/7520dc73-ffc7-4753-afbb-1e7e53355e0f.jpg

http://www.educity.cn/article_images/2014-01-15/659bda45-f3c6-44e4-afb3-1c3f0d0a82ab.jpg
（5）最近没有使用页面置换算法（No Used Recently，NUR）。在需要置换某一页时，从那些最近的一个时期内未被访问的页任选一页置换。只要在页表中增设一个访问位即可实现。当某页被访问时，访问位置为1，否则访问位置为0。系统周期性地对所有引用位清零。当需淘汰一页时，从那些访问位为零的页中选一页进行淘汰。
（6）最优置换算法。选择那些永久不使用的，或者在最长时间内不再被访问的页面置换出去。因为要确定哪个页面是未来最长时间内不再被访问的，目前来说很难估计，所以，该算法通常用来评价其他算法。
（7）时钟页面替换算法（Clock）。使用页表中的引用位，将作业已调入内存的页面链成循环队列，用一个指针指向循环队列中的下一个将被替换的页面。其实现方法如下：一个页面首次装入内存时，其引用位置1；在内存中的任何一个页面被访问时，其引用位置1；淘汰页面时，存储管理从指针当前指向的页面开始扫描循环队列，把所遇到的引用位是1的页面的引用位清0，并跳过这个页面；把所遇到的引用位是0的页面淘汰掉，指针推进一步；扫描循环队列时，如果遇到的所有页面的引用位均为1，则指针就会绕整个循环队列一圈，将碰到的所有页面的引用位清0；指针停在起始位置，并淘汰掉这一页，然后指针推进一步。
3.4 文件系统
文件是操作系统进行信息管理的基本单位，对软件资源的管理是通过文件系统来实现的。为了实现这些功能，操作系统必须考虑文件目录的建立和维护、存储空间的分配和回收、信息的编址方法和存储次序，以及如何检索用户信息等问题。
3.4.0 内容介绍
开始学习
文件是操作系统进行信息管理的基本单位，对软件资源的管理是通过文件系统来实现的。为了实现这些功能，操作系统必须考虑文件目录的建立和维护、存储空间的分配和回收、信息的编址方法和存储次序，以及如何检索用户信息等问题。
3.4.1 文件的组织结构
开始学习
3.4.1 文件的组织结构
文件的组织结构是指文件的构造方式，通常可以从两个不同的角度来对它进行考察。其中，从用户角度看到的文件称为文件的逻辑组织，从系统角度看到的文件称为文件的物理组织。
1. 逻辑结构
文件的逻辑结构（逻辑文件）是指用户概念中的文件，它独立于物理存储。逻辑文件有两种形式，分别是无结构的流式文件和有结构的记录式文件。
（1）流式文件。流式文件是相关信息项的集合，基本单位是字节（或字），它的管理比较简单，用户可以很方便地对其进行操作。因此，那些对基本信息单位操作不多的文件较适用于采用流式文件结构，例如，源程序文件、目标代码文件等。在UNIX系统中，所有的文件都被看成是流式文件，系统不对文件进行格式处理。
（2）记录式文件。记录式文件是数据记录的集合，其基本单位是逻辑记录，记录的长度有等长或变长之分。对记录式文件，所有记录描述一个实体集，有相同或不同数目的数据项。流式文件也可视为记录式文件的特例，即每个记录只有1个字节（或字）。记录式文件的逻辑组织有三种形式，一种是顺序存储方式，即记录按序排列；一种是直接存储方式，即用户对记录的存储是不按顺序的，可以指定某一记录进行存储；一种是按键存取方式，即用户对文件内容的访问不是根据记录的编号或地址，而是根据记录的某项内容（关键字）来进行的。
2. 物理结构
文件物理结构（物理文件）是指文件在存储介质上的组织方式，它依赖于物理的存储设备和存储空间，可以看作是相关物理块的集合。由于物理结构决定了信息在存储设备上的存放位置和方式，因此，信息的逻辑位置到物理位置的映射关系也是由物理结构决定的。常用的文件物理结构有顺序结构、链接结构和索引结构。
（1）顺序结构（连续结构）。逻辑上连续的记录构成的文件分配到连续的物理块中。这种方式管理简单，存储速度快，空间利用率低，但文件记录插入或删除操作不方便，只能在文件末尾进行。
（2）链接结构（串联结构）。将信息存放在非连续的物理块中，每个物理块均设有一个指针，指向其后续的物理块，从而使得存放同一文件的物理块链接成一个串联队列。链接方式又分为显式链接和隐式链接。显式链接的链接指针在专门的链接表中，隐式链接的指针在存放信息的物理块中。链接结构空间利用率高，且易于文件扩充，但查找效率比较低。
（3）索引结构（随机结构）。为每个文件建立一个索引表，其中每个表项指出信息所在的物理块号，表目按逻辑记录编写顺序或按记录内某一关键字顺序排列。对于大文件，为检索方便，可以建立多级索引，还可以将文件索引表也作为一个文件（称为索引表文件）。该方式可以满足文件动态增长的要求且存取方便，但建立索引表增加了存储空间的开销，对于多级索引，访问时间开销较大。
例如，在UNIX系统中，文件的物理结构采用直接、一级、二级和三级间接索引技术，假如索引节点有13个地址项，并且规定地址项0~9采用直接寻址方法，地址项10采用一级间接寻址，地址项11采用二级间接寻址，地址项12采用三级间接寻址。每个盘块的大小为1KB，每个盘块号占4B，那么，对于访问文件的第356168B处的数据来说，先进行简单换算356168/1024≈348KB，由于地址项0~9可直接寻址10个物理盘块，每个物理块大小为1KB，所以访问文件的前10KB范围的数据时是直接寻址。地址项10采用一次间接寻址，即地址项10里存放的是一级索引表的地址，因为每个盘块号占4B，所以该索引表可存放1024/4=256个物理块的地址，所以当访问文件的10~266KB之间的数据时是一次间接寻址。由于要访问的数据是348KB，所以还有348-266=82KB。显然地址项11足够存取这些数据，因此，最多就在地址项11而无须存取地址项12，即只需要二级间接寻址。
3. 树形文件结构
文件控制块的集合称为文件目录，文件目录也被组织成文件，常称为目录文件。文件管理的一个重要方面是对文件目录进行组织和管理。文件系统一般采用一级目录结构、二级目录结构和多级目录结构，例如，UNIX和Windows系统都采用了多级树形目录结构，如图3-7所示。

http://www.educity.cn/article_images/2014-01-15/e9ab3d91-d6a2-4d0c-b2fd-b617ffcf54cb.jpg
在图3-7中，主文件目录称为根目录，根目录下的子目录称为中间节点，子目录下的文件称为叶节点。从根目录出发到某文件的通路上所有各级子目录名和该文件名的顺序组合称为文件的路径名。每个文件都有一个唯一的路径名。为操作方便，减少访问时间，系统给用户指定一个当前目录，若用户欲访问某文件，就不用给出全部路径，只需给出从当前目录到欲查找文件之间的相对路径名。树形目录结构的特点是层次清楚，解决了文件重名问题，提高了查找的效率，同时也方便用户共享文件。
3.4.2 存储空间管理
开始学习
3.4.2 存储空间管理
一个大容量的文件存储器为系统本身和许多用户所共享。为方便用户“按名存取”所需文件，系统应能自动为用户分配并管理系统和用户的存储空间。为此，必须解决以下三个问题：登记空闲区的分布情况、按需要给一个文件分配存储空间，以及收回不再保留的文件所占的存储空间。以上问题都可以归结为磁盘空闲区的管理问题，常用的磁盘空闲区管理方法有空闲文件目录、空闲块链、位示图和成组链接法。
1. 空闲文件目录
磁盘空间上一个连续的未分配区域成为空闲文件。系统为所有这些空闲文件单独建立一个目录。对每个空闲文件，在这个目录中建立一个表目。表目的内容包括第一个空闲块地址（物理块号）和空闲块个数等。在进行存储空间的分配时，也可采用首次适应和最佳适应等算法，而回收时，同样要进行空闲区的合并。这种方法的优点是空闲区的分配和回收都相当容易，但用来管理空闲区的空闲表需要占用大量的存储空间。
2. 空闲块链
空闲块链是将所有空闲块用链接指针或索引结构组成一个空闲文件。释放和分配空闲块都可以在链首进行，只需要修改几个有关的链接字。该方法只要求在内存中保存一个指针，令它指向第一个空闲块，其优点是实现简单，但工作效率低，因为每当在链上增加或移去空闲块时，都需要对空闲块做较大的调整，从而会有较大的系统开销。一种改进方法是将空闲块分成若干组，再用指针将组与组链接起来，将这种管理空闲块的方法称为成组链接法，它在进行空闲块的分配与回收时要比空闲块链法节省时间。
3. 位示图法
位示图是利用二进制的1位来表示文件存储空间中的1个块的使用情况。一个m行、n列的位示图，可用来描述m×n块的文件存储空间，当行号、列号和块号都是从0开始编号时，第i行、第j列的二进制位对应的物理块号为i×n+j。如果“0”表示对应块空闲，“1”表示对应块已分配，则在进行存储空间的分配时，可顺序扫描位示图，从中找出一个或一组值为“0”的二进制位，将对应的块分配出去，并将这些位置“1”，而在回收某个块时，只需找到对应的位，并将其值清零即可。位示图法适合于所有的分配方式，它简单易行，而且，位示图通常较小，故可将其读入内存，从而进一步加快文件存储空间分配和回收的速度。
4. 成组链接法
成组链接法是对空闲块链法的一种改进，它将一个文件卷的所有空闲盘块按固定大小（例如，每组m块）分成若干组，并将每一组的盘块数和该组所有的盘块记入前一组的最后一个盘块中，第一组的盘块数和该组的所有盘块号则记入超级块的空闲盘块中。当系统要为用户分配文件所需的盘块时，若第一组不只一块，则将超级块中的空闲盘块数减1，并将空闲盘块栈顶的盘块分配出去；若第一组只剩一块且栈顶的盘块号不是结束标记“0”，则先将该块的内容（记录有下一组的盘块数和盘块号）读到超级块中，然后再将该块分配出去；否则，若栈顶的盘块号为结束标记“0”，则表示该磁盘上已无空闲盘块可供分配。
在系统回收空闲盘块时，若第一组不满m块，则只需将回收块的块号填入超级块的空闲盘栈顶，并将其中的空闲盘块数加1；若第一组已有m块，则必须先将超级块中的空闲盘块数和空闲盘块号写入回收块中，然后将盘块数和回收块的块号记入超级块中。
值得注意的是，超级块中的空闲盘块栈是临界资源，对该栈的操作必须互斥地进行。系统需要为空闲盘块设置一把“锁”，并通过上锁和解锁来实现对空闲盘块栈的操作。成组链接法除了第一组空闲盘块外，其余空闲盘块的登记不占额外的存储空间，而超级块（即文件卷的第一块）已在安装磁盘时拷入内存，因此，绝大部分的分配和回收工作可在内存中进行，从而使之具有较高的效率。
3.4.3 分布式文件系统
开始学习
3.4.3 分布式文件系统
在计算机网络中，每个节点运行一个包括自己的文件系统的本地操作系统，称为本地文件系统（Local File System，LFS）。LFS负责将磁盘块分配给文件，并维护文件分配表等信息，提供诸如新建文件、读文件、写文件和删除文件等不同的服务。它为所有本地目录和文件维护目录结构，允许用户更改自己的工作目录，列出本地目录中的所有文件，以及实现对本地文件和目录的访问控制。
当用户想要对远程文件执行所有这些功能时，就会出现问题，分布式文件系统（Distributed File System，DFS）正好可以提供这种功能。DFS是分布式系统的重要组成部分，它允许通过网络来互连，使不同机器上的用户共享文件的一种文件系统。DFS不是一个分布式操作系统，而是一个相对独立的软件系统，被集成到分布式操作系统中，并为其提供远程访问服务。
1. DFS的特点
DFS具有网络透明性和位置透明性。网络透明性是指用户访问文件服务器上的文件的操作如同访问LFS的操作一样；位置透明性是指用户通过文件名访问文件，但并不知道该文件在网络中的位置，文件的物理位置改变了，但只要文件的名字不变，用户仍可进行访问。
在分布式系统中，区分文件服务和文件服务器的概念是非常重要的。文件服务是文件系统为其用户提供的各种功能描述，例如，可用的原语，以及它们所带的参数和执行的动作等。对于用户来说，文件服务精确地定义了它们所期望的服务，而不涉及实现方面的细节。实际上，文件服务提供了文件系统与用户之间的接口；文件服务器是运行在网络中某台机器上的一个实现文件服务的进程，一个系统可以有一个或多个文件服务器，但用户并不知道有多个文件服务器及它们的位置和功能。用户所知道的只是当调用文件服务中某个具体过程时，所要求的工作以某种方式执行，并返回所要求的结果。
2. DFS的组成
DFS为系统中的客户机提供共享的文件系统，为分布式操作系统提供远程文件访问服务。分布式操作系统通常在系统中的每个机器上都有一个副本，但DFS并不一样，它由两部分组成，分别是运行在服务器上的DFS软件和运行在每个客户机上的DFS软件。这两部分程序代码在运行中都要与本机操作系统的文件系统紧密结合，共同起作用。现代操作系统都支持多种类型的文件系统，DFS将通过虚拟文件系统和虚拟节点与LFS交互作用。
3. DFS的架构
DFS目前大多采用客户/服务器架构，客户是要访问文件的计算机，服务器是存储文件并且允许用户访问这些文件的计算机。DFS中需要解决的一个问题是命名的透明性，通常有三种解决方式，第一种方式是通过机器名加路径名来访问文件；第二种方式是将远程文件系统安装到本机文件目录上，这样，用户就可以自己定制文件名；第三种方式是让所有机器上看起来有相同的单一名字空间，这种方式实现难度较大。
在客户/服务器架构中，客户使用远程方法访问文件，服务器则响应客户的请求。有些系统中的服务器能提供更多的服务，它不仅响应客户的请求，还对客户机中的高速缓存的一致性作出预测，一旦客户数据变为无效时便通知客户。
['第4章', '数据通信与计算机网络']

计算机网络自20世纪60年代末诞生以来，即以异常迅猛的速度发展起来，被越来越广泛地应用于政治、经济、军事、生产和科学技术的各个领域。目前，信息系统大多数是基于计算机网络的，因此，作为一名合格的系统分析师，必须掌握有关计算机网络的基础知识。计算机网络源于计算机技术与数据通信技术的结合，它通过通信链路将分布在各个地理位置上的多台独立的计算机相互连接起来，从而形成的一种网络，并在网络操作系统、网络管理软件和网络通信协议的管理和协调下，实现资源（软件、硬件和数据）共享。
4.1 数据通信基础知识
数据通信是计算机网络的基础，计算机网络通过采用数据通信方式进行通信。数据通信技术的发展与计算机技术的发展密切相关，又相互影响，已经形成一门独立的学科。广义地说，数据通信是计算机之间或计算机与其他数据终端之间存储、处理、传输信息的一种通信技术，数据通信的目的就是传递信息。
4.1.0 内容介绍
开始学习
数据通信是计算机网络的基础，计算机网络通过采用数据通信方式进行通信。数据通信技术的发展与计算机技术的发展密切相关，又相互影响，已经形成一门独立的学科。广义地说，数据通信是计算机之间或计算机与其他数据终端之间存储、处理、传输信息的一种通信技术，数据通信的目的就是传递信息。
4.1.1 信道特性
开始学习
4.1.1 信道特性
各种数据终端设备交换数据，就必然要传输数据（模拟信号或数字信号），数据传输的路径称为信道。信道可以分为物理信道和逻辑信道。物理信道由传输介质和设备组成，是用于传输信号的物理通路，网络中两个节点之间的物理通路称为通信链路。物理信道还可根据传输介质的不同而分为有线信道和无线信道，也可根据传输数据类型的不同分为数字信道和模拟信道；逻辑信道是指在数据发送端和接收端之间不存在一条物理上的线路。逻辑信道可以是有连接的，也可以是无连接的。
1. 信道传输的方式
按照数据传送的方向与时间不同，信道传输可以分为单工、半双工和全双工三种传输方式，如图4-1所示。

http://www.educity.cn/article_images/2014-01-15/8a94c366-0fa9-4eef-af8e-ce603b6aa4a7.jpg
（1）单工通信。单工通信也称为单向通信，即只能有一个方向的通信而没有反方向的交互。无线电广播或有线电广播以及电视广播就属于这种类型。
（2）半双工通信。半双工通信也称为双向交替通信，即通信的双方都可以发送信息，但不能同时发送和同时接收。这种通信方式是一方发送另一方接收，过一段时间后再反过来。很多对讲机使用的就是半双工方式，当一方按下按钮说话时，不能听见对方的声音。
（3）全双工通信。全双工通信意味着两个方向的传输能够同时进行，一般的电话系统、交换式以太网等采用全双工方式进行通信。
2. 信道传输速率
在过去，通信的主干线路传送的是模拟信号，信号带宽指的是该信号所包含的各种不同的频率成分所占据的频率范围，即“信道带宽=最高频率-最低频率”。通常是信道的电路制成了，信道的带宽也就决定了；而在数字通信中，带宽是指信道传输数据的能力，表示信道在一定的时间内所能传输的比特数。信道的传输速率可以用码元传输速率和信息传输速率两种方式来描述。
（1）码元传输速率。在数字通信中，对数字信号的计量单位常用码元表示。一个码元就是一个数字脉冲，用码元速率表示单位时间内信号波形的变换次数，即单位时间内传送码元的数目。码元速率又称为波特率，单位为波特/秒（Baud/s）。
（2）数据传输速率。数据传输速率即比特率，单位为比特/秒（b/s或bps），它表示每秒钟传送的信息量（比特数）。
信道传输速率的计算公式如图4-2所示。

http://www.educity.cn/article_images/2014-01-15/06e86717-bfab-4dd9-8b41-88bd7cd90e54.jpg
从图4-2中可以看出，计算信道的传输速率时需要考虑两种情况。
（1）无噪声的理想信道。使用奈奎斯特定理进行计算，该定理的表达很简单，即B=2W（Baud）。在计算时，最关键的在于理解码元和比特的转换关系。例如，如果码元取2个离散值，则只需1比特表示；若码元取4个离散值，则需要2比特来表示。码元有多少个不同种类，取决于其使用的调制技术。关于调制技术的详细知识，将在4.1.3节中介绍，表4-1只列出常见的调制技术所携带的码元数。

http://www.educity.cn/article_images/2014-01-15/49283e24-5e6c-4e1c-b08b-7bd38a6c2196.jpg
（2）有噪声干扰的实际信道。使用香农理论进行计算，香农理论描述了有限带宽、有随机热噪声信道的最大传输速率与信道带宽、信号噪声功率比（S/N，简称为信噪比）之间的关系。在使用香农理论时，由于S/N的比值通常太大，因此使用分贝数（dB）来表示：例如，S/N=1000时，用分贝表示就是30dB。如果带宽是3kHz，则这时的极限数据速率就是。
http://www.educity.cn/article_images/2014-01-15/be97422a-fb33-4e7d-965d-74df935dadc0.jpg
自从香农公式发表后，各种新的信号处理和调制方法不断出现，其目的就是为了尽可能接近香农公式给出的理论极限。在实际信道上接近这个极限是非常困难的，因为在实际信道中，信号还要受到其他的一些损伤，例如，各种脉冲干扰和在传输中产生的失真等。
3. 时延
时延是指数据从信道的一端传送到另一端所需要的时间，可分为发送时延、传播时延和处理时延。数据帧经历的总时延为上述三项之和，即：
总时延 = 发送时延+传播时延+处理时延
（1）发送时延。发送时延又称为传输时延，是指将数据帧从节点送到传输媒介（信道）所需要的时间，即从发送的数据帧的第一个比特到最后一个比特发送完毕所需的时间。发送时延的计算公式为：
发送时延 = 数据帧长度(b)/信道带宽(b/s)
（2）传播时延。传播时延是指承载信号的电磁波在信道中传播一定距离所需要花费的时间，其计算公式为：
传播时延 = 信道长度(m)/电磁波在信道上的传输速率(m/s)
（3）处理时延。处理时延是指节点在收到信息后进行处理需要花费的时间。其中主要是数据在节点缓存队列中所经历的排队时延，排队时延的长短往往取决于网络当时的通信量。当网络的通信量很大时就会产生队列溢出，使得分组丢失，这就相当于排队时延为无穷大。
4. 传输质量
传输质量是指数字通信系统的可靠性，通常用误码率来表示。误码率是指在一定统计时间内，数字信号在传输过程中发生错误的位数与传输的总位数之比。在计算机网络中，一般要求误码率小于10-6，即每传送1兆位才允许错1位。当误码率高于某一数值时，可采用差错控制方法进行检错和纠正。
4.1.2 数据传输技术
开始学习
4.1.2 数据传输技术
在通信技术发达的今天，数据传输技术多种多样，例如，并行传输、串行传输、同步传输、异步传输等。
1. 并行传输与串行传输
在并行传输中，一次使用n（n>1）条导线同时传输n个比特。显然，并行传输的优势在于速度。
在串行传输中，比特是逐个依次发送的。因此，在两个通信设备之间传输数据只需要一条通信信道，而不是n条。串行传输的优点是，因为只需要一条通信信道，费用大约只有并行传输的1/n。串行传输的缺点在于，存在一个收、发双方如何保持码组或字符同步的问题，这个问题不解决，接收方就不能从接收到的数据流中正确地区分一个个的字符来，导致传输失去意义。如何解决码组或字符的同步问题，目前有两种不同的方法，分别是异步传输方式和同步传输方式。
2. 异步传输与同步传输
在异步传输方式中，每次传送一个字符（5～8位），都在每个字符代码前加一个起始位，表示该字符代码的开始。在字符和校验码后加一个停止位，表示该代码的结束。因此，异步传输又称为起止式同步，起始位编码为“0”，持续1位时间，停止位编码为“1”，持续l～2位时间。当不发送数据时，发送端连续地发送停止码“1”。接收端一旦接收到从1到0的信号跳变，便知道要开始新字符的发送，利用这种极性的改变便可启动定时机构，实现同步。当接收到停止位时，就将定时机构复位，准备接收下一个字符代码。因此，在异步传输中，不需要传输时钟脉冲。异步通信设备易于安装，维护简单且价格便宜。但是，在异步方式中，由于每个字符都引入起始和停止位，所以开销大、效率低、速率低，常用于低速传输。
在同步传输方式中，利用时钟的同步使发送和接收装置之间的定时不发生误差。通常有两种方法来实现，第一种方法是在接收装置和发送装置之间采用单独的时钟信息，另一种方法是将定时信号包含在数据信号中发送，直接从数据波形本身中提取同步信号。例如，数字信号利用曼彻斯特编码时，规定传送“0”信号时是电平先正后负，传送“1”信号时是电平先负后正。
由于数据信号都是由二进制码按预定规律编排而成，它包含位、字、句和帧等。数据传输的代码结构是由若干位组成字，由若干个字组成句，由若干个句组成帧，传输时不仅位需要同步，字、句和帧都要同步，这称为群同步。只有做到群同步，接收端才能正确识别字、句和帧等码群。如果只有位同步而无群同步，接收到的信号将是一串无意义的码元序列。
3. 数据传输的形式
根据传输技术的不同，数据传输形式可分为基带传输、频带传输和宽带传输等三种。
（1）基带传输。模拟信号经过信源编码得到的信号为数字基带信号，将这种信号经过码型变换，不经过调制，直接送到信道传输，称为数字信号的基带传输。
（2）频带传输。频带传输就是先将基带信号变换（调制）成便于在模拟信道中传输的、具有较高频率范围的模拟信号（称为频带信号），再将这种频带信号在模拟信道中传输。
（3）宽带传输。宽带传输是将信道分为多个子信道，分别传送音频、视频和数字信号。与基带传输相比，一条宽带信道能划分为多条逻辑基带信道，实现多路复用，信道的容量大大增加；宽带传输的距离比基带远，因为基带传输直接传送数字信号，传输的速率越高，能够传输的距离越短。
4.1.3 数据编码与调制
开始学习
4.1.3 数据编码与调制
数据传输是实现数据通信的基础，无论信源产生的是模拟数据还是数字数据，在传输过程中都要转换成适合于信道传输的某种信号形式。模拟数据和数字数据都可以用模拟信号或数字信号来表示，从而产生了数据调制和编码技术。
1. 模拟信道传送模拟数据
模拟数据可以在模拟信道上直接传送，使用调制技术的主要原因有两个，一是通常模拟数据的频率并不高，而有效的传输需要较高的频率；二是通过调制可以做到信道的复用。
模拟数据通过模拟信道传送的调制方式主要有调幅（Amplitude Modulation，AM）、调频（Frequency Modulation，FM）和调相（Phase Modulation，PM）等几种方式。AM调制的载波会随着原始模拟数据的幅度变化而变化，载波的频率不变；PM调制的载波的相位随着原始模拟数据的幅度变化而变化，载波的幅度不变；FM调制的载波的频率随着原始数据的幅度变化而变化，载波的幅度不变。
2. 数字信道传送模拟数据
模拟信号必须转变为数字信号，才能在数字信道上传送，这个过程称为数字化。脉码调制（Pulse Code Modulation，PCM）是最常用的一种数字化技术。PCM要经过取样、量化、编码三个步骤。
（1）取样。根据奈奎斯特取样定理，取样速率应大于模拟信号的最高频率的2倍。例如，44kHz的音乐让人感觉到最保真，这是因为人耳可识别的最高频率约为22kHz，因此，当采样率达到44kHz时，就可以得到最满意的效果。
（2）量化。将样本的连续值转换成离散值，离散值的个数决定了量化的精度。
（3）编码。将量化后的样本值变成相应的二进制代码。
3. 模拟信道传送数字数据
数字数据使用模拟通道传送，同样需要调制，使其适合于在模拟线路上传输。最基本的调制技术包括幅度键控（Amplitude-Shift Keying，ASK）、频移键控（Frequency-shift keying，FSK）和相移键控（Phase-Shift Keying，PSK），如图4-3所示。

http://www.educity.cn/article_images/2014-01-15/ed4fb52a-8cd7-4744-97a7-f3fc45f37a11.jpg
ASK用恒定的载波振幅值表示一个数（通常是“1”），无载波表示另一个数（通常是“0”），其实现简单、抗干扰性差、效率低，典型数据率为1200bps；FSK使用两种不同的频率表示数字数据“1”和“0”，其抗干扰性较ASK更强，但占用带宽较大，典型数据率也是1200bps；PSK用载波的相位偏移来表示数据“1”和“0”，其抗干扰性最好，而且相位的变化可以作为定时信息来同步时钟。
4. 数字信道传送数字数据
在数字信道中传输数据时，利用特定的电平信号来表示二进制值“0”和“1”，然后再进行传输，可用的编码方法有很多，常见的有归零性编码、双相码、极性编码、曼彻斯特编码、差分曼彻斯特编码等。
（1）归零性编码。归零是指编码信号量是否回归到0电平。归零性编码可分为归零码（Return Zero，RZ）和非归零码，非归零编码又可分为非归零电平编码（Non-Return Zero-Level，NRZ-L）和非归零反相编码（Non-Return Zero-Inverse，NRZ-I）。归零码是指码元中间的信号回归到0电平，非归零码则不回归（发生电平变化表示“1”，不发生电平变化表示“0”）。
（2）极性编码。极性编码分为单极性编码、极性编码和双极性编码。在单极性编码中，正极表示“0”，零电平表示“1”；在极性编码中，使用两极（正极表示“0”，负极表示“1”）表示数据；双极性码使用正负两极和零电平表示数据。其中有一种典型的双极性码是信号交替反转编码，它用零电平表示“0”，“1”则使电平在正、负极间交替翻转。
（3）双相码。通过不同方向的电平翻转（低到高代表“0”，高到低代表“1”），这样不仅可以提高抗干扰性，还可以实现自同步，它也是曼彻斯特编码的基础。
曼彻斯特编码将一个码元时间一分为二，其中低电平到高电平的变化表示“0”，高电平到低电平的变化表示“1”。也就是说，在码元的正中间的时间位上出现一次电平的翻转。曼彻斯特编码主要应用于以太网中。差分曼彻斯特编码也是将一个码元时间一分为二，如果当前位的前半部分电平不同于前一位的最终电平状态（即位间电平发生变化），则表示“0”；如果当前位的前半部分电平相同于前一位的最终电平状态（即位间电平不发生变化），则表示“1”。也可理解为“遇0翻转，遇1不变”。差分曼彻斯特编码常应用于令牌环网中。
使用曼彻斯特编码和差分曼彻斯特编码时，每传输1比特的信息，就要求线路上有2次电平状态变化（2Baud），因此，要实现100Mbps的传输速率，就需要有200MHz的带宽，即编码效率只有50%。正是因为曼彻斯特编码和差分曼彻斯特编码的编码效率不高，导致在带宽资源宝贵的广域网和速度要求更高的局域网中出现了困难，为了解决这些困难，因此出现了mBnB编码，即将m比特位编码成n波特（代码位），提高了带宽的利用率。
4.2 网络体系结构与协议
网络体系结构是指计算机网络的各层及其协议的集合。计算机之间要交换数据，就必须遵守一些事先约定好的规则，用于规定信息的格式以及如何发送和接收信息的一套规则就称为网络协议。为了减少网络协议设计的复杂性，网络设计者并不是设计一个单一、巨大的协议来为所有形式的通信规定完整的细节，而是将庞大而复杂的通信问题转化为若干个小问题，然后为每个小问题设计一个单独的协议。
计算机网络采用分层设计方法，按照信息的传输过程将网络的整体功能分解为一个个的功能层，不同机器上的同等功能层之间采用相同的协议，同一机器上的相邻功能层之间通过接口进行信息传递。

4.2.0 内容介绍
开始学习
网络体系结构是指计算机网络的各层及其协议的集合。计算机之间要交换数据，就必须遵守一些事先约定好的规则，用于规定信息的格式以及如何发送和接收信息的一套规则就称为网络协议。为了减少网络协议设计的复杂性，网络设计者并不是设计一个单一、巨大的协议来为所有形式的通信规定完整的细节，而是将庞大而复杂的通信问题转化为若干个小问题，然后为每个小问题设计一个单独的协议。
计算机网络采用分层设计方法，按照信息的传输过程将网络的整体功能分解为一个个的功能层，不同机器上的同等功能层之间采用相同的协议，同一机器上的相邻功能层之间通过接口进行信息传递。

4.2.1 网络互联模型
开始学习
4.2.1 网络互联模型
1977年，国际标准化组织为适应网络标准化发展的需求，制定了开放系统互联参考模型（Open system Interconnection/Reference Model，OSI/RM），从而形成了网络体系结构的国际标准。OSI/RM构造了由下到上的七层模型，分别是物理层、数据链路层、网络层、传输层、会话层、表示层和应用层。
1. OSI/RM各层的功能
在数据传输过程中，每一层都承担不同的功能和任务，以实现对数据传输过程中的各个阶段的控制。
（1）物理层。物理层的主要功能是透明地完成相邻节点之间原始比特流的传输。其中“透明”的意思是指物理层并不需要关心比特代表的具体含义，而要考虑的是如何发送“0”和“1”，以及接收端如何识别。物理层在传输介质基础上作为系统和通信介质的接口，为数据链路层提供服务。
（2）数据链路层。数据链路层负责在两个相邻节点之间的线路上无差错地传送以帧为单位的数据，通过流量控制和差错控制，将原始不可靠的物理层连接变成无差错的数据通道，并解决多用户竞争问题，使之对网络层显现一条可靠的链路。
（3）网络层。网络层是通信子网的最高层，其主要任务是在数据链路层服务的基础上，实现整个通信子网内的连接，并通过网络连接交换网络服务数据单元（packet）。它主要解决数据传输单元分组在通信子网中的路由选择、拥塞控制和多个网络互联的问题。网络层建立网络连接为传输层提供服务。
（4）传输层。传输层既是负责数据通信的最高层，又是面向网络通信的低三层（物理层、数据链路层和网络层）和面向信息处理的高三层（会话层、表示层和应用层）之间的中间层，是资源子网和通信子网的桥梁，其主要任务是为两台计算机的通信提供可靠的端到端的数据传输服务。传输层反映并扩展了网络层子系统的服务功能，并通过传输层地址为高层提供传输数据的通信端口，使系统之间高层资源的共享不必考虑数据通信方面的问题。
（5）会话层。会话层利用传输层提供的端到端数据传输服务，具体实施服务请求者与服务提供者之间的通信、组织和同步它们的会话活动，并管理它们的数据交换过程。会话层提供服务通常需要经过建立连接、数据传输和释放连接三个阶段。会话层是最薄的一层，常被省略。
（6）表示层。表示层处理的是用户信息的表示问题。端用户（应用进程）之间传送的数据包含语义和语法两个方面。语义是数据的内容及其含义，它由应用层负责处理；语法是与数据表示形式有关的方面，例如，数据的格式、编码和压缩等。表示层主要用于处理应用实体面向交换的信息的表示方法，包括用户数据的结构和在传输时的比特流（或字节流）的表示。这样，即使每个应用系统有各自的信息表示法，但被交换的信息类型和数值仍能用一种共同的方法来描述。
（7）应用层。应用层是直接面向用户的一层，是计算机网络与最终用户之间的界面。在实际应用中，通常把会话层和表示层归入到应用层，使OSI/RM成为一个简化的五层模型。
2. TCP/IP结构模型
虽然OSI/RM已成为计算机网络体系结构的标准模型，但因为OSI/RM的结构过于复杂，实际系统中采用OSI/RM的并不多。目前，使用最广泛的可互操作的网络体系结构是TCP/IP（Transmission Control Protocol/ Internet Protocol，传输控制协议/网际协议）结构模型。与OSI/RM结构不同，不存在一个正式的TCP/IP结构模型，但可根据已开发的协议标准和通信任务将其大致分成四个比较独立的层次，分别是网络接口层、网络互联层、传输层和应用层。
（1）网络接口层。网络接口层大致对应于OSI/RM的数据链路层和物理层，TCP/IP协议不包含具体的物理层和数据链路层，只定义了网络接口层作为物理层的接口规范。网络接口层处在TCP/IP结构模型的最底层，主要负责管理为物理网络准备数据所需的全部服务程序和功能。
（2）网络互联层。网络互联层也称为网络层、互联网层或网际层，负责将数据报独立地从信源传送到信宿，主要解决路由选择、阻塞控制和网络互联等问题，在功能上类似于OSI/RM中的网络层。
（3）传输层。传输层负责在信源和信宿之间提供端到端的数据传输服务，相当于OSI/RM中的传输层。
（4）应用层。应用层直接面向用户应用，为用户提供对各种网络资源的方便的访问服务，包含了OSI/RM会话层和表示层中的部分功能。
4.2.2 常见的网络协议
开始学习
4.2.2 常见的网络协议
计算机网络的各层中存在着许多协议，它们是定义通过网络进行通信的规则。接收方与发送方同层的协议必须一致，否则，一方将无法识别另一方发出的信息。
1. 应用层协议
在应用层中，定义了很多面向应用的协议，应用程序通过本层协议利用网络完成数据交互的任务。这些协议主要有FTP、TFTP、HTTP、SMTP、DHCP、Telnet、DNS和SNMP等。
FTP（File Transport Protocol，文件传输协议）是网络上两台计算机传送文件的协议，运行在TCP之上，是通过Internet将文件从一台计算机传输到另一台计算机的一种途径。FTP的传输模式包括Bin（二进制）和ASCII（文本文件）两种，除了文本文件之外，都应该使用二进制模式传输。FTP在客户机和服务器之间需建立两条TCP连接，一条用于传送控制信息（使用21号端口），另一条用于传送文件内容（使用20号端口）。
TFTP（Trivial File Transfer Protocol，简单文件传输协议）是用来在客户机与服务器之间进行简单文件传输的协议，提供不复杂、开销不大的文件传输服务。TFTP建立在UDP（User Datagram Protocol，用户数据报协议）之上，提供不可靠的数据流传输服务，不提供存取授权与认证机制，使用超时重传方式来保证数据的到达。
HTTP（Hypertext Transfer Protocol，超文本传输协议）是用于从WWW服务器传输超文本到本地浏览器的传送协议。它可以使浏览器更加高效，使网络传输减少。HTTP建立在TCP之上，它不仅保证计算机正确快速地传输超文本文档，还确定传输文档中的哪一部分，以及哪部分内容首先显示等。
SMTP（Simple Mail Transfer Protocol，简单邮件传输协议）建立在TCP之上，是一种提供可靠且有效的电子邮件传输的协议。SMTP 是建模在FTP文件传输服务上的一种邮件服务，主要用于传输系统之间的邮件信息，并提供与电子邮件有关的通知。
DHCP（Dynamic Host Configuration Protocol，动态主机配置协议）建立在UDP之上，基于客户机/服务器模型设计的。所有的IP网络设定数据都由DHCP服务器集中管理，并负责处理客户端的DHCP要求；而客户端则会使用从服务器分配下来的IP环境数据。DHCP通过租约（默认为8天）的概念，有效且动态地分配客户端的TCP/IP设定。当租约过半时，客户机需要向DHCP服务器申请续租；当租约超过87.5%时，如果仍然没有和当初提供IP的DHCP服务器联系上，则开始联系其他的DHCP服务器。DHCP分配的IP地址可以分为三种方式，分别是固定分配、动态分配和自动分配。
Telnet（远程登录协议）是登录和仿真程序，建立在TCP之上，它的基本功能是允许用户登录进入远程计算机系统。以前，Telnet是一个将所有用户输入送到远程计算机进行处理的简单的终端程序。目前，它的一些较新的版本是在本地执行更多的处理，可以提供更好的响应，并且减少了通过链路发送到远程计算机的信息数量。
DNS（Domain Name System，域名系统）在Internet上域名与IP地址之间是一一对应的，域名虽然便于人们记忆，但机器之间只能互相认识IP地址，它们之间的转换工作称为域名解析，域名解析需要由专门的域名解析服务器来完成，DNS就是进行域名解析的服务器。DNS通过对用户友好的名称查找计算机和服务。当用户在应用程序中输入DNS名称时，DNS服务可以将此名称解析为与之相关的其他信息，例如，IP地址。
SNMP（Simple Network Management Protocol，简单网络管理协议）是为了解决Internet上的路由器管理问题而提出的，它可以在IP、IPX、AppleTalk和其他传输协议上使用。SNMP是指一系列网络管理规范的集合，包括协议本身、数据结构的定义和一些相关概念。目前，SNMP已成为网络管理领域中事实上的工业标准，并被广泛支持和应用，大多数网络管理系统和平台都是基于SNMP的。
2．传输层协议
传输层主要有两个传输协议，分别是TCP和UDP（User Datagram Protocol，用户数据报协议），这些协议负责提供流量控制、错误校验和排序服务。
TCP是整个TCP/IP协议族中最重要的协议之一，它在IP协议提供的不可靠数据服务的基础上，采用了重发技术，为应用程序提供了一个可靠的、面向连接的、全双工的数据传输服务。TCP协议一般用于传输数据量比较少，且对可靠性要求高的场合。
UDP是一种不可靠的、无连接的协议，可以保证应用程序进程间的通信，与TCP相比，UDP是一种无连接的协议，它的错误检测功能要弱得多。可以这样说，TCP有助于提供可靠性，而UDP则有助于提高传输速率。UDP协议一般用于传输数据量大，对可靠性要求不是很高，但要求速度快的场合。
3．网络层协议
网络层中的协议主要有IP、ICMP（Internet Control Message Protocol，网际控制报文协议）、IGMP（Internet Group Management Protocol，网际组管理协议）、ARP（Address Resolution Protocol，地址解析协议）和RARP（Reverse Address Resolution Protocol，反向地址解析协议）等，这些协议处理信息的路由和主机地址解析。
IP所提供的服务通常被认为是无连接的和不可靠的，它将差错检测和流量控制之类的服务授权给了其他的各层协议，这正是TCP/IP能够高效率工作的一个重要保证。网络层的功能主要由IP来提供，除了提供端到端的分组分发功能外，IP还提供很多扩充功能。例如，为了克服数据链路层对帧大小的限制，网络层提供了数据分块和重组功能，这使得很大的IP数据包能以较小的分组在网络上传输。
ARP用于动态地完成IP地址向物理地址的转换。物理地址通常是指计算机的网卡地址，也称为MAC（Media Access Control，媒体访问控制）地址，每块网卡都有唯一的地址；RARP用于动态完成物理地址向IP地址的转换。
ICMP是一个专门用于发送差错报文的协议，由于IP协议是一种尽力传送的通信协议，即传送的数据可能丢失、重复、延迟或乱序传递，所以需要一种尽量避免差错并能在发生差错时报告的机制，这就是ICMP的功能。
IGMP允许Internet中的计算机参加多播，是计算机用做向相邻多目路由器报告多目组成员的协议。多目路由器是支持组播的路由器，它向本地网络发送IGMP查询，计算机通过发送IGMP报告来应答查询。多目路由器负责将组播包转发到网络中所有组播成员。
4.2.3 网络地址与分配
开始学习
4.2.3 网络地址与分配
Internet依靠TCP/IP协议，在全球范围内实现不同硬件结构、不同操作系统、不同网络系统的互联。在Internet上，每个节点都依靠唯一的IP地址互相区分和相互联系。
1. IP地址及表示方法
IP地址是一个32位的二进制数逻辑地址（这种表示方式称为IPv4），为了人们使用方便，习惯上将这个32位的数字划分成4个字节，并在每个字节之间以“.”来区分。例如，IP地址11000000 10101000 11001000 10000000，每字节用十进制数来表示，字节之间用圆点分隔，表示为192.168.200.128。
每个IP地址由两部分组成，分别是网络号和主机号。网络号用于唯一标识一个网络，主机号则确定了某个网络上的某一台主机。根据网络号和主机号的不同划分，IP地址可以分为五类，如图4-4所示。

http://www.educity.cn/article_images/2014-01-15/03bc2ce8-bd54-4fdb-a265-2183e8a5152b.jpg
对于A类地址，最高位为0，高8位为网络号，其后的24位用于表示主机号；B类地址的最高位为10，其高16位为网络号，后面的16位用于表示主机号；C类IP地址的最高位为110，高24位为网络号，后面8位为主机号；D类地址也称为组播地址，它是一类特殊的地址，用于网络中的组播；E类地址为保留地址，目前尚未定义和使用。
另外，为了满足内网的使用需求，保留了一部分不在公网使用的IP地址，如表4-2所示。

http://www.educity.cn/article_images/2014-01-15/7c1a7d17-a786-4066-a054-bfb4075dfe58.jpg
类别IP地址范围网络号网络数
A10.0.0.0～10.255.255.255101
B172.16.0.0～172.31.255.255172.16～172.3116
C192.168.0.0～192.168.255.255192.168.0～192.168.255255
2. 子网的划分
IPv4采用的是32位IP地址设计，限制了地址空间的总容量，随着网络应用的深入，出现了IP地址紧缺的现象。每个A类地址可连接的计算机超过1000万台，B类地址也超过6万台。然而，有些网络对连接在网络上的计算机数目有限制，根本用不到这样的数值。例如，有的单位申请到一个B类地址，但所连接的计算机并不多，可又不愿意申请一个可以够使用的C类地址，这样，IP地址的浪费尤为严重。
子网就是用来解决这类问题的，在计算机网络中引入子网的概念，通过灵活定义子网标识的位数，可以控制每个子网的规模，从而解决上述问题。如图4-5所示，划分子网的主要思想是将IP地址划分成三个部分，分别是网络号、子网号和主机号。也就是说，利用IP地址的主机号部分继续划分子网。

http://www.educity.cn/article_images/2014-01-15/4bbb804f-ed2c-49f7-a89d-354620c9aa48.jpg
子网由子网掩码进行标识。与IP地址一样，子网掩码也是一个32位的二进制数，但其网络标识和子网标识部分全为1，主机标识部分全为0。例如，子网掩码为11111111 11111111 11110000 00000000，即255.255.240.0。判断两台计算机是否在同一个子网内，需要用到子网掩码，其方法是将两个IP地址与给定的子网掩码分别进行逻辑与运算，如果结果相等，则属于同一个子网，否则就不属于同一个子网。例如，设IP地址A、B和C分别为190.78.240.1、190.78.250.1和190.78.230.1，将它们转换为二进制表示形式，则为：
10111110 01001110 11110000 00000001
10111110 01001110 11111010 00000001
10111110 01001110 11100110 00000001
与子网掩码11111111 11111111 11110000 00000000进行逻辑与运算，结果分别为：
10111110 01001110 11110000 00000000
10111110 01001110 11110000 00000000
10111110 01001110 11100000 00000000
因此，IP地址190.78.240.1和190.78.250.1在一个子网内，而IP地址190.78.240.1与190.78.230.1不在一个子网内。
3. 构造超网
划分子网在一定程度上缓解了Internet在发展中遇到的问题，然而，各种类别的子网会使得Internet路由表中的项目数急速增长。为了解决这个问题，可以采用无分类编址技术，其正式名字为无分类域间路由（Classless InterDomain Routing，CIDR）。CIDR的特点主要有以下两个：
（1）CIDR消除了传统IP地址的分类和划分子网的概念，可以更加有效地分配IPv4的地址空间。CIDR把32位的IP地址划分为两个部分。前面的部分为网络前缀，用来指明网络，后面的部分用来表示主机。它的记法为在IP地址后加上斜线“/”，然后在后面写上网络前缀所占的位数，例如，128.2.3.4/20表示网络前缀为高20位，主机号为低12位。
（2）CIDR将网络前缀都相同的连续的IP地址组成一个CIDR地址块。只要知道地址块中的任意地址，就可以知道这个地址块的起始地址（最小地址）和结束地址（最大地址），以及地址块中的地址数。例如，已知IP地址128.14.35.7/20是某CIDR地址块中的一个地址，转换为二进制表达形式为10000000 00001110 0010 0011 00000111，其中下划线部分表示其前缀为20位，主机号为12位，其最小地址为10000000 00001110 0010 0000 00000000（即128.14.32.0），最大地址为10000000 00001110 0010 1111 11111111（即128.14.47.255）。
由于一个CIDR地址块中有很多地址，所以在路由表中就利用CIDR地址块来查找目的网络。这种地址的聚合称为路由汇聚。路由汇聚的最终结果和最明显的好处是缩小网络上的路由表的尺寸。这样将减少与每一个路由跳有关的延迟，由于减少了路由登录项数量，查询路由表的平均时间将加快。由于路由登录项广播的数量减少，路由协议的开销也将显着减少。随着整个网络（以及子网的数量）的扩大，路由汇聚将变得更加重要。
4. IPv6
前面介绍的IP地址协议的版本号是4（简称为IPv4），它的下一个版本就是IPv6。IPv6正处在不断发展和完善的过程中，它在不久的将来将取代目前被广泛使用的IPv4。
与IPV4相比，IPV6具有以下几点优势：
（1）IPv6具有更大的地址空间。IPv4中规定IP地址长度为32位，而IPv6中IP地址的长度为128位。
（2）IPv6使用更小的路由表。IPv6的地址分配一开始就遵循路由汇聚的原则，使路由器能在路由表中用一条记录表示一个子网，大大减小了路由器中路由表的长度，提高了路由器转发数据包的速度。
（3）IPv6增加了增强的组播支持和对流的支持，使网络上的多媒体应用有了长足发展的机会，为服务质量（Quality of Service，QoS）控制提供了良好的网络平台。
（4）IPv6加入了对自动配置的支持。这是对DHCP协议的改进和扩展，使得网络（尤其是局域网）的管理更加方便和快捷。
（5）IPv6具有更高的安全性。在使用IPv6网络时，用户可以对网络层的数据进行加密，并对IP报文进行校验，极大地增强了网络的安全性。
4.3 局域网与广域网
局域网（Local Area Network，LAN）是将分散在有限地理范围内的多台计算机通过传输媒体连接起来的通信网络，通过功能完善的网络软件，实现计算机之间的相互通信和资源共享；广域网（Wide Area Network，WAN）是在传输距离较长的前提下所发展的相关技术的集合，用于将大区域范围内的各种计算机设备和通信设备互联在一起，组成一个资源共享的通信网络。
4.3.0 内容介绍
已学习
局域网（Local Area Network，LAN）是将分散在有限地理范围内的多台计算机通过传输媒体连接起来的通信网络，通过功能完善的网络软件，实现计算机之间的相互通信和资源共享；广域网（Wide Area Network，WAN）是在传输距离较长的前提下所发展的相关技术的集合，用于将大区域范围内的各种计算机设备和通信设备互联在一起，组成一个资源共享的通信网络。
4.3.1 局域网基础知识
开始学习
4.3.1 局域网基础知识
当今的计算机网络技术中，局域网已经占据了相当显着的地位。局域网通常具备以下特点：
（1）地理分布范围较小，一般为数百米至数公里的区域范围之内。
（2）数据传输速率高，早期的局域网数据传输速率一般为10Mbps～100Mbps，目前，1000Mbps的局域网已经非常普遍，可适用于语音、图像、视频等各种业务数据信息的高速交换。
（3）数据误码率低，这是因为局域网通常采用短距离基带传输，可以使用高质量的传输媒体，从而提高数据传输质量。
（4）一般以PC机为主体，还包括终端和各种外设，网络中一般不架设主骨干网系统。
（5）协议相对比较简单、结构灵活，建网成本低、周期短，便于管理和扩充。
构成局域网的网络拓扑结构主要有星型结构、总线结构和环型结构。
1. 星型结构
如图4-6所示，星型结构方式的网络在直观上就很容易理解，就像是一张蜘蛛网，中间是一个枢纽（网络交换设备），所有的节点都连接到这个枢纽上，最终组成一个星型的拓扑结构的网络。

http://www.educity.cn/article_images/2014-01-15/0d239687-f654-4cb1-abe5-62aeaaca1725.jpg
2．总线结构
如图4-7所示，采用总线结构方式的网络，是由一条共享的通信线路将所有节点连接在一起，这条共享的通信线路可以是一根同轴电缆或其他介质。例如，传统的以太网（Ethernet）就是属于总线型结构。有关以太网的详细知识，将在4.3.2节中介绍。

http://www.educity.cn/article_images/2014-01-15/d454d7ad-c26b-4d07-b5a7-395b0c1c13a5.jpg
3. 环型结构
如图4-8所示，环型结构方式的网络，与总线结构类似，也是由一条共享的通信线路将所有节点连接在一起。不同的是，环型结构中的共享线路是闭合的，即它将所有的节点排列成一个环，每个节点只与其两个邻居直接相连。若一个节点想要给另一个节点发送信息，消息报文必须经过它们之间的所有节点。

http://www.educity.cn/article_images/2014-01-15/33338f14-7d66-4d30-986d-f782961ffade.jpg
4.3.2 以太网技术
开始学习
4.3.2 以太网技术
目前，以太网技术已经在局域网市场占据了大部分位置。在20世纪80年代和90年代初期，以太网面临着许多来自其他局域网技术的挑战，其中包括令牌环和令牌总线等。有的在一段时间中成功占据了一部分市场份额，但到了20世纪90年代后，激烈竞争的局域网市场逐渐明朗化，以太网几乎成为局域网的代名词。
1. 以太网基础
以太网采用的存取方法是CSMA/CD（Carrier-Sense Multiple Access with Collision Detection，带冲突检测的载波监听多路访问）技术，它属于竞争式介质访问控制协议。CSMA/CD的基本原理是，每个节点都共享网络传输信道，在每个节点要发送数据之前，都会检测信道是否空闲，如果空闲则发送，否则就等待；在发送出信息后，则对冲突进行检测，当发现冲突时，则取消发送。
（1）载波监听。冲突虽然没有办法避免，但是可以通过精心设计的监听算法来缓解，各种算法如表4-3所示。

http://www.educity.cn/article_images/2014-01-15/f628affa-ec71-4124-a4a0-2837108eb380.jpg
注：非坚持型监听算法的N可取任意随机值，在P-坚持型监听算法中，信道空闲将以概率（1-P）延迟一个时间单位（该时间单位为网络传输时延）。
（2）冲突检测。载波监听只能够减少冲突的概率，但无法完全避免冲突。为了能够高效地实现冲突检测，在CSMA/CD中采用了“边发边听”的冲突检测方法。也就是由发送者一边发送数据，一边自己接收回来，如果发现结果出现不同，马上停止发送，并发出冲突信号，这时，所有的节点都会收到阻塞信息，并都随机等待一段时间之后再重新监听。因为采用了边发边听的检测方法，对于基带系统而言，检测冲突所需要花的最长时间是网络传播延迟（最大段长/信号传播速度）的两倍，对于宽带系统则需要网络传播延迟的四倍时间，这个时间也称为冲突窗口。因此，为了保证在信息发送完成之前能够检测到冲突，发送的时间应该大于等于冲突窗口，对于基带系统，规定了最小的帧长=2×(网络数据速率×最大段长/信号传播速度)。
要注意的是，在全双工以太网中，已不再受到CSMA/CD的约束。
2. 帧结构
IEEE（Institute of Electrical and Electronics Engineers，美国电气和电子工程师协会） 802.3 MAC帧的格式如图4-9所示，包含的字段有前导码、帧起始定界符（Start Frame Delimiter，SFD）、目的地址、源地址、长度、帧头、发送的数据和帧校验序列等。这些字段中除了地址字段和数据字段是变长的以外，其余字段的长度都是固定的。

http://www.educity.cn/article_images/2014-01-15/152232b6-460b-496f-85e0-4bc45605d6c0.jpg
以太网定义的帧和IEEE 802.3定义的帧略有不同，其格式如图4-10所示，包含的字段有前导码、目的地址、源地址、数据类型、发送的数据和帧校验序列等。

http://www.educity.cn/article_images/2014-01-15/9077191e-759e-4ccc-8a7b-1d93073070d3.jpg
3. 以太网物理层规范
以太网比较常用的传输介质包括同轴电缆、双绞线和光纤三种，常以类似于10Base-T的形式来命名传输介质，如图4-11所示。

http://www.educity.cn/article_images/2014-01-15/c79c0a5f-1316-4847-b7bf-1f85b0d32a51.jpg
4.3.3 无线局域网
开始学习
4.3.3 无线局域网
无线局域网（Wireless Local Area Networks，WLAN）主要运用射频（Radio Frequency，RF）技术取代原来局域网系统中必不可少的传输介质（例如，同轴电缆、双绞线等）来完成数据的传送任务，有了WLAN，用户不必因使用有线传输介质而破坏原有的工作环境，可根据需要调整网络节点的位置。同时，便携式计算机更容易接入局域网，扩大了计算机网络的应用能力和领域。
1. 拓扑结构
无线局域网可分为两大类，分别是有接入点模式（基础设施网络）和无接入点模式（Ad hoc网络）。
（1）基础设施网络。整个网络都使用无线通信的方式，但系统中存在接入点（Access Point，AP），通过接入点将一组节点逻辑上联系在一起，形成一个局域网。AP的作用与网桥类似，负责在802.11和802.3的MAC协议之间进行转换。一个AP覆盖的部分称为一个基本业务域，而AP控制的所有节点组成一个基本业务集，由两个以上的基本业务域可以组成一个分布式系统。
（2）Ad hoc网络。整个网络都使用无线通信的方式，直接通过无线网卡实现点对点连接。与基础设施网络相比，Ad hoc网络中并没有AP这样的设备，可扩展性和灵活性更好，但路由和协调控制等技术都难以解决。
在大多数情况下，无线通信通常是作为有线通信的一种补充和扩展。在这种部署配置下，多个AP通过线缆连接在有线网络上，以使无线用户能够访问网络的各部分。
2. IEEE 802.11标准
IEEE 802委员会为无线局域网开发了一组标准，即IEEE 802.11标准。其中定义了媒体访问控制层 <http://zh.wikipedia.org/wiki/%E5%AA%92%E9%AB%94%E5%AD%98%E5%8F%96%E6%8E%A7%E5%88%B6%E5%B1%A4>（MAC层）和物理层 <http://zh.wikipedia.org/wiki/%E7%89%A9%E7%90%86%E5%B1%82>。物理层定义了工作在2.4GHz的ISM（Industrial Scientific Medical，工业、科学和医学）频段 <http://zh.wikipedia.org/wiki/ISM%E9%A2%91%E6%AE%B5>上的扩频通信方式，总数据传输速率设计为2Mbps。而在MAC层采取了载波侦听多路访问/冲突避免协议（Carrier Sense Multiple Access with Collision Avoidance，CSMA/CA），即采用主动避免碰撞而非被动侦测的方式来解决冲突问题。
由于IEEE 802.11的业务主要限于数据存取，在速率和传输距离上都不能满足人们的需要，因此，IEEE在制订更高速度的标准时，就产生了802.11a和802.11b两个分支，后来又推出了802.11g的新标准，如表4-4所示，其中的U-NII是指用于构建国家信息基础的无限制频段。

http://www.educity.cn/article_images/2014-01-15/a0c20fa5-12a1-4c58-ab6f-1bd3fdb0997e.jpg
IEEE 802.11a、IEEE 802.11b和IEEE 802.11g主要是以物理层的不同作为区分，它们的区别直接表现在工作频段和数据传输率、最大传输距离等指标上。而工作在MAC层的标准又分为IEEE 802.11h、IEEE 802.11e和IEEE 802.11i等。802.11h是802.11a的扩展，目的是兼容其他5GHz频段的标准（例如，欧盟使用的HyperLAN2等）；802.11e是IEEE为满足QoS方面的要求而制订的标准；IEEE 802.11i规定使用802.1x认证和密钥管理方式。
3. 无线技术与3G通信
多址技术可以分为频分多址（Frequency Division Multiple Access，FDMA）、时分多址（Time Division Multiple Access，TDMA）和码分多址（Code Division Multiple Access，CDMA）。FDMA是采用调频的多址技术，业务信道在不同的频段分配给不同的用户；TDMA是采用时分的多址技术，业务信道在不同的时间分配给不同的用户；CDMA是采用扩频的码分多址技术，所有用户在同一时间、同一频段上，根据不同的编码获得业务信道。国际电信联盟在2000年5月确定了WCDMA、CDMA 2000和TD-SCDMA三大主流无线接口标准。
WCDMA（Wideband CDMA，宽频CDMA）的支持者主要是以GSM（Global System for Mobile Communications，全球移动通讯系统）为主的欧洲厂商，日本公司也或多或少参与其中。这套系统能够架设在GSM网络上，对于系统提供商而言，可以较轻易地过渡。因此，WCDMA具有先天的市场优势。目前，中国联合网络通信集团公司获得基于WCDMA技术制式的3G业务经营许可。
CDMA 2000也称为CDMA Multi-Carrier，以美国高通北美公司为主导提出，摩托罗拉、Lucent和韩国三星公司都有参与，韩国现在成为该标准的主导者。这套系统是从窄频CDMA One数字标准衍生出来的，可以从原有的CDMA One结构直接升级到3G，建设成本低廉。但目前使用CDMA的地区只有日、韩和北美，所以CDMA 2000的支持者不如WCDMA多。目前，中国电信集团公司获得基于CDMA2000技术制式的3G业务经营许可。
TD-SCDMA标准是由中国大唐电信制定的3G标准，该标准将智能天线、同步CDMA和软件无线电等技术融于其中，在频谱利用率、对业务支持具有灵活性、频率灵活性及成本等方面具有独特优势。另外，由于中国庞大的市场，该标准受到各大主要电信设备厂商的重视，全球一半以上的设备厂商都宣布可以支持TD-SCDMA标准。目前，中国移动通信集团公司获得基于TD-SCDMA技术制式的3G业务经营许可。
4.3.4 广域网技术
开始学习
4.3.4 广域网技术
广域网主要提供面向通信的服务，支持用户使用计算机进行远距离的信息交换，与局域网相比，其覆盖范围广、通信的距离远、需要考虑的因素增多，例如，线路的冗余、带宽的利用和差错处理等。广域网一般由电信部门负责组建、管理和维护，并向全社会提供面向通信的有偿服务、流量统计和计费问题。常用的广域网技术包括：同步光纤网络、数字数据网、帧中继和异步传输模式技术等。
1. 同步光网络
同步光纤网络（Synchronous Optical Network，SONET）和同步数字层级（Synchronous Digital Hierarchy，SDH）是一组有关光纤信道上的同步数据传输的标准协议。SONET 是由美国标准化组织颁布的标准，SDH 是由国际电信同盟颁布的标准，两者均为传输网络物理层技术，传输速率可高达10Gbps，除了使用的复用机制有所不同外，其余技术均相似。SDH的网络元素主要有同步光纤线路系统、终端复用器、分插复用器和同步数字交叉连接设备。典型的SDH应用是在光纤上的双环应用。
IPoverSDH是以SDH网络作为IP数据网络的物理传输网络，它使用链路适配和成帧协议对IP数据包进行封装，然后按字节同步的方式将封装后的IP数据包映射到SDH的同步净荷封装中。目前，广泛使用PPP（Point to Point Protocol，点对点协议）对IP数据包进行封装，并采用HDLC（High-Level Data Link Control，高级数据链路控制）的帧格式。PPP提供多协议封装、差错控制和链路初始化控制等功能，而HDLC帧格式负责同步传输链路上的PPP封装的IP数据帧的定界。
2. 数字数据网
数字数据网（Digital Data Network，DDN）是利用数字信道提供半永久性连接电路，以传输数据信号为主的数字传输网络，可以满足各类租用数据专线业务的需要。归纳起来，DDN有以下几个特点：
（1）传输速率高。在DDN网内的数字交叉连接复用设备能提供2Mbps或N×64Kbps（≤2M）速率的数字传输信道。
（2）传输质量较高。DDN大量采用光纤传输系统，用户之间专有固定连接，网络时延小。
（3）协议简单。采用交叉连接技术和时分复用技术，由智能化程度较高的用户端设备来完成协议的转换，本身不受任何规程的约束，是全透明网，面向各类数据用户。
（4）灵活的连接方式。可以支持数据、语音、图像传输等多种业务，它不仅可以和用户终端设备进行连接，也可以和用户网络连接，为用户提供灵活的组网环境。
（5）电路可靠性高。采用路由迂回和备用方式，使电路安全可靠。
（6）网络运行管理简便。采用网络管理软件对务进行调度监控。
3．帧中继
帧中继是一种高性能的广域网技术，运行在OSI/RM的物理层和数据链路层，它是一种数据包交换技术，是X.25网络的简化版本，比X.25网络具有更高的性能和更有效的传输效率。
帧中继仅完成OSI/RM物理层和数据链路层的核心功能，将流量控制和纠错等留给智能终端去完成，大大简化了节点之间的协议。同时，帧中继采用虚电路技术，能充分利用网络资源，具有吞吐量高、时延低、适合突发性业务等特点。帧中继技术适用于以下三种情况：
（1）当用户需要数据通信，其带宽需求为64kbps~2Mbps，而参与通信的各方多于两个的时候，使用帧中继是一种较好的解决方案。
（2）通信距离较长时，应优选帧中继，因为帧中继的高效性使用户能享有较好的经济性。
（3）当数据业务量为突发性时，由于帧中继具有动态分配带宽的功能，选用帧中继能有效地处理突发性数据。
4. 异步传输模式
异步传输模式（Asynchronous Transfer Mode，ATM）是以信元为基础的一种分组交换和复用技术，它是一种为多种业务而设计的通用的面向连接的传输模式，适用于局域网和广域网，具有高速数据传输率和支持多种类型（例如，语音、数据、传真、实时视频和图像等）的数据通信。
在ATM中，信元不仅是传输的基本单位，也是交换的信息单位，它是虚电路式分组交换的一个特例。与分组相比，由于信元是固定长度的，可以高速地进入处理和交换。由于ATM技术简化了交换过程，去除了不必要的数据校验，采用易于处理的固定信元格式（53个字节），所以ATM交换速率大大高于传统的数据网，其典型数据速率为150Mbps。
4.3.5 网络接入技术
开始学习
4.3.5 网络接入技术
目前，接入Internet的主要方式有PSTN、ISDN、ADSL、FTTx+LAN和HFC接入等五种。
1．PSTN接入
PSTN（Public Switching Telephone Network，公用交换电话网络）是指利用电话线拨号接入Internet，通常计算机需要安装一个Modem（调制解调器），将电话线插入到Modem上，在计算机上利用拨号程序输入接入号码进行接入。PSTN的速度较低，一般低于64Kbps。
2．ISDN接入
ISDN（Integrated Services Digital Network，综合业务数字网）俗称“一线通”，是在电话网络的基础上构造的纯数字方式的综合业务数字网，能为用户提供包括语音、数据、图像和传真等在内的各类综合业务。ISDN的基本速率接口为2B+D信道，共144Kbps带宽，一般使用RJ45接口。最高可提供30B+D的带宽，也称为初始速率接口（Primary Rate Interface，PRI），PRI通过30个分立的或组合的64Kbps信道和一个16Kbps的D信道提供最高达2.048Mbps的传输速率。ISDN的B信道是基本信道，提供64Kbps带宽来传送语音或数据资料；D信道作为控制信道，提供16Kbps或64 Kbps的带宽，在ISDN网络端与用户端之间传输频带信号，此通道也可用于传输X.25资料，但需要交换机的支持。
3．ADSL接入
ADSL（Asymmetrical Digital Subscriber Loop，非对称数字用户线路）的服务端设备和用户端设备之间通过普通的电话线连接，无需对入户线缆进行改造，就可以为现有的大量电话用户提供ADSL宽带接入。随着标准和技术的成熟及成本的不断降低，ADSL日益受到电信运营商和用户的欢迎，成为接入Internet的主要方式之一。ADSL的特点是上行速度和下行速度不一样，并且往往是下行速度大于上行速度。目前，比较成熟的ADSL标准主要有两种，分别是G.DMT和G.Lite。G.DMT是全速率的ADSL标准，提供8Mbps的下行速率和1.5Mbps的上行速率，但要求用户安装分离器，而G.Lite是一种速率较慢的ADSL，它不需要在用户端进行线路的分离。G.Lite标准的最大下行速率为1.5Mbps，最大上行速率为512Kbps。
4．FTTx+LAN接入
光纤通信是指利用光导纤维（简称为光纤）传输光波信号的一种通信方法，相对于以电为媒介的通信方式而言，光纤通信的主要优点有传输频带宽，通信容量大；传输损耗小；抗电磁干扰能力强；线径细、重量轻；资源丰富等。
（1）FTTx技术。随着光纤通信技术的平民化，以及高速以太网的发展，现在许多宽带智能小区就是采用以千兆以太网技术为主干，充分利用光纤通信技术完成接入的。实现高速以太网的宽带技术常用的方式是FTTx+LAN（光纤+局域网），根据光纤深入用户的程度，可以分为五种，分别是FTTC（Fiber To The Curb，光纤到路边）、FTTZ（Fiber To The Zone，光纤到小区）、FTTB（Fiber To The Building，光纤到楼）、FTTF（Fiber To The Floor，光纤到楼层）和FTTH（Fiber To The Home，光纤到户）。
（2）无源光纤网络（Passive Optical Network，PON）技术。PON是实现FFTB的关键技术，在光分支点不需要节点设备，只需安装一个简单的光分支器即可，因此，具有节省光缆资源、带宽资源共享、节省机房投资、设备安全性高、建网速度快和综合建网成本低等优点。目前，PON主要有APON（ATM PON）和EPON（Ethernet PON）两种。APON选择ATM和PON作为网络协议和平台，其上、下行方向的信息传输都采用ATM传输方案，下行速率为622Mbps或155Mbps，上行速率为155Mbps。光节点到前端的距离可长达10～20km，或者更长。采用无源双星型拓扑结构，使用时分复用和时分多址技术，可以实现信元中继、局域网互联、电路仿真、普通电话业务等；EPON是以太网技术发展的新趋势，其下行速率为100Mbps或者1000Mbps，上行为100Mbps。在EPON中，传送的是可变长度的数据包，最长可为65535个字节，简化了网络结构、提高了网络速度。
5. 同轴+光纤接入
同轴光纤技术（Hybrid Fiber-Coaxial，HFC）是将光缆敷设到小区，然后通过光电转换节点，利用有线电视（Community Antenna Television，CATV）的总线式同轴电缆连接到用户，提供综合电信业务的技术。这种方式可以充分利用CATV原有的网络，由于具有建网快、造价低等特点，使其逐渐成为最佳的接入方式之一。HFC是由光纤干线网和同轴分配网通过光节点结合而成，一般光纤干线网采用星型结构，同轴电缆分配网采用树形结构。
HFC的用户端需要使用一个称为Cable Modem（电缆调制解调器）的设备，它不单纯是一个调制解调器，还集成了调谐器、加/解密设备、桥接器、网络接口卡、虚拟专网代理和以太网集线器的功能于一身，它无须拔号、可提供随时在线的永远连接。HFC采用频分复用技术和64QAM调制，其上行速率已达10Mbps以上，下行速率更高。
4.4 网络互连与常用设备
开始学习
4.4 网络互连与常用设备
网络互连是为了将两个以上具有独立自治能力、同构或异构 <http://web.nuist.edu.cn/courses/jsjwl/cha6/wlhlgs-tyg.htm>的计算机网络连接起来，实现数据流通，扩大资源共享的范围，或者容纳更多的用户。网络互连包括局域网与局域网的互连、局域网与广域网的互连、广域网与广域网的互连，可以扩大资源共享的范围，更多的资源可以被更多的用户共享。
1. 网络互连设备
在网络互连时，各节点一般不能简单地直接相连，而是需要通过一个中间设备来实现。按照OSI/RM的分层原则，这个中间设备要实现不同网络之间的协议转换功能，根据它们工作的协议层不同进行分类，网络互连设备有中继器（实现物理层协议转换，在电缆间转换二进制信号）、网桥（实现物理层和和数据链路层协议转换）、路由器（实现网络层和以下各层协议转换）、网关（提供从最底层到传输层或以上各层的协议转换）和交换机等。在实际应用中，各厂商提供的设备都是多功能组合，向下兼容的。表4-5则是对以上设备的一个总结。

http://www.educity.cn/article_images/2014-01-15/f7f24253-be26-4cfe-b46f-51e8930ed760.jpg

http://www.educity.cn/article_images/2014-01-15/961a8ca1-d82d-446d-800b-2da7e4044893.jpg
随着无线技术运用的日益广泛，目前，市面上基于无线网络的产品非常多，主要有无线网卡、无线AP、无线网桥和无线路由器等。
2. 交换技术
在计算机网络中，当用户较多而传输的距离较远时，通常不采用两点固定连接的专用线路，而是采用交换技术，使通信传输线路为各个用户公用，以提高传输设备的利用率，降低系统费用。
按照实际的数据传送技术，交换技术又可分为电路交换、报文交换和分组交换，它们的主要特点如下：
（1）电路交换。在数据传送之前必须先设置一条通路。在线路释放之前，该通路将由一对用户独占。
（2）报文交换。报文从源点传送到目的地采用存储转发的方式，在传送报文时，同时只占用一段通道。在交换节点中需要缓冲存储，报文需要排队。因此，报文交换不能满足实时通信的要求。
（3）分组交换。交换方式和报文交换方式类似，但报文被分成分组传送，并规定了最大的分组长度。在数据报分组交换中，目的地需要重新组装报文；在虚电路分组交换中，在数据传送之前必须通过虚呼叫设置一条虚电路。分组交换技术是在数据网络中使用最广泛的一种交换技术。
根据各自的特点，不同的交换技术适用于不同的场合。例如，对于交互式通信来说，报文交换肯定是不适合的；对于较轻和间歇式负载来说，电路交换是最合适的，因此，可以通过电话拔号线路来实行通信；对于较重和持续的负载来说，使用租用的线路以电路交换方式通信是合适的；对必须交换中等数据到大量的数据时，可用分组交换方法。
3. 路由技术
路由器是工作在网络层的重要网络互连设备，构成了基于TCP/IP协议的Internet的主体脉络，工作在Internet上的路由器也称为IP网关。
路由器的主要功能就是进行路由选择。当一个网络中的计算机要给另一个网络中的计算机发送分组时，它首先将分组送给同一个网络中用于网络之间连接的路由器，路由器根据目的地址信息，选择合适的路由，将该分组传递到目的网络用于网络之间连接的路由器中，然后通过目的网络中内部使用的路由选择协议，该分组最后被递交给目的计算机。
根据路由选择协议的应用范围，可以将其分为内部网关协议（Interior Gateway Protocol，IGP）、外部网关协议（Exterior Gateway Protocol，EGP）和核心网关协议（Gateway Gateway Protocol，GGP）三大类。
（1）内部网关协议。内部网关协议是指在一个自治系统（Autonomous System，AS）内运行的路由选择协议，主要包括RIP（Routing Information Protocol，路由信息协议）、OSPF（Open Shortest Path First，开放式最短路径优先）、IGRP（Interior Gateway Routing Protocol，内部网关路由协议）和EIGRP（Enhanced IGRP，增强型IGRP）等。其中AS是指同构型的网关连接的互连网络，通常是由一个网络管理中心控制的。
（2）外部网关协议。外部网关协议是指在两个AS之间使用的路由选择协议，最新的EGP主要有BGP（Border Gateway Protocol，边界网关协议），其主要功能是控制路由策略。
（3）核心网关协议。Internet中有个主干网，所有的AS都连接到主干网上，主干网中的网关称为核心网关，核心网关之间交换路由信息时使用的是GGP。
从路由协议使用的算法来看，所有的路由协议可以分为以下三类：
（1）距离向量协议。计算网络中所有链路的矢量和距离，并以此为依据来确定最佳路径。这类协议会定期向相邻的路由器发送全部或部分路由表。
（2）链路状态协议。使用为每个路由器创建的拓扑数据库来创建路由表，通过计算最短路径来形成路由表。这类协议会定期向相邻路由器发送网络链路状态信息。
（3）平衡型协议。结合了距离向量协议和链路状态协议的优点。
4.5 网络工程
网络工程的建设是一个极其复杂的系统工程，是对计算机网络、信息系统建设和项目管理等领域知识的综合利用的过程，系统分析师必须根据用户单位的需求和具体情况，结合当前网络技术的发展和产品化程度，经过充分的需求分析和市场调研，确定网络建设方案，依据方案有计划、分步骤地实施。按照实施过程的先后，网络工程可分为网络规划、网络设计和网络实施三个阶段。
4.5.0 内容介绍
已学习
网络工程的建设是一个极其复杂的系统工程，是对计算机网络、信息系统建设和项目管理等领域知识的综合利用的过程，系统分析师必须根据用户单位的需求和具体情况，结合当前网络技术的发展和产品化程度，经过充分的需求分析和市场调研，确定网络建设方案，依据方案有计划、分步骤地实施。按照实施过程的先后，网络工程可分为网络规划、网络设计和网络实施三个阶段。
4.5.1 网络规划
已学习
4.5.1 网络规划
网络规划是网络建设过程中非常重要的环节，同时也是一个系统性的过程。网络规划应该以需求为基础，同时考虑技术和工程的可行性。具体来说，网络规划包括网络需求分析、可行性分析和对现有网络的分析与描述。
1. 网络需求分析
在网络组建之前，首先要进行需求分析，根据用户提出的要求，进行网络的设计，网络建设的成败很大程度取决于网络实施前的规划工作。
需求分析的基本任务是深入调查用户网络建设的背景、必要性、上网的人数和信息量等，然后进行纵向的、更加深入细致的需求分析和调研，在确定地理布局、设备类型、网络服务、通信类型和通信量、网络容量和性能，以及网络现状等与网络建设目标相关的几个主要方面情况的基础上形成分析报告，为网络设计提供依据。需求分析通常采用自顶向下的结构化方法，从以下几个方面着手，逐一深入，在调研的基础上进行充分的分解，从而为网络设计提供基础。
（1）功能需求。功能需求是指用户希望利用网络来完成什么功能，然后依据使用需求、实现成本、未来发展和总预算投资等因素对网络的组建方案进行认真的设计和推敲。
（2）通信需求。通信需求是指了解用户需要的通信类型、通信频度、通信时间和通信量等。
（3）性能需求。性能需求包括容量（带宽）、利用率、最优利用率、吞吐量、可提供负载、精确度、效率、延迟（等待时间）、延时变化量、响应时间、最优网络利用率、端到端的差错率、精确度和网络效率等。
（4）可靠性需求。可靠性需求主要包括精确度、错误率、稳定性、无故障时间、数据备份等几个方面。
（5）安全需求。衡量网络安全的指标是可用性、完整性（信息的完整、精确和有效，不因人为或非人为的原因而改变信息内容）和保密性（信息只能通过一定方式向有权知道其内容的人员透露）。
（6）运行与维护需求。运行与维护需求是指网络运行和维护费用方面的需求。
（7）管理需求。管理需求主要包括用户管理（创建和维护用户账户及其访问权限）、资源管理、配置管理、性能管理（监视和跟踪网络活动，维护和增强系统性能）和网络维护（防止、检查和解决网络故障问题）。
除此之外，系统分析师还应该了解网络的地理位置，以及对运行环境的要求（包括网络操作系统、数据库和应用软件等相关的需求）。
2. 可行性研究
在网络规划阶段，有一个很重要的活动，那就是系统可行性研究，通常从技术可行性、经济可行性、法律可行性和用户使用可行性等方面进行论证。有关可行性研究的详细知识，将在9.4节中介绍。
3. 对现有网络的分析与描述
如果是在现有网络系统的基础上进行升级，那么，网络规划阶段的一项重要工作就是对现有网络进行分析，并系统化地描述出来。对现有网络系统进行调研，主要从以下几个方面进行：
（1）服务器的数量和位置。通常服务器所在的中心机房就是网络瓶颈所在，因此，服务器的数量和位置是确定网络瓶颈、解决网络拥塞的前提。
（2）客户机的数量和位置。对客户机的数量和位置进行分析，便于发现在客户机相对集中的地方是否存在瓶颈，结合地理位置确认客户机的网络接入位置是否合理，当存在拥堵现象时，可以重新设计该区域及周边区域的网络结构，均衡网络负载。
（3）同时访问的数量。了解网络中并发访问的情况，并发访问的最大值也就是网络的峰值，是考验网络负载能力的重要参数。通常该值超过网络负载能力时，就会出现问题，需要采取相应措施。可以借助一些工具（例如，网络分析仪）进行连续多天24小时全天候跟踪以进行分析。
（4）每天的用户数。每天的用户数可以从一个侧面反映网络的负载和流量。
（5）每次使用的时间。每次网络访问的持续时间将影响到整个模型的建立，对并发的流量预计有很大的影响，因为其必将对并发人数有影响。
（6）每次数据传输的数据量，即每笔业务所产生的数据流量。
（7）网络拥塞的时间段。可以针对网络拥塞的时间段所发生的数据流、用户数、业务类型进行重点分析，从而找到导致网络拥塞的症结所在。
（8）采用的协议。不同的协议对网络的传输介质和使用的设备，以及应用的规划会有不同方面的影响因素。
（9）通信模式。对通信模式的分析，包括双工模式或单工模式、速度和通信地域范围等。
结合对现有网络系统的调研与分析，并在其基础上进行新的网络规划，能够通过以下措施更有效地保证用户的原始投资：
（1）不要推倒重来，要基于现有设备的基础上进行升级和改造。
（2）将现有的设备降级使用（例如，将原有核心层设备降级为分层级使用等），并新增更先进的设备，以提高网络的性能。
4.5.2 网络设计
已学习
4.5.2 网络设计
网络设计的工作是在网络规划的基础上，设计一个能够解决用户问题的方案。在整个设计过程中，首先要确定网络总体目标和设计原则，然后设计网络的逻辑结构，再设计网络的物理结构。
1. 网络设计的任务
完成网络规划之后，将进入网络系统的设计阶段，这个阶段通常包括确定网络总体目标和设计原则，进行网络总体设计和拓扑结构设计，确定网络选型和进行网络安全设计等方面的内容。
（1）确定网络总体目标。明确采用哪些网络技术和标准，构筑一个满足哪些应用的多大规模的网络，包括是否分期实施、网络的实施成本和运行成本等方面的问题。
（2）确定总体设计原则。对主要设计原则进行选择和权衡，并确定其在方案设计中的优先级。网络设计的一些基本原则实用性原则、开放性原则、高可用性/可靠性原则、安全性原则、先进性原则、易用性原则和可扩展性原则等。
（3）通信子网设计。通信子网设计包括拓扑结构与网络总体规划、分层的设计，以及远程接入访问的设计。其中，拓扑结构与网络总体规划是整个网络设计的基础，通常应该结合费用、灵活性和可靠性三个方面综合考虑。
（4）资源子网设计。资源子网设计主要考虑服务器的接入和子网连接的问题。服务器通常是网络中的核心设备，包括为全网服务的服务器和为部门业务服务的服务器两类，每类服务器可以采用不同的接入方式。
（5）设备选型。设备选型包括网络设备和各个层次的交换机的选择策略。网络设备的选型应考虑厂商选择原则（尽可能选取同一厂商，选择产品线全、技术认证队伍力量强、市场占有率高的网络设备品牌）、扩展性原则（主干要预留扩展，低端够用即可），根据方案实际需要选型（性能、端口类型和端口密度等），选择性价比高、质量好的设备；核心交换机的选型策略是设备应具备高性能和高速率、定位准确、便于升级和扩展、高可靠性、强大网络控制能力、良好可管理性等特点；汇聚层/接入层交换机的选型策略是应具备灵活性、高性能，在满足要求的基础上尽量便宜、易用、简单，具备一定的QoS和控制能力，支持多级网络管理等特点。
（6）网络操作系统与服务器资源设备。选择服务器时，首先要看具体的网络应用，然后确定网络操作系统，再进行服务器选型。网络操作系统的选择要点是，要结合服务器的性能和兼容性、安全因素、价格因素、第三方软件和市场占有率等方面进行综合考查。根据需要，还应配置服务器集群或双机容错系统等，以便实现更好的性能。有关双机容错技术的详细知识，将在19.5节中介绍；有关服务器集群技术的详细知识，将在19.6节中介绍。
（7）网络安全设计。网络安全设计的基本原则有木桶原则、整体性原则、有效性与实用性原则、等级性原则、设计为本原则、自主和可控性原则、安全有价原则等。网络安全设计与实施的步骤是，确定面临的攻击和风险，明确安全策略，建立安全模型，选择并实现安全服务，对安全产品的选型进行测试。不同的网络安全技术所控制的范围不一样，有关这方面的知识，将在第18章中详细介绍。
2. 分层设计
为了能够更好地分析与设计复杂的大型互连网络，在计算机网络设计中，主要采用分层（分级）设计模型，它类似于软件工程中的结构化设计。通过一些通用规则来设计网络，就可以简化设计、优化带宽的分配和规划。在分层设计中，引入了三个关键层的概念，分别是核心层、汇聚层和接入层。
通常将网络中直接面向用户连接或访问网络的部分称为接入层，将位于接入层和核心层之间的部分称为分布层或汇聚层。接入层的目的是允许终端用户连接到网络，因此，接入层交换机具有低成本和高端口密度特性。
汇聚层是核心层和接入层的分界面，完成网络访问策略控制、数据包处理、过滤、寻址，以及其他数据处理的任务。汇聚层交换机是多台接入层交换机的汇聚点，它必须能够处理来自接入层设备的所有通信量，并提供到核心层的上行链路，因此，汇聚层交换机与接入层交换机比较，需要更高的性能，更少的接口和更高的交换速率。
网络主干部分称为核心层，核心层的主要目的在于通过高速转发通信，提供优化、可靠的骨干传输结构，因此，核心层交换机应拥有更高的可靠性，性能和吞吐量。核心层为网络提供了骨干组件或高速交换组件，在纯粹的分层设计中，核心层只完成数据交换的特殊任务。需要根据网络需求的地理距离、信息流量和数据负载的轻重来选择核心层技术。在主干网中，考虑到高可用性的需求，通常会使用双星（树）结构，即采用两台同样的交换机，与汇聚层交换机分别连接，并使用链路聚合技术实现双机互联。
4.5.3 网络实施
已学习
4.5.3 网络实施
网络实施是在网络设计的基础上进行设备的购买、安装、调试和系统切换工作。主要包括以下步骤：
（1）工程实施计划。在网络设备安装前，需要编制工程实施计划，列出需实施的项目、费用和负责人等，以便控制投资，按进度要求完成实施任务。工程计划必须包括在网络实施阶段的设备验收、人员培训、系统测试和网络运行维护等具体事务的处理，必须控制和处理所有可预知的事件，并调动有关人员的积极性。
（2）网络设备到货验收。系统中要用到的网络设备到货后，在安装调试前，必须先进行严格的功能和性能测试，以保证购买的产品能很好地满足用户需要。在到货验收的过程中，要做好记录，包括对规格、数量和质量进行核实，以及检查合格证、出厂证、供应商保证书和各种证明文件是否齐全。在必要时利用测试工具进行评估和测试，评估设备能否满足网络建设的需求。如果发现短缺或破损，要求设备提供商补发或免费更换。
（3）设备安装。网络系统的安装和调试需要由专门的技术人员负责。安装项目一般分为综合布线系统、机房工程、网络设备、服务器、系统软件和应用软件等几个部分，不同的部分应分别由专门的工程师进行安装和调试。在这些安装项目中，尤其要注意综合布线系统的质量，因为综合布线一般会涉及到隐蔽工程，一旦覆盖后发生故障，查找错误源和恢复故障的代价比较高。
（4）系统测试。系统安装完毕，就要进行系统测试。系统测试是保证网络安全可靠运行的基础。网络测试包括网络设备测试、网络系统测试和网络应用测试三个层次。网络设备测试主要是针对交换机、路由器、防火墙和线缆等传输介质和设备的测试，网络系统测试主要是针对系统的连通性、链路传输率、吞吐率、传输时延和丢包率、链路利用率、错误率、广播帧和组播帧和冲突率等方面的测试，网络应用测试主要针对DHCP、DNS、Web、Email和FTP等服务性能进行测试。
（5）系统试运行。系统调试完毕后，进入试运行阶段。这一阶段是验证系统在功能和性能上是否达到预期目标的重要阶段，也是对系统进行不断调整，直至达到用户要求的重要时刻。
（6）用户培训。一个规模庞大、结构复杂的网络系统往往需要网络管理员来维护，并协调网络资源的使用。对有关人员的培训是网络建设的重要一环，也是保证系统正常运行的重要因素之一。
（7）系统转换。经过一段时间的试运行，系统达到稳定、可靠的水平，就可以进行系统转换工作。系统转换可以采用三种方法，分别是直接转换、并行转换和分段转换，这三种方法的可靠性和成本各不相同，应视具体情况而定。有关系统转换的详细知识，将在15.2.1节中介绍。
['第5章', '数据库系统']
5.0 内容介绍
开始学习
在当今的知识经济时代，信息是经济发展的战略资源，信息技术已经成为社会生产力中重要的组成部分。人们充分认识到，数据库是信息化社会中信息资源管理与开发利用的基础，当今的计算机信息系统也都以数据库技术为基础。对于一个国家来说，数据库的建设规模和使用水平已成为衡量该国信息化程度的重要标志。因此，数据库课程是计算机领域中的一门重要课程，也是系统分析师必须要掌握的专业知识与技能。
5.1 数据库模式
开始学习
5.1 数据库模式
数据库是长期存储在计算机内的、有组织的、可共享的数据集合，数据库系统是指在计算机信息系统中引入数据库后的系统，一般由数据库、数据库管理系统（DataBase Management System，DBMS）、应用系统、数据库管理员（DataBase Administrator，DBA）和用户构成。数据库系统的结构可以有多种不同的层次或不同的角度，其中典型的是三级划分法，其中包括三级模式和两级映射。
1. 三级模式
数据库系统的三级模式如图5-1所示，从图5-1中可以看出，数据库系统由外模式、概念模式和内模式三级构成。

http://www.educity.cn/article_images/2014-01-15/bde20521-34b8-4bcd-850c-d117ec05b5ae.jpg
外模式也称为子模式或用户模式，对应于用户级数据库。外模式用以描述用户（包括程序员和最终用户）看到或使用的那部分数据的逻辑结构，是数据库用户的数据视图，是与某一应用有关的数据的逻辑表示。用户根据外模式用数据操作语句或应用程序去操作数据库中的数据。外模式主要描述组成用户视图的各个记录的组成、相互关系、数据项的特征、数据的安全性和完整性约束条件。一个数据库可以有多个外模式，一个应用程序只能使用一个外模式。
概念模式也称为模式或逻辑模式，对应于概念级数据库。概念模式是数据库中全体数据的逻辑结构和特征的描述，是所有用户的公共数据视图，用以描述现实世界中的实体及其性质与联系，定义记录、数据项、数据的完整性约束条件及记录之间的联系。概念模式通常还包含有访问控制、保密定义和完整性检查等方面的内容，以及概念/物理之间的映射。一个数据库只有一个概念模式。
内模式对应于物理级数据库，是数据物理结构和存储方式的描述，是数据在数据库内部的表示方式。内模式不同于物理层，它假设外存是一个无限的线性地址空间。内模式定义的是存储记录的类型、存储域的表示和存储记录的物理顺序，以及索引和存储路径等数据的存储组织。一个数据库只有一个内模式。
在数据库系统的三级模式中，模式是数据库的中心与关键；内模式依赖于模式，独立于外模式和存储设备；外模式面向具体的应用，独立于内模式和存储设备；应用程序依赖于外模式，独立于模式和内模式。
2. 两级独立性
数据库系统两级独立性是指物理独立性和逻辑独立性。三个抽象级别之间通过两级映射（外模式/模式映射和模式/内模式映射）进行相互转换，使得数据库的三级模式形成一个统一的整体。
物理独立性是指用户的应用程序与存储在磁盘上的数据库中的数据是相互独立的，当数据的物理存储改变时，应用程序不需要改变。物理独立性存在于概念模式和内模式之间的映射转换，说明物理组织发生变化时应用程序的独立程度。
逻辑独立性是指用户的应用程序与数据库中的逻辑结构是相互独立的，当数据的逻辑结构改变时，应用程序不需要改变。逻辑独立性存在于外模式和概念模式之间的映射转换，说明概念模式发生变化时应用程序的独立程度。相对来说，逻辑独立性比物理独立性更难实现。
5.2 数据模型
数据模型是现实世界数据特征的抽象。通过这种抽象，可以将现实世界的问题，转化到计算机上进行分析与解决。数据模型所描述的内容包括三个部分，分别是数据结构、数据操作和数据约束。其中数据结构主要描述数据的类型、内容、性质和数据间的联系等。数据结构是数据模型的基础，数据操作和约束都建立在数据结构上。不同的数据结构具有不同的操作和约束；数据操作主要描述在相应的数据结构上的操作类型和操作方式；数据约束主要描述数据结构内数据间的语法和词义联系、他们之间的制约和依存关系，以及数据动态变化的规则，以保证数据的正确、有效和相容。
5.2.0 内容介绍
开始学习
数据模型是现实世界数据特征的抽象。通过这种抽象，可以将现实世界的问题，转化到计算机上进行分析与解决。数据模型所描述的内容包括三个部分，分别是数据结构、数据操作和数据约束。其中数据结构主要描述数据的类型、内容、性质和数据间的联系等。数据结构是数据模型的基础，数据操作和约束都建立在数据结构上。不同的数据结构具有不同的操作和约束；数据操作主要描述在相应的数据结构上的操作类型和操作方式；数据约束主要描述数据结构内数据间的语法和词义联系、他们之间的制约和依存关系，以及数据动态变化的规则，以保证数据的正确、有效和相容。
5.2.1 数据模型的分类
开始学习
5.2.1 数据模型的分类
数据模型主要有两大类，分别是概念数据模型（实体联系模型）和基本数据模型（结构数据模型）。概念数据模型是按照用户的观点来对数据和信息建模，主要用于数据库的设计，一般用实体-联系（Entity-Relationship，E-R）方法表示，所以也称为E-R模型；基本数据模型是按照计算机系统的观点来对数据和信息建模，主要用于数据库的实现。基本数据模型是数据库系统的核心和基础，通常由数据结构、数据操作和完整性约束三部分组成。其中数据结构是对系统静态特性的描述，数据操作是对系统动态特性的描述，完整性约束是一组完整性规则的集合。人们提出过很多种基本数据模型，其中最着名的有层次模型、网状模型、关系模型和面向对象模型。
1. 层次模型
层次模型是最早出现的数据模型，由于它采用了树形结构作为数据的组织方式，在这种结构中，每一个结点可以有多个孩子结点，但只能有一个双亲结点，这样，整体结构也是分层状的，所以称其为层次模型。层次模型数据库系统的典型代表是IBM公司的IMS数据库管理系统，该系统是1968年推出的，曾经作为大型商用数据库系统被广泛使用（现已经被淘汰）。
2. 网状模型
网状模型用有向图表示实体类型和实体之间的联系。网状模型的优点是记录之间的联系通过指针实现，多对多的联系容易实现，查询效率高；其缺点是编写应用程序比较复杂，程序员必须熟悉数据库的逻辑结构。由图和树的关系可知，层次模型是网状模型的一个特例。
3. 关系模型
关系模型用表格结构表达实体集，用外键表示实体之间的联系。关系模型建立在严格的数学概念基础上，概念单一、结构简单、清晰，用户易懂易用；存取路径对用户透明，从而数据独立性和安全性好，能简化数据库开发工作；其缺点主要是由于存取路径透明，查询效率往往不如非关系数据模型。
关系模型是目前应用最广泛的一种数据模型，例如，Oracle、DB2、SQL Server、Sybase和MySQL等都是关系数据库系统。有关关系模型的详细知识，将在5.2.2节中介绍。
4. 面向对象模型
面向对象模型是用面向对象的观点来描述现实世界实体的逻辑组织、对象之间的限制和联系等的模型。目前，已有多种面向对象数据库产品，例如，ObjectStore、Versant Developer、Suite Poet和Objectivity等，但其具体的应用并不多。
5.2.2 关系模型
开始学习
5.2.2 关系模型
在关系模型中，实体以及实体间的联系都是用关系来表示。在一个给定的现实世界领域中，相应于所有实体及实体之间的联系的关系的集合构成一个关系数据库。关系的描述称为关系模式，关系模式通常可以简记为R(A1，A2，…，An)，其中R为关系名，A1、A2、…、An为属性名。关系实际上就是关系模式在某一时刻的状态或内容。也就是说，关系模式是型，关系是它的值。关系模式是静态的、稳定的，而关系是动态的、随时间不断变化的，因为关系操作在不断地更新着数据库中的数据。但在实际应用中，通常将关系模式和关系统称为关系，读者可以从上下文中加以区别。
1. 关系运算
关系代数的基本运算主要有并、交、差、笛卡尔积、选择、投影、连接和除法运算。
（1）并。计算两个关系在集合理论上的并集，即给出关系R和S（两者有相同元/列数），R∪S的元组包括R和S所有元组的集合，形式定义如下：

http://www.educity.cn/article_images/2014-01-15/cc52e769-bd57-49b9-b92f-90fc26d7c553.jpg

http://www.educity.cn/article_images/2014-01-15/69b0f14b-ad72-4e26-bbf8-7ea2e079a857.jpg
则R÷S的求解过程为：首先，按除运算定义要求，确定X，Y，Z属性集合。Y是关系R中的属性集合，Z是S中全部属性的集合，即Z={U3，U4}，由于Y=Z，因此，Y={U3，U4}，X={U1，U2}。也就是说，R÷S结果集包含属性U1和U2；然后，将关系R的U1、U2（共有<a，b>、<c，a>两个元组）与关系S作笛卡尔积操作，结果如表5-3所示。

http://www.educity.cn/article_images/2014-01-15/0e52f2c0-15a4-425d-a3ca-570ec464b83b.jpg
通过检查表5-3，可以发现元组<a，b>与S(Z)的笛卡尔积被包含在R(X，Y)中，而元组<c，a>与S(Z)的笛卡尔积有一个元组未被包含在R(X，Y)中，所以，结果集中只有元组<a，b>。
2. 元组演算
在元组演算中，元组演算表达式简称为元组表达式，其一般形式为{t|P(t)}，其中，t是元组变量，表示一个元数固定的元组；P是公式，在数理逻辑中也称为谓词，也就是计算机语言中的条件表达式。{t|P(t)}表示满足公式P的所有元组t的集合。
在元组表达式中，公式由原子公式组成，原子公式有下列两种形式：
（1）R(s)，其中R是关系名，s是元组变量。其含义是“s是关系R的一个元组”。
（2）s[i]θu[j]，其中s和u是元组变量，θ是算术比较运算符，s[i]和u[j]分别是s的第i个分量和u的第j个分量。原子公式s[i]θu[j]表示“元组s的第i个分量与元组u的第j个分量之间满足θ运算”。例如，“t[2]<u[3]”表示元组t的第2个分量小于元组u的第3个分量。这个原子公式的一种简化形式是s[i]θa或aθu[j]，其中a为常量。例如，“t[4]=3”表示t的第4个分量等于3。
在一个公式中，如果元组变量未用存在量词“”或全称量词“”等符号定义，那么称为自由元组变量，否则称为约束元组变量。公式的递归定义如下。
（1）每个原子是一个公式，其中的元组变量是自由变量。
（2）如果P1和P2是公式，那么，P1、P1∨P2、P1∧P2和P1→P2也是公式。
（3）如果P1是公式，那么(s)(P1)和(s)(P1)也都是公式。
（4）公式中各种运算符的优先级从高到低依次为θ、和、、∧和∨、→。在公式外还可以加括号，以改变上述优先顺序。
（5）公式只能由上述四种形式构成，除此之外构成的都不是公式。
在元组演算的公式中，有下列四个等价的转换规则：
（1）P1∧P2等价于(P1∨P2)。
（2）P1∨P2等价于(P1∧P2)。
（3）(s)(P1(s))等价于(s)(P1(s))；(s)(P1(s))等价于(s)(P1(s))。
（4）P1→P2等价于P1∨P2。
关系代数表达式可以转换为元组表达式，例如，R∪S可用{t|R(t)∨S(t)}表示，R-S可用{t|R(t)∧S(t)} 表示。
5.2.3 规范化理论
开始学习
5.2.3 规范化理论
设有一个关系模式R（SNAME，CNAME，TNAME TADDRESS），其属性分别表示学生姓名、选修的课程名、任课教师姓名和任课教师地址。仔细分析一下，就会发现这个模式存在下列存储异常的问题：
（1）数据冗余：如果某门课程有100个学生选修，那么在R的关系中就要出现100个元组，这门课程的任课教师姓名和地址也随之重复出现100次。
（2）修改异常：由于上述冗余问题，当需要修改这个教师的地址时，就要修改100个元组中的地址值，否则就会出现地址值不一致的现象。
（3）插入异常：如果不知道听课学生名单，这个教师的任课情况和家庭地址就无法进入数据库；否则就要在学生姓名处插入空值。
（4）删除异常：如果某门课程的任课教师要更改，那么原来任课教师的地址将随之丢失。
因此，关系模式R虽然只有四个属性，但却是性能很差的模式。产生这些异常的原因与关系模式属性值之间的联系直接有关。在模式R中，学生与课程有直接联系，教师与课程有直接联系，而教师与学生无直接联系，这就产生了模式R的存储异常。如果将R分解成下列两个关系模式：R1（SNAME，CNAME）和R2（CNAME，TNAME，TADDRESS），则能消除上述的存储异常现象。
1. 函数依赖与键
函数依赖是数据库的一种约束，决定了关系模式属于哪种范式。设R(U)是属性U上的一个关系模式，X和Y是U的子集，r为R的任一关系，如果对于r中的任意两个元组u，v，只要有u[X]=v[X]，就有u[Y]=v[Y]，则称X函数决定Y，或称Y函数依赖于X，记作X→Y。例如，记录职工信息的属性有职工号（EMP_NO）、职工姓名（EMP_NMAE）和所在部门（DEPT），则EMP_NO函数决定EMP_NMAE和DEPT，或者说EMP_NMAE和DEPT函数依赖于EMP_NO，记作EMP_NO→EMP_NMAE和EMP_NO→DEPT。
在R(U)中，如果X→Y，并且对于X的任何一个真子集X′，都有X′→Y不成立，则称Y对X完全函数依赖。若X→Y，但Y不完全函数依赖于X，则称Y对X部分函数依赖；在R(U)中，如果X→Y（Y不是X的真子集），且Y→X不成立，Y→Z，则称Z对X传递函数依赖。
关系模式的键也称为码或关键字。在关系模式中，如果有X→U在关系模式R(U)上成立，并且不存在X的任一真子集X′使X′→U成立，那么称X是R的一个候选键。也就是说，X值唯一决定关系中的所有元组。在关系模式中，用户正在使用的候选键称为主键。如果两个关系拥有公共属性（集），且公共属性在一个关系中是主键，则称公共属性是另一个关系的外键。例如，记录职工信息的属性有职工号（EMP_NO）、职工身份证号（EMP_CARDID）、职工姓名（EMP_NMAE）、职工性别（EMP_SEX）和所在部门编号（DEPT_NO）。则在此关系中，EMP_NO或EMP_CARDID是候选键，也可以是本关系的主键。一个关系的候选键有多个，但主键只能有一个。通常在候选键中选一个作为主键。
求关系模式的候选键是进行范式界定的基础，也是系统分析师应该掌握的基本技能。使用候选键的定义来求解一个简单关系模式的候选键尚能应对，但面对复杂一些的关系模式，这种方法就不管用了。在此，引入一种求候选键的快捷方法，即图示法。使用图示法求候选键，主要有两个步骤：
（1）将关系模式的函数依赖关系，用有向图的方式表示，其中顶点表示属性，弧表示属性之间的依赖关系。
（2）找出入度为0的属性集，并以该属性集为起点，尝试遍历有向图，若能正常遍历图中所有结点，则该属性集即为关系模式的候选键；若入度为0的属性集不能遍历图中所有结点，则需要尝试性的将一些中间顶点（既有入度，也有出度的顶点）并到入度为0的属性集中，直至该集合能遍历所有顶点，则该集合为候选键。
例如，给定关系R(A1，A2，A3，A4)上的函数依赖集F={A1→A2，A3→A2，A2→A3，A2→A4}，现在要求R的候选键。需要针对函数依赖集画出有向图，如图5-2所示。

http://www.educity.cn/article_images/2014-01-15/c7c27982-1f99-43f5-a66a-85aea0ce4da5.jpg
从图5-2中找出入度为0的顶点，即A1。通过尝试，可以发现从A1出发可以遍历所有顶点，因此，R的候选键为A1。
2. 范式
为了设计一个好的数据库，人们定义了一些好的关系模式标准，称它们为规范的关系模式或范式（Normal Form，NF)。目前共定义了多个范式，分别为1NF、2NF、3NF、BCNF、4NF和5NF。但在实际应用中，一般只要达到3NF。
（1）第一范式（1NF）。在关系模式R中，当且仅当所有属性只包含原子值，即每个分量都是不可再分的数据项，则称R满足1NF。例如，表5-4所示的教师职称情况关系就不满足1NF。原因在于，该关系模式中的“高级职称人数”不是一个原子属性，若将其拆分为“教授”和“副教授”两个属性，则就满足1NF。

http://www.educity.cn/article_images/2014-01-15/82c60413-cf11-4016-97c6-fbac08704102.jpg
（2）第二范式（2NF）。满足1NF的关系模式会有许多重复值，修改数据可能会引起疏漏。为了消除这种数据冗余和避免更新数据的遗漏，需要使用更加规范的2NF。当且仅当关系模式R满足1NF，且每个非键属性（即不属于任何候选键的属性，也称为非主属性）完全依赖于候选键时，则称R满足2NF。例如，有选课关系模式SC(Sno，Cno，Grade，Credit)，其中，(Sno，Cno)→Grade，Cno→Credit。因此，SC的候选键为(Sno，Cno)。这样，“Cno→Credit”就构成了Credit对候选键(Sno，Cno)的部分函数依赖。因此，SC不满足2NF。若要将SC转化为2NF，可以将它拆分为SC1(Sno，Cno，Grade)和SC2(Cno，Credit)。
（3）第三范式（3NF）。当且仅当关系模式R满足1NF，且R中没有非键属性传递依赖于候选键时，则称R满足3NF。例如，学生关系S（Sno，Sname，Dno，Dname，Location）各属性分别代表学号、姓名、所在系、系名称和系地址，其数据如表5-5所示。

http://www.educity.cn/article_images/2014-01-15/28897918-972b-4e03-8fb9-b41d4bd58dff.jpg
从各属性之间的联系可以判断出S的函数依赖有Sno→(Sname，Dno，Dname，Location)，Dno→(Dname，Location)。显然，Sno为候选键。在函数依赖中有Sno→Dno→Dname与Sno→Dno→Location，这便是传递函数依赖。由于Dname与Location为非键属性，同时传递依赖于候选键，因此，关系模式S不满足3NF。若要使S满足3NF，需要将其拆分为S1(Sno，Sname，Dno)和S2(Dno，Dname，Location)。
（4）BCNF。如果关系模式R满足1NF，且R中没有属性传递依赖于候选键时，则称R满足BCNF。例如，有关系模式P(C，S，T，R)，其函数依赖集F={C→T，ST→R，TR→C}，现在需要判断P是否满足BCNF。先画出相应的函数依赖图，如图5-3所示。

http://www.educity.cn/article_images/2014-01-15/4cc468da-5679-45b2-ac20-47c7c058ee8f.jpg
对图5-3进行分析，可以得知，P的候选键有(S，T)和(S，C)，键属性（属于某个候选键的属性，也称为主属性）有S、T和C，非键属性只有R。但此时由于属性之间的联系错综复杂，要界定关系模式是否存在传递函数依赖并不容易。为了准确地界定某关系模式是否为BCNF，需要引入另外的一些判别方法。例如，一个BCNF的关系模式必须同时满足以下条件：所有非键属性对每个候选键都是完全函数依赖，所有的键属性对每个不包含它的候选键，也是完全函数依赖的；没有任何属性完全函数依赖于非键属性，即每个函数依赖的左部都必须包含候选键。在关系模式P中，由于有C→T，而C不包含候选键，因此，P不满足BCNF。
（5）第四范式（4NF）。第四范式是BC范式的推广，是针对有多值依赖的关系模型所定义的规范化形式。关系模式R(U，F)满则1NF，X、Y是Ｕ的非空子集，Z=U-X-Y也非空，若任取一组值对(x，z)，都可决定一组y值，且此决定与z值无关，就称Y多值依赖于X，记做X→→Y。关系模式R满足1NF，若对任一多值依赖X→→Y，X必包含R的候选键，称R满足4NF。例如，表5-6表示关系QY(ypm，bm，sccj)。

http://www.educity.cn/article_images/2014-01-15/9c8a0923-a489-470b-b8a6-81cd2ea9b65f.jpg
表5-6是实际工作中常见的登记表，抛开是否规范不说，这样的登记表一目了然。但从规范化的角度来看，对ypm的一个值，不论sccj取什么值，总有一组确定的bm与之对应，所以有ypm→→bm。同样，有ypm→→sccj。QY是全码关系（即所有的属性合在一起，形成候选键），这说明QY不满足4NF。可用分解法消除不满足4NF的多值依赖，解决办法是将QY分解为QY1(ypm，bm)和QY2(ypm，sccj)。
3. 关系模式分解
如果某关系模式存在存储异常等问题，则可通过分解该关系模式来解决问题。将一个关系模式分解成几个子关系模式，需要考虑的是该分解是否保持函数依赖，是否是无损联接。
无损联接分解的形式定义如下：设R是一个关系模式，F是R上的一个函数依赖集。R分解成数据库模式δ={R1，…，RK}。如果对R中每个满足F的关系r 都有下式成立：

http://www.educity.cn/article_images/2014-01-15/d886a3bb-d96f-4e29-9fc7-4cda3904134c.jpg
5.3 数据库访问接口
开始学习
5.3 数据库访问接口
数据库访问接口是指应用程序与数据库之间的连接部分。数据库访问接口的发展，对于数据库技术的发展与应用起到了非常重要的作用，它使应用程序与数据库之间的连接变得简单，使应用系统从一种数据库变换成另外一种数据库时的修改工作量大大降低。常见的数据库访问接口有专用调用、ODBC（Open DataBase Connectivity，开放数据库互连）和JDBC（Java DataBase Connectivity，Java数据库连接）等。
1. 专用调用
数据库技术发展的初期，每种DBMS产生的数据库文件格式都不一样，操作方式也各有差异，通常有自己的一套数据操作语法，并为应用程序提供了该数据库系统所独有的API（Application Programming Interface，应用程序编程接口）。这种方式的数据库访问接口被称为专用调用。
专用调用接口的优点是执行效率高，由于是专用，编程实现较简单。但对程序员而言，专用调用并不是一件好事情。因为这使得程序员在程序中连接数据库时变得非常困难，对每一种数据库进行编程，就必须对该数据库的底层API有相当程度的了解。这意味着需要同时了解多种数据库的底层API，还不能混淆。
2. 开放数据库互连
ODBC是Micorosoft公司开放服务结构（Windows Open Services Architecture，WOSA）中有关数据库的一个组成部分，它建立了一组规范，并提供了一组对数据库访问的标准API。这些API利用SQL（Structured Query Language，结构化查询语言）来完成其大部分任务。ODBC本身也提供了对SQL的支持，用户可以直接将SQL语句送给ODBC。
一个基于ODBC的应用程序对数据库的操作不依赖任何DBMS，不直接与DBMS打交道，所有的数据库操作由对应的DBMS的ODBC驱动程序完成。也就是说，不论是SQL Server和Oracle等大型数据库，还是Access等桌面型数据库，均可用ODBC API进行访问。在实际应用中，首先用ODBC管理器注册一个数据源，管理器根据数据源提供的数据库位置、数据库类型和ODBC驱动程序等信息，建立起ODBC与具体数据库的联系；然后，在应用程序中向ODBC提供数据源名，就能建立起与相应数据库的连接。
ODBC的最大优点是能以统一的方式处理所有的数据库，其缺点也是非常明显的，主要体现在以下三个方面：
（1）ODBC只支持关系型数据，像电子邮件之类的非关系型数据是不能支持的。
（2）由于ODBC最初的设计理念就是能够访问所有类型数据库，这种普遍适用也造成了ODBC对每种数据库的支持都不是特别理想。
（3）使用ODBC需要进行一些系统的配置工作。当然，这个操作也是可以用程序来完成。
3. Java数据库连接
Java数据库连接（Java DataBase Connectivity，JDBC）的作用与ODBC是类似的，只不过JDBC只能用在Java程序设计语言中。JDBC是一种用于执行SQL语句的Java API，可以为多种关系数据库提供统一访问，它由一组用Java语言编写的类和接口组成。 将Java语言和JDBC结合起来，程序员不必为不同的平台编写不同的应用程序，只须写一遍程序，就可以让它在任何平台上运行，这也是Java语言“编写一次，处处运行”的优势。
ODBC与JDBC都基于 X/Open SQL的，JDBC构建于ODBC之上，它保留了ODBC的基本设计特征，同时针对Java语言加以改进，所以能与Java开发进行很好的配合，而且保障了熟悉ODBC的程序员可以快速的掌握JDBC。
此外，ODBC将简单和高级功能混在一起，而且即使对于简单的查询，其选项也极为复杂。相反，JDBC尽量保证简单功能的简便性，而同时在必要时允许使用高级功能。启用纯Java机制，则需要使用JDBC。如果使用ODBC，就必须手动地将ODBC驱动程序管理器和驱动程序安装在每台客户机上；如果完全用Java编写JDBC驱动程序，则JDBC代码在所有Java平台上都可以自动安装和移植，并保证安全性。
5.4 数据库的控制功能
要想使数据库中的数据达到应用的要求，必须对其进行各种控制，这就是DBMS的控制功能，包括并发控制、性能优化、数据完整性和安全性，以及数据备份与恢复等问题。这些技术虽然给人们的感觉是边缘性技术，但对DBMS的应用而言，却是至关重要的。
5.4.0 内容介绍
开始学习
要想使数据库中的数据达到应用的要求，必须对其进行各种控制，这就是DBMS的控制功能，包括并发控制、性能优化、数据完整性和安全性，以及数据备份与恢复等问题。这些技术虽然给人们的感觉是边缘性技术，但对DBMS的应用而言，却是至关重要的。
5.4.1 并发控制
开始学习
5.4.1 并发控制
在多用户共享系统中，许多事务可能同时对同一数据进行操作，称为并发操作。此时，DBMS的并发控制子系统负责协调并发事务的执行，保证数据库的完整性不受破坏，同时，避免用户得到不正确的数据。
1. 事务的基本概念
DBMS运行的基本工作单位是事务，事务是用户定义的一个数据库操作序列，这些操作序列要么全做，要么全不做，是一个不可分割的工作单位。事务具有以下特性：
（1）原子性（Atomicity）。事务是数据库的逻辑工作单位，事务的原子性保证事务包含的一组更新操作是原子不可分的，也就是说，这些操作是一个整体，不能部分的完成。
（2）一致性（Consistency）。一致性是指使数据库从一个一致性状态变到另一个一致性状态。例如，在转账的操作中，各账户金额必须平衡。一致性与原子性是密切相关的，一致性在逻辑上不是独立的，它由事务的隔离性来表示。
（3）隔离性（Isolation）。隔离性是指一个事务的执行不能被其他事务干扰，即一个事务内部的操作及使用的数据对并发的其他事务是隔离的，并发执行的各个事务之间不能互相干扰。它要求即使有多个事务并发执行，但看上去每个事务按串行调度执行一样。这一性质也称为可串行性，也就是说，系统允许的任何交错操作调度等价于一个串行调度。
（4）持久性（Durability）。持久性也称为永久性，是指事务一旦提交，改变就是永久性的，无论发生何种故障，都不应该对其有任何影响。
事务的原子性、一致性、隔离性和持久性通常统称为ACID特性。
2. 数据不一致问题
数据库的并发操作会带来一些数据不一致问题，例如，丢失修改、读“脏数据”和不可重复读等。
（1）丢失修改。事务A与事务B从数据库中读入同一数据并修改，事务B的提交结果破坏了事务A提交的结果，导致事务A的修改被丢失。例如，有T1、T2两个事务，其执行顺序如表5-7所示。则“③A=A-5，写回”操作会被“A=A-8，写回”操作覆盖掉，“③A=A-5，写回”将不能起到任何作用。

http://www.educity.cn/article_images/2014-01-15/d16f582f-5540-4cff-858e-f328d5f9a4fd.jpg
（2）读“脏数据”。事务A修改某一数据，并将其写回磁盘，事务B读取同一数据后，事务A由于某种原因被撤消，这时事务A已修改过的数据恢复原值，事务B读到的数据就与数据库中的数据不一致，是不正确的数据，称为“脏数据”。例如，有T1、T2两个事务，其执行顺序如表5-8所示。则T2中“读A=70”就是读的脏数据。

http://www.educity.cn/article_images/2014-01-15/dd20d47a-b5bb-47c5-ae6c-9c3017290c88.jpg
（3）不可重复读。不可重复读是指事务A读取数据后，事务B执行了更新操作，事务A使用的仍是更新前的值，造成了数据不一致性。例如，有T1、T2两个事务，其执行顺序如表5-9所示。

http://www.educity.cn/article_images/2014-01-15/eeb7781a-9444-4ae2-99c6-cda169787f0d.jpg
在表5-9中，T1事务为了确保某重要计算无误，所以采用了验算的方式，两次独立取出数据并运算，最后进行验算（即比较两次运算结果是否相同）。在此处，虽然两次计算都没错，但由于在两次操作之间的时间间隔中，T2对数据进行了修改，导致验算结果不正确，这就是不可重复读问题。
3. 封锁协议
处理并发控制的主要方法是采用封锁技术，主要有两种封锁，分别是X封锁和S封锁。
（1）排他型封锁（X封锁）。如果事务T对数据对象A（可以是数据项、元组和数据集，以至整个数据库）实现了X封锁，那么只允许事务T读取和修改数据A，其他事务要等事务T解除X封锁以后，才能对数据A实现任何类型的封锁。可见，X封锁只允许一个事务独锁某个数据，具有排他性。
（2）共享型封锁（S封锁）。X封锁只允许一个事务独锁和使用数据，要求太严。需要适当从宽，例如，可以允许并发读，但不允许修改，这就产生了S封锁的概念。S封锁的含义是，如果事务T对数据A实现了S封锁，那么允许事务T读取数据A，但不能修改数据A，在所有S封锁解除之前，决不允许任何事务对数据A实现X封锁。
在多个事务并发执行的系统中，主要采取封锁协议来进行处理，常见的封锁协议如下：
（1）一级封锁协议。事务T在修改数据R之前必须先对其加X锁，直到事务结束才释放。一级封锁协议可防止丢失修改，并保证事务T是可恢复的，但不能保证可重复读和不读“脏数据”。
（2）二级封锁协议。一级封锁协议加上事务T在读取数据R之前先对其加S锁，读完后即可释放S锁。二级封锁协议可防止丢失修改，还可防止读“脏数据”，但不能保证可重复读。
（3）三级封锁协议。一级封锁协议加上事务T在读取数据R之前先对其加S锁，直到事务结束才释放。三级封锁协议可防止丢失修改、读“脏数据”，且能保证可重复读。
（4）两段锁协议。所有事务必须分两个阶段对数据项加锁和解锁。其中扩展阶段是在对任何数据进行读、写操作之前，首先要申请并获得对该数据的封锁；收缩阶段是在释放一个封锁之后，事务不能再申请和获得任何其他封锁。若并发执行的所有事务均遵守两段封锁协议，则对这些事务的任何并发调度策略都是可串行化的。遵守两段封锁协议的事务可能发生死锁。
显然，使用封锁技术来解决并发控制问题，存在一个封锁粒度问题。所谓封锁粒度，是指被封锁数据对象的大小，在关系数据库中封锁粒度有属性值、属性值集、元组、关系、某索引项（或整个索引）、整个关系数据库、物理页（块）等几种。封锁粒度小则并发性高，但开销大；封锁粒度大则并发性低但开销小，综合平衡照顾不同需求，以合理选取适当的封锁粒度是很重要的。
4. 死锁问题
采用封锁的方法虽然可以有效防止数据的不一致性，但封锁本身也会产生一些麻烦，最主要就是死锁问题。死锁是指多个用户申请不同封锁，由于申请者均拥有一部分封锁权，而又需等待另外用户拥有的部分封锁而引起的永无休止的等待。数据库系统中的死锁与操作系统中的死锁是类似的，在此不再展开讨论，请参考3.2.3节。
5.4.2 数据库性能优化
开始学习
5.4.2 数据库性能优化
数据库是企业IT基础设施的核心部件之一，它并不是一个孤立的系统，而是与网络、操作系统和存储等系统有着紧密的关联。要在某个应用系统中使用数据库技术，是一件非常容易的事情，但要将数据库与应用系统之间的配合性能调整到最佳状态，却不是一件容易的事情，这是一个系统工程。
通常，对一个集中式数据库的性能进行优化，可以从硬件升级、数据库设计、检索策略和查询优化等方面入手。有关分布式数据库的性能优化问题，将在5.6.3节中讨论。
1. 硬件升级
要提升数据库的运行速度，最直接的方式就是硬件升级，涉及的硬件包括处理器、内存、磁盘子系统和网络。
处理器的升级主要可以考虑用更高频率的处理器代替现有频率较低的处理器，也可以将单处理器的计算机系统升级为多处理器系统。
内存的升级主要是容量的扩充，当容量扩充以后，数据库服务器可以将更多的数据保存在缓冲区，以减少磁盘I/O操作，从而提升数据库的整体性能。
磁盘子系统的性能提升主要体现在两个方面，第一，采用高速磁盘系统替代速度较低的磁盘系统，以减少读盘等待时间，提高响应速度；第二，合理分布磁盘I/O到多个设备上，以减少资源竞争，提高并行操作能力。
网络方面主要是对带宽的升级。
2. 数据库设计
在数据库设计阶段，就可以着手考虑性能优化问题。对数据库进行设计优化，主要可以从逻辑设计和物理设计两个方面入手。
根据5.2.3节的介绍，数据库的规范化程度越高，数据库中的冗余信息就越少。然而，同时又有新的问题引入，规范化使得关系模式不断被拆解，这样关系模式之间的结构变得越来越复杂，在使用数据时频繁执行连接操作，而连接操作是最耗时间的，是数据库性能的制约因素。因此，从某种程度上来说，非规范化（反规范化）可以改善系统的性能。在进行数据库设计时，可以考虑合理增加冗余属性，以提升系统性能，常用的措施如下：
（1）将常用的计算属性（例如，总计和最大值等）存储到数据库实体中。
（2）重新定义实体，以减少外部属性数据或行数据的开支。
（3）将关系进行水平或垂直分割，以提升并行访问度。
数据库逻辑结构的设计固然重要，但物理设计也不可忽视，将数据放在不同的物理位置，有时能对性能提升起到非常关键的作用。例如，可以遵循以下准则：
（1）与每个属性相关的数据类型应该反映数据所需的最小存储空间，特别是对于被索引的属性更是如此。例如，能使用smallint类型就不要用integer类型，这样，索引字段可以被更快地读取，而且可以在一个数据页上放置更多的数据行，相应地减少了I/O操作。
（2）将一个频繁使用的大关系分割开，并放在两个单独的智能型磁盘控制器的数据库设备上，这样也可以提高性能。因为有多个磁头在查找，数据分离也能提高性能。
（3）将数据库中文本或图像属性的数据存放在一个单独的物理设备上，也可以提高性能。如果使用专用的智能型控制器，就能进一步提高性能。
3. 索引优化策略
索引是提高数据库查询速度的利器，而数据库查询往往又是数据库系统中最频繁的操作，因此，索引的建立与选择对数据库性能优化具有意义重大。索引的建立与选择可遵循以下准则：
（1）建立索引时，应选用经常作为查询，而不常更新的属性。避免对一个经常被更新的属性建立索引，因为这样会严重影响性能。
（2）一个关系上的索引过多会影响UPDATE、INSERT和DELETE的性能，因为关系一旦进行更新，所有的索引都必须做相应的调整。
（3）尽量分析出每个重要查询的使用频度，这样，可以找出使用最多的索引，然后可以先对这些索引进行适当的优化。
（4）对于数据量非常小的关系不必建立索引，因为对于小关系而言，关系扫描往往更快，而且消耗的系统资源更少。
4. 查询优化
查询优化也称为应用程序优化，它是数据库性能优化的最后一个环节，同时，也是最重要的一个环节。查询语句的构造不当，可以使之前的优化功亏一篑。SQL语句优化的策略很多，例如，建立物化视图或尽可能减少多表查询；以不相干子查询替代相干子查询；只检索需要的属性；用带IN的条件子句等价替换OR子句；经常提交（COMMIT），以尽早释放锁等。
5.4.3 数据库的完整性
开始学习
5.4.3 数据库的完整性
数据库的完整性是指数据库中数据的正确性和相容性。数据库完整性由各种各样的完整性约束来保证，完整性约束可以通过DBMS或应用程序来实现，基于DBMS的完整性约束作为关系模式的一部分存入数据库中。
1. 完整性约束条件
保证数据完整性的方法之一是设置完整性检查，即对数据库中的数据设置一些约束条件，这是数据的语义体现。完整性约束条件是指对数据库中数据本身的某些语法或语义限制、数据之间的逻辑约束，以及数据变化时应遵守的规则等。所有这些约束条件一般均以谓词逻辑形式表示，即以具有真假值的原子公式和命题连接词（并且、或者、否定）所组成的逻辑公式表示。完整性约束条件的作用对象可以是关系、元组或属性三种。数据的完整性约束条件一般在关系模式中给出，并在运行时做检查，当不满足条件时立即向用户通报，以便采取措施。
数据库中数据的语法、语义限制与数据之间的逻辑约束称为静态约束，它反映了数据及其之间的固有逻辑特性，是最重要的一类完整性约束。静态约束包括静态属性级约束（对数据类型的约束、对数据格式的约束、对取值范围或取值集合的约束、对空值的约束、其他约束）、静态元组约束和静态关系约束（实体完整性约束、参照完整性约束、函数依赖约束、统计约束）。
数据库中的数据变化应遵守的规则称为数据动态约束，它反映了数据库状态变迁的约束。动态约束包括动态属性级约束（修改属性定义时的约束、修改属性值时的约束）、动态元组约束和动态关系约束。
完整性控制机制应该具有定义功能和检查功能，定义功能提供定义完整性约束条件的机制，检查功能检查用户发出的操作请求是否违背了完整性约束条件。如果发现用户的操作请求违背了约束条件，则采取一定的动作来保证数据的完整性。
2. 实体完整性
实体完整性要求主键中的任一属性不能为空，所谓空值是“不知道”或“无意义”的值。之所以要保证实体完整性，主要是因为在关系中，每个元组的区分是依据主键值的不同，若主键值取空值，则不能标明该元组的存在。例如，对于学生关系S(Sno，Sname，Ssex)，其主键为Sno，在插入某个元组时，就必须要求Sno不能为空。更加严格的DBMS，则还要求Sno不能与已经存在的某个元组的Sno相同。
3. 参照完整性
若基本关系R中含有与另一基本关系S的主键PK相对应的属性组FK（FK称为R的外键），则参照完整性要求，对R中的每个元组在FK上的值必须是S中某个元组的PK值，或者为空值。参照完整性的合理性在于，R中的外键只能对S中的主键引用，不能是S中主键没有的值。例如，对于学生关系S(Sno，Sname，Ssex)和选课关系C(Sno，Cno，Grade)两个关系，C中的Sno是外键，它是S的主键，若C中出现了某个S中没有的Sno，即某个学生还没有注册，却已有了选课记录，这显然是不合理的。
在实际应用中，对于参照完整性，需要明确外键能否接受空值的问题，以及在被参照关系中删除元组的问题。针对不同的应用，可以有不同的删除方式：
（1）级联删除。将参照关系中所有外键值与被参照关系中要删除元组主键值相同的元组一起删除。如果参照关系同时又是另一个关系的被参照关系，则这种删除操作会继续级联下去。
（2）受限删除。这是一般DBMS默认的删除方式。仅当参照关系中没有任何元组的外键值与被参照关系中要删除元组的主键值相同时，系统才可以执行删除操作，否则拒绝执行删除操作。
（3）置空删除。删除被参照关系的元组，并将参照关系中相应元组的外键值置为空值。
同样，还需要考虑在参照关系中插入元组的问题，一般可以采用以下两种方式：
（1）受限插入。仅当被参照关系中存在相应的元组时，其主键值与参照关系插入元组的外键值相同时，系统才执行插入操作，否则拒绝此操作。
（2）递归插入。首先向被参照关系中插入相应的元组，其主键值等于参照关系插入元组的外键值，然后向参照关系插入元组。
4. 用户定义的完整性
实体完整性和参照完整性适用于任何关系型DBMS。除此之外，不同的数据库系统根据其应用环境的不同，往往还需要一些特殊的约束条件。用户定义的完整性就是针对某一具体数据库的约束条件，反映某一具体应用所涉及的数据必须满足的语义要求。
如果在一条语句执行完后立即检查，则称立即执行约束；如果在整个事务执行结束后再进行检查，则称延迟执行约束。完整性规则的五元组表示为（D，O，A，C，P），其中D表示约束作用的数据对象，O表示触发完整性检查的数据库操作，A表示数据对象必须满足的断言或语义约束，C表示选择A作用的数据对象值的谓词，P表示违反完整性规则时触发的过程。
5. 触发器
触发器是在关系型DBMS中应用得比较多的一种完整性保护措施，其功能比完整性约束要强得多。一般而言，在完整性约束功能中，当系统检查出数据中有违反完整性约束条件时，则仅给出必要提示以通知用户，仅此而已。而触发器的功能则不仅起到提示作用，还会引起系统自动进行某些操作，以消除违反完整性约束条件所引起的负面影响。
所谓触发器，其抽象的含义即是一个事件的发生必然触发（或导致）另外一些事件的发生，其中前面的事件称为触发事件，后面的事件称为结果事件。触发事件一般即为完整性约束条件的否定，而结果事件即为一组操作用以消除触发事件所引起的不良影响。目前，数据库中事件一般表示为数据的插入、修改、删除等操作。触发器除了有完整性保护功能外，还有安全性保护功能。
5.4.4 数据库的安全性
开始学习
5.4.4 数据库的安全性
就整个信息系统的安全而言，数据的安全是最重要的。数据库系统的安全性在技术上依赖于两种方式，一种是DBMS本身提供的用户身份识别、视图、使用权限控制和审计等管理措施，大型DBMS均有此功能；另一种就是靠应用程序来实现对数据库访问进行控制和管理，也就是说，数据的安全控制由应用程序里面的代码来实现。目前，一些大型DBMS都提供了一些技术手段来保证数据的安全，如表5-10所示。

http://www.educity.cn/article_images/2014-01-15/73c4ca9a-1fd5-4c60-8399-8a766cd69ef1.jpg
措施说明
用户标识和鉴别最外层的安全保护措施，可以使用用户帐户、口令和随机数检验等方式
存取控制（数据授权）对用户进行授权，包括操作类型（例如，查找、更新或删除等）和数据对象的权限
密码存储和传输对远程终端信息用密码传输
视图的保护通过视图的方式进行授权
审计使用一个专用文件或数据库，自动将用户对数据库的所有操作记录下来
本节主要介绍用户标识、数据授权、视图和审计等措施，有关密码存储和传输措施的实施，将在18.2.1中详细介绍。
1. 用户标识和鉴别
用户的身份认证是用户使用DBMS系统的第一个环节，是系统提供的最外层保护。进行用户标识和鉴别的常用方式有口令认证和强身份认证。
（1）口令认证。口令认证是一种身份认证的基本形式，用户在建立与DBMS的访问连接前，必须提供正确的用户账号和口令，DBMS与自身保存的用户列表中的用户标识和口令比较，如果匹配则认证成功，允许用户使用数据库系统；如果不匹配，则返回拒绝信息，这种认证判断过程往往是数据库登录的第一步。
（2）强身份认证。在网络环境下，客户端到DBMS服务器可能经过多个环节，在身份认证期间，用户的信息和口令可能会经过很多不安全的节点（例如，路由器和服务器），而被信息的窃听者窃取。强身份认证过程使认证可以结合信息安全领域一些更深入的技术保障措施，来强化用户身份的鉴别，例如，可以与数字证书、智能卡和用户指纹识别等多种身份识别技术相结合。有关这些技术的详细知识，将在18.2.2节中介绍。
2. 数据授权
当用户通过身份认证以后，并不是所有的用户都能操作所有的数据，要分不同的用户角色来区别对待，例如，普通用户只能查看自己的个人信息，而DBA则可以查看所有用户的信息。要达到这一效果，需要对不同用户角色进行不同级别的数据授权。
一般可以将权限角色分为三类，分别是数据库登录权限类、资源管理权限类和DBA权限类。有了数据库登录权限的用户才能进入DBMS，才能使用DBMS所提供的各类工具和实用程序。同时，数据对象的创建者（owner）可以授予这类用户以数据查询、建立视图等权限。这类用户只能查阅部分数据库信息，不能改动数据库中的任何数据；具有资源管理权限的用户，除了拥有数据库登录权限类的用户权限外，还有创建数据库表、索引等数据对象的管理权限，可以在权限允许的范围内修改和查询数据库，还能将自己拥有的权限授予其他用户，可以申请审计等；具有DBA权限的用户将具有数据库管理的全部权限，由于拥有非常大的权限，所以只有极少数用户属于这种角色。
当然，不同的DBMS可能对用户角色的定义不尽相同，权限划分的细致程度也远超过上面三种基本的类型。同一类功能操作权限的用户，对数据库中的数据对象管理和使用的范围又可能是不同的，因此，DBMS除了要提供基于功能角色的操作权限控制外，还提供了对数据对象的访问控制，访问控制可以根据对控制用户访问数据对象的范围（或称粒度）从大到小分为四个层次，分别是数据库级、关系级、元组级和属性级。
3. 视图
视图可以被看成是虚拟关系或存储查询，可通过视图访问的数据不作为独特的对象存储在数据库内，数据库内存储的是SELECT语句。SELECT语句的结果集构成视图所返回的虚拟关系。用户可以用引用关系时所使用的方法，在SQL语句中通过引用视图名称来使用虚拟关系。使用视图可以实现下列功能：
（1）将用户限定在关系中的特定元组上。例如，只允许雇员看见工作跟踪表内记录其工作的行。
（2）将用户限定在特定属性上。例如，对于那些不负责处理工资单的雇员，只允许他们看见雇员表中的姓名、工作电话和部门属性，而不能看见任何包含工资信息或个人信息的属性。
（3）将多个关系中的属性连接起来，使它们看起来像一个关系。
（4）聚合信息而非提供详细信息。例如，显示一个属性的和，或属性的最大值和最小值等。
4. 审计与跟踪
如果身份认证是一种事前的防范措施，审计则是一种事后监督的手段。跟踪也是DBMS提供的监视用户动作的功能，然而，审计和跟踪是两个不同的概念，主要是两者的目的不同。跟踪主要是满足系统调试的需要，捕捉到的用户行为记录往往只用于分析，而并不长久地保存，而审计作为一种安全检查的措施，会将系统的运行状况和用户访问数据库的行为记录以日志保存下来，这种日志往往作为一种稽查用户行为的一种证据。
根据审计对象的区分，有两种方式的审计，即用户审计和系统审计。用户审计时，DBMS的审计系统记下所有对关系（或视图）进行访问的企图（包括成功的和不成功的）及每次操作的用户名、时间和操作代码等信息。这些信息一般都被记录在操作系统或DBMS的日志文件中，利用这些信息可以对用户进行审计分析；系统审计由DBA进行，其审计内容主要是系统一级命令和数据对象的使用情况。
5.4.5 备份与恢复技术
开始学习
5.4.5 备份与恢复技术
5.4.4节详细介绍了保证数据库安全性的技术和措施，但不管用多么高明的手段，总是难以避免安全事故的产生。安全事故的产生有可能是人为因素，也可能是由于硬件设备的故障，甚至是自然灾难。因此，需要备份与恢复技术来进一步保障数据的安全，即当数据被破坏后，在一定时间内将数据库调整到被破坏前的状态。
数据库备份有多种分类方式。按备份的实现方式，可分为物理备份与逻辑备份，而物理备份又可以分为冷备份与热备份；按备份数据量情况，可分为完全备份、增量备份与差异备份。其中，完全备份是指将整个数据库中的数据进行备份，增量备份是指备份上一次备份（包括完全备份、增量备份和差异备份）后发生变化的数据，差异备份是指备份上一次完全备份后发生变化的所有数据。由于备份方式存在多样性，因此，制订一个合适的可操作的备份和恢复策略至关重要，其基本原则是保证数据丢失得尽量少或完全不丢失，且备份和恢复时间尽量短，保证系统最大的可用性。
1. 物理备份
物理备份是在操作系统层面上对数据库的数据文件进行备份，可分为冷备份和热备份两种。冷备份也称为静态备份，是将数据库正常关闭，在停止状态下，将数据库的文件全部备份（复制）下来。当数据库发生故障时，将数据文件复制回来进行恢复。冷备份是数据库备份中最快和最安全的方法；热备份也称为动态备份，是利用备份软件，在数据库正常运行的状态下，将数据库中的数据文件备份出来。冷备份与热备份的优缺点如表5-11所示。

http://www.educity.cn/article_images/2014-01-15/fa3af7ac-f206-4a9c-9a13-1015f3d6f0bc.jpg
为了提高物理备份的效率，通常将完全、增量和差异三种备份方式相组合。一般来说，一个备份周期通常由一个完全备份和多个增量、差异备份组成。由于增量或差异备份导出的数据少，所需要的时间也较少。
2. 逻辑备份
逻辑备份是指利用DBMS自带的工具软件备份和恢复数据库的内容，例如，Oracle的导出工具为exp，导入工具为imp，可以按照表、表空间、用户和全库四个层次备份和恢复数据；Sybase的全库备份命令是dump database，全库恢复命令是load database，还可利用BCP命令来备份和恢复指定表。
在数据库容量不大的情况下，逻辑备份是一个非常有效的手段，既简单又方便，但现在随着数据量的越来越大，甚至上TB，利用逻辑备份来恢复数据库已力不从心，速度很慢。针对大型数据库的备份和恢复，一般结合磁带库或光盘库，采用物理备份方式。
3. 日志文件
事务日志是针对数据库改变所做的记录，它可以记录针对数据库的任何操作，并将记录结果保存在独立的文件中。这种文件就称为日志文件。对于任何一个事务，事务日志都有非常全面的记录，根据这些记录可以将数据文件恢复成事务前的状态。从事务动作开始，事务日志就处于记录状态，事务执行过程中对数据库的任何操作都记录在内，直到用户提交或回滚后才结束记录。
日志文件是用来记录对数据库每一次更新活动的文件，在热备份方式中，必须建立日志文件，后援副本和日志文件综合起来才能有效地恢复数据库；在冷备份方式中，也可以建立日志文件，当数据库毁坏后，可重新装入后援副本，将数据库恢复到备份结束时刻的正确状态，然后利用日志文件，将已完成的事务进行重做处理，对故障发生时尚未完成的事务进行撤销处理。这样，不必重新运行那些已完成的事务程序就可将数据库恢复到故障前某一时刻的正确状态。例如，在热备份期间的某时刻t1，系统将数据A=100备份到了磁带上，而在时刻t2，某一事务对A进行了修改使A=200。备份结束，后备副本上的A已是过时的数据了。为此，必须将备份期间各事务对数据库的修改活动登记下来，建立日志文件。这样，后备副本加上日志文件就能将数据库恢复到某一时刻的正确状态。
事务在运行过程中，系统将事务开始、事务结束（包括COMMIT和ROLLBACK），以及对数据库的插入、删除和修改等每个操作作为一个登记记录存放到日志文件中。每个记录包括的主要内容有执行操作的事务标识、操作类型、更新前数据的旧值（对插入操作而言此项为空值）、更新后的新值（对删除操作而言此项为空值）。登记的次序严格按并行事务操作执行的时间次序，同时遵循“先写日志文件”的规则。写一个修改到数据库中和写一个表示这个修改的日志记录到日志文件中是两个不同的操作，有可能在这两个操作之间发生故障，即这两个写操作只完成了一个，如果先写了数据库修改，而在日志记录中没有登记这个修改，则以后就无法恢复这个修改了。因此，为了安全，应该先写日志文件，即首先将修改记录写到日志文件上，然后再写数据库的修改。
4. 数据恢复
将数据库从错误状态恢复到某一个已知的正确状态的功能，称为数据库的恢复。数据恢复的基本原理就是冗余，建立冗余的方法有数据备份和登录日志文件等。可根据故障的不同类型，采用不同的恢复策略。
（1）事务故障的恢复。事务故障的恢复是由系统自动完成的，对用户是透明的（不需要DBA的参与）。其步骤如下：反向扫描日志文件，查找该事务的更新操作；对该事务的更新操作执行逆操作；继续反向扫描日志文件，查找该事务的其他更新操作，并做同样处理；如此处理下去，直至读到此事务的开始标记，事务故障恢复完成。
（2）系统故障的恢复。系统故障的恢复在系统重新启动时自动完成，不需要用户干预。其步骤如下：正向扫描日志文件，找出在故障发生前已经提交的事务，将其事务标识记入重做（Redo）队列。同时找出故障发生时尚未完成的事务，将其事务标识记入撤销（Undo）队列；对撤销队列中的各个事务进行撤销处理：反向扫描日志文件，对每个Undo事务的更新操作执行逆操作；对重做队列中的各个事务进行重做处理：正向扫描日志文件，对每个Redo事务重新执行日志文件登记的操作。
（3）介质故障与病毒破坏的恢复。介质故障与病毒破坏的恢复步骤如下：装入最新的数据库后备副本，使数据库恢复到最近一次备份时的一致性状态；从故障点开始反向扫描日志文件，找出已提交事务标识并记入Redo队列；从起始点开始正向扫描日志文件，根据Redo队列中的记录，重做已完成的任务，将数据库恢复至故障前某一时刻的一致状态。
（4）有检查点的恢复技术。检查点记录的内容可包括建立检查点时刻所有正在执行的事务清单，以及这些事务最近一个日志记录的地址。采用检查点的恢复步骤如下：从重新开始文件中找到最后一个检查点记录在日志文件中的地址，由该地址在日志文件中找到最后一个检查点记录；由该检查点记录得到检查点建立时所有正在执行的事务清单队列（A）；建立重做队列（R）和撤销队列（U），将A队列放入U队列中，R队列为空；从检查点开始正向扫描日志文件，若有新开始的事务T1，则将T1放入U队列。若有提交的事务T2，则将T2从U队列移到R队列。直至日志文件结束；对U队列的每个事务执行Undo操作，对R队列的每个事务执行Redo操作。
5.4.6 数据中心的建设
开始学习
5.4.6 数据中心的建设
如果只是将数据备份在同一个地点，即使备份再及时，也可能面临不可恢复的风险。例如，2008年5月12日14时28分，我国四川省汶川县发生里氏8.0级大地震，造成了数万人死亡，无数的房屋化为灰烬。在这种情况下，即使进行了安全保障和数据备份，也可能使数据完全丢失，因为在地震的瞬间，可以将业务数据连同备份的数据，包括一切设备同时毁坏。在这种情况下，就需要数据中心了，数据中心可以实现异地备份。在异地备份的架构中，一个数据中心被损毁，其他数据中心有完整的数据保存，可以保证数据不丢失。
为了达到异地备份的效果，数据中心的选址一般会选一个国家内地理位置相对较远的地点，或是选择不同国家作为数据中心，例如，伊拉克由于长年战事，很多大的公司将数据中心设在美国、英国或德国等地。实际上，数据中心的功能，不仅限于异地备份。数据中心形式的数据库建设为用户构建了统一的集中运行平台，建立开放式多层架构体系，优化整合现有设备资源。这样，便于实施系统资源的统一管理和维护，提高了硬件设备的利用率，也提高了系统的可扩展能力，从而降低各类应用系统的建设成本。以信息数据库为核心的数据中心建设，可从以下几个方面着手：
（1）构建专用存储系统，集中存储数据。采用网络存储技术，构建专用、大容量存储系统，通过区域划分，满足各类数据的集中存储，保证存储系统的灵活性和可扩展性。有关网络存储技术的详细知识，将在6.2.4节中介绍。
（2）构建统一的数据库集中运行平台，提高数据处理能力。按照“运行可靠、性能优良、满足应用”的要求，建设计算机集群系统，采用并行运行和互为备份的集群技术，保证计算机高效和不间断运行。同时，通过分区技术，在计算机上构建不同应用数据库的运行区域，满足不同应用数据库系统的运行需要，使各类应用数据库既集中又相对独立地运行，以降低不同数据库之间的相互影响，提高数据库处理能力。有关计算机集群技术的详细知识，将在19.6节中介绍。
（3）建立多种系统应用平台，提高集中运行平台的适应性。按照各类应用系统所需的不同系统运行环境，建立与之相适应的多种系统运行平台，提供UNIX、Windows 或Linux平台上应用服务和Web浏览等应用。通过共享统一的存储系统，建立主流数据库运行平台，提供数据库服务，为有关部门的不同应用系统提供相应的运行环境。
（4）整合优化现有计算机设备资源，提高集中管理和应用的水平。根据系统建设的整体框架要求，按照数据集中整合和应用的需要，对用户现有计算机设备资源进行调整，纳入统一、集中运行管理框架中。同时，按照设备集中管理的要求，在数据中心计算机房建成后，将用户各类服务器及相关设备集中起来，根据不同应用的要求进行整合优化，实行统一的运行与管理。
（5）扩展数据备份系统，提高系统可靠性。数据中心的数据是企业极其宝贵的重要资源，必须做到安全上的万无一失，且各类应用系统要求7×24小时不间断运行，要求有多层面的系统可靠性保障，所有层面要建立相应的容错机制，确保设备发生故障或升级维护时系统服务不中断；设备自身必须具备容错能力，尽可能在设备一级就能屏蔽大多数故障。此外，构建存储系统的“快照”复制和磁带备份系统，包含专业的数据备份系统、备份管理策略与手段，通过在现有备份系统基础上进行扩展，实现数据的快速备份和统一的常规备份，以及高效的数据恢复，使集中运行平台具备高效、全面备份数据的能力，保证数据的安全可靠。有关容错机制的详细知识，将在19.4节和19.5节中介绍。
（6）建立集中运行管理机制，实现设备和系统资源的统一管理。按照信息系统和数据集中运行的要求，建立设备和系统的集中运行管理机制，实现对集中设备和系统的性能监控、配置优化和维护服务的统一运行管理，确保设备和系统的高效、可靠和安全地运行，提高对设备和系统的运行管理水平。
设计一个能高效、安全地运行，设备之间有一定冗余，应用之间共享资源的数据中心，是一项复杂的任务，其中涉及到数据库服务器、存储系统、负载均衡系统和应用服务器等的设计工作。在数据中心的设计中，需要遵循实用性与先进性、高性能与高负载能力、安全性与可靠性、灵活性与可扩展性、开放性与标准化、经济性与保护投资、集中运行与逐步过渡等原则。数据中心建设的一个核心任务就是容灾，有关容灾技术的详细知识，将在18.6节中介绍。
5.5 数据库设计与建模
要想使数据库中的数据达到应用的要求，必须对其进行各种控制，这就是DBMS的控制功能，包括并发控制、性能优化、数据完整性和安全性，以及数据备份与恢复等问题。这些技术虽然给人们的感觉是边缘性技术，但对DBMS的应用而言，却是至关重要的。
5.5.0 内容介绍
开始学习
要想使数据库中的数据达到应用的要求，必须对其进行各种控制，这就是DBMS的控制功能，包括并发控制、性能优化、数据完整性和安全性，以及数据备份与恢复等问题。这些技术虽然给人们的感觉是边缘性技术，但对DBMS的应用而言，却是至关重要的。
5.5.1 数据库设计阶段
开始学习
5.5.1 数据库设计阶段
基于数据库系统生命周期的数据库设计可分为五个阶段，分别是规划、需求分析、概念设计、逻辑设计和物理设计。
1. 规划
规划阶段的主要任务是进行建立数据库的必要性及可行性分析，确定数据库系统在企业和信息系统中的地位，以及各个数据库之间的联系。有关系统规划方面的知识，将在第9章中详细介绍。
2. 需求分析
需求分析的目标是通过调查研究，了解用户的数据和处理要求，并按一定格式整理形成需求说明书。需求说明书包括数据库所涉及的数据、数据的特征、使用频率和数据量的估计，例如，数据名、属性及其类型、主键属性、保密要求、完整性约束条件、更改要求、使用频率和数据量估计等。这些关于数据的数据称为元数据。在设计大型数据库时，这些数据通常由数据字典来管理。用数据字典管理元数据，有利于避免数据的重复或重名，以保持数据的一致性。同时，有利于提高数据库设计的质量，减轻设计者的负担。有关需求分析的知识，将在第11章中详细介绍。
3. 概念设计
概念设计也称为概念结构设计，其任务是在需求分析阶段产生的需求说明书的基础上，按照特定的方法将它们抽象为一个不依赖于任何DBMS的数据模型，即概念模型。概念模型使设计人员的注意力能够从复杂的实现细节中解脱出来，而只集中在最重要的数据的组织结构和处理模式上。为保证所设计的概念模型能正确、完全地反映用户的数据及其相互关系，便于进行所要求的各种处理，在本阶段设计中，可邀请用户参与。
在进行概念设计时，可先设计各个应用的视图，即各个应用所看到的数据及其结构，然后再进行视图集成，以形成一个单一的概念数据模型。有关概念模型的详细知识，将在5.5.2节中介绍。
4. 逻辑设计
逻辑设计也称为逻辑结构设计，其任务是将概念模型转化为某个特定的DBMS上的逻辑模型。设计逻辑结构时，首先为概念模型选定一个合适的逻辑模型（例如，关系模型、网状模型或层次模型），然后将其转化为特定DBMS支持的逻辑模型，最后对逻辑模型进行优化。
逻辑设计的目的是将概念设计阶段设计好的E-R图转换为与选用的具体机器上的DBMS所支持的数据模型相符合的逻辑结构。有关转换的过程和规则，将在5.5.2节中介绍。
5. 物理设计
物理设计也称为物理结构设计，其任务是对给定的逻辑模型选取一个最适合应用环境的物理结构，所谓数据库的物理结构，主要是指数据库在物理设备上的存储结构和存取方法。物理设计的步骤如下：
（1）设计存储记录结构，包括记录的组成、数据项的类型和长度，以及逻辑记录到存储记录的映射。
（2）确定数据存储安排。
（3）设计访问方法，为存储在物理设备上的数据提供存储和检索的能力。
（4）进行完整性和安全性的分析与设计。
（5）数据库程序设计。
5.5.2 实体联系模型
开始学习
5.5.2 实体联系模型
E-R模型也称为E-R图，它是描述概念世界，建立概念模型的实用工具。在E-R图中，主要包括以下三个要素：
（1）实体（型）。实体用矩形框表示，框内标注实体名称。
（2）属性。单值属性用椭圆形表示，并用连线与实体连接起来。如果是多值属性，在椭圆形外面再套实线椭圆；如果是派生属性，则用虚线椭圆表示。其中，多值属性可以有一个或者两个以上的值，例如，学员信息数据库中可能包含关于他们个人兴趣的数据，一个学员可能有运动、电影、投资和烹调等多个兴趣；派生属性是从基本属性计算出来的属性，例如，学员的总成绩和平均成绩等。
（3）实体之间的联系。实体之间的联系用菱形框表示，框内标注联系名称，并用连线将菱形框分别与有关实体相连，并在连线上注明联系类型。
例如，图5-4就是某在线教育平台系统的一个E-R图（为了简单起见，省略了部分实体的属性和联系的属性）。

http://www.educity.cn/article_images/2014-01-15/04e0b23c-8f9f-4aaf-a14c-ba326ce754f5.jpg
1. 联系的类型
E-R图中的联系可以归结为三种类型，分别是一对一联系、一对多联系和多对多联系。
（1）一对一联系（1:1）。设A、B为两个实体集，若A中的每个实体至多和B中的一个实体有联系，反过来，B中的每个实体至多和A中的一个实体有联系，则称A对B或B对A是1:1联系。要注意的是，1:1联系不一定都是一一对应的关系，可能存在着无对应。例如，在图5-4中，一个班只有一个班主任，一个辅导老师不能同时兼任两个班的班主任，由于辅导老师紧缺，某个班的班主任也可能暂缺。
（2）一对多联系（1:n）。如果实体集A中的每个实体可以和B中的几个实体有联系，而B中的每个实体至少和A中的一个实体有联系，则A对B属于1:n联系。例如，在图5-4中，一个班级有多个学员，而一个学员只能编排在一个班级，班级与学员之间的关系属于一对多的联系。
（3）多对多联系（m:n）。若实体集A中的每个实体可与B中的多个实体有联系，反过来，B中的每个实体也可以与A中的多个实体有联系，则称A对B或B对A是m:n联系。例如，在图5-4中，一个学员可以选修多门课程，一门课程由多个学员选修，学员和课程之间存在多对多的联系。
2. E-R图的集成
在数据库的概念设计过程中，先设计各子系统的局部E-R图，其设计过程是，首先，确定局部视图的范围；然后，识别实体及其标识，确定实体之间的联系；最后，分配实体及联系的属性。各子系统的局部E-R图设计好后，下一步就是要将所有的分E-R图综合成一个系统的总体E-R图，一般称为视图的集成。视图集成通常有两种方式，一种方式是多个局部E-R图一次集成，这种方式比较复杂，做起来难度较大；另一种方式是逐步集成，用累加的方式一次集成两个局部E-R图。这种方式每次只集成两个局部E-R图，可以降低复杂度。
由于各子系统应用所面临的问题不同，且通常是由不同的设计人员进行局部视图设计，这就导致各个局部E-R图之间必定会存在许多不一致的问题，称之为冲突。因此，在合并E-R图时，不能简单地将各个局部E-R图画到一起，而是必须着力消除各个局部E-R图中的不一致，以形成一个能为全系统中所有用户共同理解和接受的统一的概念模型。各局部E-R图之间的冲突主要有三类，分别是属性冲突、命名冲突和结构冲突。
（1）属性冲突。属性冲突包括属性域冲突和属性取值冲突。属性冲突理论上好解决，只要换成相同的属性就可以了，但实际上需要各部门协商，解决起来并不简单。
（2）命名冲突。命名冲突包括同名异义和异名同义。处理命名冲突通常也像处理属性冲突一样，通过讨论和协商等行政手段加以解。
（3）结构冲突。结构冲突包括同一对象在不同应用中具有不同的抽象，以及同一实体在不同局部E-R图中所包含的属性个数和属性排列次序不完全相同。对于前者的解决办法是将属性变换为实体或实体变换为属性，使同一对象具有相同的抽象。对于后者的解决办法是使该实体的属性取各局部E-R图中属性的并集，再适当调整属性的次序。
另外，实体间的联系在不同的局部E-R图中可能为不同的类型，其解决方法是根据应用的语义对实体联系的类型进行综合或调整。在初步的E-R图中，可能存在一些冗余的数据和实体间冗余的联系。冗余数据和冗余联系容易破坏数据库的完整性，给数据库维护增加困难，应当予以消除。消除冗余的主要方法为分析方法，即以数据字典和数据流图为依据，根据数据字典中关于数据项之间逻辑关系的说明来消除冗余。有关数据字典和数据流图的详细知识，将在11.4节中介绍。
3. E-R图向关系模式的转换
E-R图向关系模式的转换属于数据库的逻辑设计阶段的工作，该阶段需要将E-R模型转换为某种DBMS能处理的关系模式，具体转换规则如下：
（1）一个实体转换为一个关系模式，实体的属性就是关系的属性，实体的主键就是关系的主键。
（2）一个1:1联系可以转换为一个独立的关系模式，也可以与任意一端对应的关系模式合并。如果转换为一个独立的模式，则与该联系相连的各实体的主键和联系本身的属性均转换为关系的属性，每个实体的主键均是该关系的键属性；如果与某一端实体对应的关系模式合并，则需要在该关系模式的属性中加入另一个关系模式的主键和联系本身的属性。
（3）一个1:n联系可以转换为一个独立的关系模式，也可以与任意n端对应的关系模式合并。如果转换为一个独立的模式，则与该联系相连的各实体的主键和联系本身的属性均转换为关系的属性，而关系的主键为n端实体的主键；如果与n端实体对应的关系模式合并，则需要在该关系模式的属性中加入1端关系模式的主键和联系本身的属性。
（4）一个m:n联系转换为一个独立的关系模式，与该联系相连的各实体的主键以及联系本身的属性均转换为关系的属性，而关系的主键为各实体主键的组合。
（5）三个以上实体间的一个多元联系可以转换为一个独立的关系模式，与该联系相连的各实体的主键和联系本身的属性均转换为关系的属性，而关系的主键为各实体主键的组合。
另外，还有四种情况是需要特别注意的：
（1）多值属性的处理。如果E-R图中某实体具有一个多值属性，则应该进行优化，把该属性提升为一个实体，通常称为弱实体；或者在转化为关系模式时，将实体的主键与多值属性单独构成一个关系模式。
（2）BLOB型属性的处理。典型的BLOB是一张图片或一个声音文件，由于它们的容量比较大，必须使用特殊的方式来处理。处理BLOB的主要思想就是让文件处理器（例如，数据库管理器）不去理会文件是什么，而是关心如何去处理它。因此，从优化的角度考虑，应采用的设计方案是将BLOB属性与关系的主键独立为一个关系模式。
（3）派生属性的处理。因为派生属性可由其他属性计算得到，因此，在转化成关系模式时，通常不转换派生属性。
（4）在面向对象模型中，本节的关系模式就对应类，关系模式的属性就对应类的属性。
5.6 分布式数据库系统
分布式数据库系统是数据库技术与网络技术相结合的产物，其基本思想是将传统的集中式数据库中的数据分布于网络上的多台计算机中。分布式数据库系统通常使用较小的计算机系统，每台计算机可单独放在一个地方，每台计算机中都有DBMS的一份完整拷贝副本，并具有自己局部的数据库，位于不同地点的许多计算机通过网络互相连接，共同组成一个完整的、全局的大型数据库。
5.6.0 内容介绍
已学习
分布式数据库系统是数据库技术与网络技术相结合的产物，其基本思想是将传统的集中式数据库中的数据分布于网络上的多台计算机中。分布式数据库系统通常使用较小的计算机系统，每台计算机可单独放在一个地方，每台计算机中都有DBMS的一份完整拷贝副本，并具有自己局部的数据库，位于不同地点的许多计算机通过网络互相连接，共同组成一个完整的、全局的大型数据库。
5.6.1 分布式数据库概述
已学习
5.6.1 分布式数据库概述
分布式数据库是由一组数据组成的，这组数据分布在计算机网络的不同计算机上，网络中的每个节点具有独立处理的能力（称为场地自治），它可以执行局部应用，同时，每个节点也能通过网络通信子系统执行全局应用。分布式数据库系统是在集中式数据库系统技术的基础上发展起来的，具有如下特点：
（1）数据独立性。在分布式数据库系统中，数据独立性这一特性更加重要，并具有更多的内容。除了数据的逻辑独立性与物理独立性外，还有数据分布独立性（分布透明性）。
（2）集中与自治共享结合的控制结构。各局部的DBMS可以独立地管理局部数据库，具有自治的功能。同时，系统又设有集中控制机制，协调各局部DBMS的工作，执行全局应用。
（3）适当增加数据冗余度。在不同的场地存储同一数据的多个副本，这样，可以提高系统的可靠性和可用性，同时也能提高系统性能。
（4）全局的一致性、可串行性和可恢复性。
1. 分布式数据库的体系结构
分布式数据库的体系结构如图5-5所示。在分布式数据库中，局部DBMS中的内模式与概念模式与集中数据库是完全一致的，不同之处在于新增的全局DBMS，而整个全局DBMS，可以看作是相对于局部概念模式的外模式。由于外模式部分有一系列的分布模式、分片模式、全局概念模式和全局外模式，以及多级映射使得用户在使用分布式数据库时，可以用集中式数据库同样的方式来应用。

http://www.educity.cn/article_images/2014-01-15/8838a4c1-ad6e-441a-b965-f1663fcb1a6f.jpg
（1）全局外模式。全局外模式是全局应用的用户视图，是全局概念模式的子集，该层直接与用户（或应用程序）交互。
（2）全局概念模式。全局概念模式定义分布式数据库中数据的整体逻辑结构，数据就如同根本没有分布一样，可用传统的集中式数据库中所采用的方法进行定义。全局概念模式中所用的数据模型应该易于向其他层次的模式映射，通常采用关系模型。
（3）分片模式。在某些情况下，需要将一个关系模式分解成为几个数据片，分片模式正是用于完成此项工作的。有关数据分片的详细知识，将在5.6.2节中介绍。
（4）分布模式。分布式数据库的本质特性就是数据分布在不同的物理位置。分布模式的主要职责是定义数据片段（即分片模式的处理结果）的存放节点。分布模式的映射类型确定了分布式数据库是冗余的还是非冗余的。若映射是一对多的，即一个片段分配到多个节点上存放，则是冗余的分布式数据库，否则是不冗余的分布式数据库。根据分布模式提供的信息，一个全局查询可分解为若干子查询，每个子查询要访问的数据属于同一场地的局部数据库。由分布模式到各局部数据库的映射（图5-5中的映射4）将存储在局部场地的全局关系（或全局关系的片段）映射为各局部概念模式，采用局部场地的DBMS所支持的数据模型。
（5）局部概念模式。局部概念模式是局部数据库的概念模式。
（6）局部内模式。局部内模式是局部数据库的内模式。
虽然从理论上来说，分布式数据库的模式结构有图5-5的六个层次，但实际上，并非所有分布式数据库都具有这种结构。
2. 分布式数据库的优点
分布式数据库的物理层面分布、逻辑层面统一的特色，让它具有一些集中式数据库所不可及的优势：
（1）分布式数据库可以解决企业部门分散而数据需要相互联系的问题。例如，就银行系统而言，总行与各分行处于不同的城市或城市中的各个地区，在业务上它们需要处理各自的数据，也需要彼此之间的交换和处理，这就需要分布式数据库系统。
（2）如果企业需要增加新的相对自主的部门来扩充机构，则分布式数据库系统可以在对当前机构影响最小的情况下进行扩充。
（3）分布式数据库可以满足均衡负载的需要。数据的分片使局部应用达到最大，这使得各服务器之间的相互干扰降到最低。负载在各服务器之间分担，可以避免临界瓶颈。
（4）当企业已存在几个数据库系统，而且实现全局应用的必要性增加时，就可以由这些数据库自下而上构成分布式数据库系统。
（5）相等规模的分布式数据库系统在出现故障的概率上不会比集中式数据库系统低，但由于其故障的影响仅限于局部数据应用，因此，就整个系统来说，它的可靠性是比较高的。
5.6.2 数据分片
开始学习
5.6.2 数据分片
数据分片将数据库整体逻辑结构分解为合适的逻辑单位（片段），然后由分布模式来定义片段及其副本在各场地的物理分布，其主要目的是提高访问的局部性，有利于按照用户的需求，组织数据的分布和控制数据的冗余度。
1. 数据分片的分类
分片的方式有多种，水平分片和垂直分片是两种基本的分片方式，混合分片和导出分片是较复杂的分片方式。
（1）水平分片。水平分片将一个全局关系中的元组分裂成多个子集，每个子集为一个片段。分片条件由关系中的属性值表示。对于水平分片，重构全局关系可通过关系的并操作实现。
（2）垂直分片。垂直分片将一个全局关系按属性分裂成多个子集，应满足不相交性（关键字除外）。对于垂直分片，重构全局关系可通过连接运算实现。
（3）导出分片。导出分片又称为导出水平分片，即水平分片的条件不是本关系属性的条件，而是其他关系属性的条件。
（4）混合分片。混合分片是在分片中采用水平分片和垂直分片两种形式的混合。
2. 数据分片的原则
不管采用哪种分片方式，数据分片都应遵循如下准则：
（1）完整性。全局关系的所有数据都必须分配到各个片段中，不允许某些数据属于全局关系但不属于任何片段。
（2）重构性。各个片段可以重构原来的全局关系。
（3）不相交性。全局关系中的每个元组仅属于一个片段，不能在多个片段中重复出现。此规则不是必须的，因为在有冗余的分布式数据库系统中数据可有多个副本。但片段中的部分元组重复将会使数据的更新操作变得复杂，为简化操作控制，片段之间一般是不相交的。
3. 分布透明性
分布透明性是指用户不必关心数据的逻辑分片，不必关心数据存储的物理位置分配细节，也不必关心局部场地上数据库的数据模型。分布透明性包括分片透明性、位置透明性和局部数据模型透明性。
（1）分片透明性。分片透明性是分布透明性的最高层次，它是指用户或应用程序只对全局关系进行操作而不必考虑数据的分片。当分片模式改变时，只要改变全局模式到分片模式的映射（图5-5中的映射2），而不影响全局模式和应用程序。全局模式不变，应用程序不必改写。
（2）位置透明性。位置透明性是指用户或应用程序应当了解分片情况，但不必了解片段的存储场地。当存储场地改变时，只要改变分片模式到分配模式的映射（图5-5中的映射3），而不影响应用程序。同时，若片段的重复副本数目改变了，数据的冗余改变了，但用户不必关心如何保持各副本的一致性，这也提供了重复副本的透明性。
（3）局部数据模型透明性。局部数据模型透明性是指用户或应用程序应当了解分片及各片断存储的场地，但不必了解局部场地上使用的是何种数据模型。模型的转换和语言的转换均由图5-5中的映射4来完成。
5.6.3 分布式数据库查询优化
开始学习
5.6.3 分布式数据库查询优化
分布式数据库在结构上与集中式数据库存在一定的差异，所以两者在查询优化方面各有侧重。集中式数据库优化主要考虑的是CPU代价和I/O代价，而分布式数据库还需要考虑通信代价。由于相对于CPU处理速度与I/O处理速度而言，通信的效率是最低的，因此，通信代价的降低是分布式数据库查询优化的关键。
在分布式数据库系统中，从查询涉及的数据和查询处理过程中的通信模式来划分，可以分为局部查询、远程查询和全局查询三种类型。局部查询是指用户查询所涉及的数据均在本地数据库中。对于这类查询，可以使用集中式查询处理技术进行优化；远程查询是指用户查询只涉及网络中单个场地的数据。对于这类查询也可以使用集中式的查询处理技术进行优化。但同时需要注意，数据有可能在网络中的多个位置存在副本，这样就存在副本选择的问题，通常，选择距查询应用场地最近的副本；全局查询是指用户查询涉及多个场地的数据，因此，查询处理和优化技术要复杂得多。具体方法有全局查询树的变换、副本的选择与多副本的更新策略、查询树的分解、半连接与直接连接等。
1. 全局查询树的变换
为了提高执行效率，可对全局查询树进行下述变换：
（1）用片段替换查询树中的全局关系。
（2）尽可能将选择和投影等一元操作推向查询树的叶端。
（3）合并公共子表达式。
（4）消除空关系和冗余度。
（5）移去无用的垂直叶片。
例如，某在线教育平台系统使用的是分布式数据库，其中学员关系S按学历分成两个片段，S1和S2分别表示男生和女生关系模式，选课关系SC按课程号Cno分成两个片段，SC1和SC2分别表示成绩>=60分的记录与成绩<60的成绩记录。现在需要查询至少有一门功课上80分的男生姓名，则代数关系表达式为：

http://www.educity.cn/article_images/2014-01-15/20e6da1f-6b5e-416d-be68-b5cc2312ab4f.jpg
图5-6的查询树未考虑数据分片及分布问题，若考虑该问题，则可将全局查询树进行细化，如图5-7所示。

http://www.educity.cn/article_images/2014-01-15/a207a19c-ddbc-44da-bfbd-1f99785c07fc.jpg
从全局查询树可以看出，该代数关系表达式的常规执行方式是，先将各个数据分片进行拼合，然后进行笛卡尔积操作，最后进行选择与投影操作。但这样操作效率是非常低的，首先，数据分片S2与SC2是最终的结果不需要的数据集，完全可以一开始就将其删减；其次，在有连接操作的查询中，可以考虑将选择与投影提前，这样，可以使连接操作中的数据量大大减少，提高连接速度。经变换的查询树如图5-8所示。

http://www.educity.cn/article_images/2014-01-15/64661c12-4099-49da-9a1b-081580073167.jpg
2. 副本的选择与多副本的更新策略
为了提高访问的局部性和系统的可用性，关系和片段常常可设置多个副本，分布于不同的节点。这样，在查询处理时，就存在副本选择的问题。选择副本的原则如下：
（1）尽可能提高访问的局部性，减少远距离访问。
（2）尽可能减少通信开销，尤其要减少大量数据的传送。
（3）适当考虑节点负载的平衡。
如果副本较多，副本选择的方案可能就很多，副本选择就成为—个复杂的问题。一般先用启发式规则选择几个优选方案，再通过代价比较，从中选择一种。多副本虽然可以提高访问的局部性和系统的可靠性，但在更新时，必须维持多副本的一致性。为此，一般可采取下列策略：
（1）在事务提交前更新全部副本。使用这一策略时，如有多个副本，只要其中有一个副本不能更新，则事务就要失败。
（2）立即更新所有有效节点的副本，失效节点的副本留待修复后更新。这种策略的可用性要高于第一种策略。
（3）主副本法。指定一个副本为主副本，执行更新操作时，事务提交前仅更新主副本，所有副本在事务提交后根据主副本广播的内容进行更新。主副本与其他副本之间可能有暂时的不一致。如果读主副本，不会发生问题；如果读其他副本，就可能读到不一致的数据。为此，可以让每个副本附一个版本号，如果副本的版本号与主副本的版本号一致，就可以读取数据。反之，如果副本的版本号与主副本的版本号不一致，可以改为读主副本或等待副本更新后再读。
（4）快照法。快照是指数据在某一时刻的状态，它不随数据库中数据的更新而即时更新。在快照法中，数据只有一个副本，但有许多快照分布在有关的节点上。在读数据时，可以读副本也可以读快照，由用户指定。更新数据时，仅更新副本，快照不随之立即更新。快照可以周期性地更新或用更新命令强制更新。从快照读得的数据可能与副本不一致，但这在某些情况是允许的，甚至是要求的。例如，在统计报表时，总是在表上注明“截止×月×日止”，这就说明表的内容是一个快照。只要应用许可使用快照，用快照代替副本，不但可以提高访问的局部性，还可以省去多副本更新的麻烦。
3. 查询树的分解
查询树分解的一般方法是采用后序遍历法。在遍历过程中，如果遇到的数据（即叶结点）都位于同一结点，则继续遍历，否则遍历失败，取出已经成功遍历的最大子树作为一个子查询树。对剩余的查询树继续遍历，直到所有的叶结点均被成功地遍历为止。子查询的执行由局部DBMS优化。这种查询树有两个特点，一是数据分布在不同的结点上，二是以二元或多元操作为主，特别是分布式连接。由此可见，全局优化的核心问题是执行分布式连接的策略。
4. 半连接与直接连接
有时候，在做连接操作时，并不需要将整个关系（或片段）传送到对方，只要传送连接时与对方匹配的元组就够了。半连接操作可以帮助从关系（或片段）筛选出连接时匹配的元组，减少节点之间的数据传输量和运算量，但也增加了投影操作和选择操作。在实际应用中，是否采用半连接，必须做代价比较。
例如，假设某在线教育平台系统中的S表存储在长沙的局部数据库中，而SC表存在北京的局部数据库中，其中S表中有1万条记录，SC表中有10万条记录。现在需要查找班级号为G100的全班学员相关的成绩信息。结果集要求包含学号、姓名、年龄、性别、身高、体重和成绩。在这种情况下，如果不采用半连接，则可能需要将SC表的10万条记录发送至长沙，然后进行相应的连接操作。这种操作方式将在数据通信上耗费极大的成本，造成查询效率低下。
若采用半连接，则首先在长沙数据库查询班级号为G100的全班学生的学号（不必将姓名、年龄、性别、身高和体重等信息查询出来），将查询结果当成一个数据集（实际上满足条件的，可能只有数十条记录，或上百条记录而已）传送至北京数据库，当数据到达后，与SC表进行连接，连接出来的结果也只有几百条记录而已，然后将这些记录传送至长沙，长沙数据库将结果集再次与本地S表进行连接，产生最终结果。
从上面的举例可以看出，半连接增加了连接的次数，但是极大地降低了需要传输的数据量。因此，半连接操作主要着眼于减少通信开销，一般多用于广域网环境下的分布式DBMS。但对于多元分布式连接，半连接很多，如果逐一检查，则比较繁琐，且增加了系统开销。此外，关系（或片段）经半连接后，再进行连接时将不能利用原来的存取路径。
有些分布式数据库系统用直接连接进行分布式连接，同样能够收到较好的效果，常用的直接连接有嵌套循环法与排序归并法两种，以及全送与按需取数两种数据传送方式。
5.7 数据仓库技术
数据仓库是一个面向主题的、集成的、相对稳定的、反映历史变化的数据集合，用于支持管理决策。近年来，人们对数据仓库技术的关注程度越来越高，其原因是过去的几十年中，建设了无数的应用系统，积累了大量的数据，但这些数据没有得到很好的利用，有时反而成为企业的负担。数据仓库技术正是将这些数据变废为宝的有效手段，图5-9为数据仓库体系结构图。

https://img.ixueyi.net/images/px_vc/2022-06/813/UNpKhXW6Ez.png
图5-9  数据仓库的体系结构
在图5-9中，数据源是数据仓库系统的基础，是整个系统的数据源泉；OLAP（On-Line Analytical Processing，联机分析处理）服务器对分析需要的数据进行有效集成，按多维模型予以组织，以便进行多角度、多层次的分析，并发现趋势；前端工具主要包括各种报表工具、查询工具、数据分析工具和数据挖掘工具，以及各种基于数据仓库或数据集市的应用开发工具。其中数据分析工具主要针对OLAP服务器，报表工具、数据挖掘工具主要针对数据仓库。

5.7.0 内容介绍
开始学习
数据仓库是一个面向主题的、集成的、相对稳定的、反映历史变化的数据集合，用于支持管理决策。近年来，人们对数据仓库技术的关注程度越来越高，其原因是过去的几十年中，建设了无数的应用系统，积累了大量的数据，但这些数据没有得到很好的利用，有时反而成为企业的负担。数据仓库技术正是将这些数据变废为宝的有效手段，图5-9为数据仓库体系结构图。

https://img.ixueyi.net/images/px_vc/2022-06/813/UNpKhXW6Ez.png
图5-9  数据仓库的体系结构
在图5-9中，数据源是数据仓库系统的基础，是整个系统的数据源泉；OLAP（On-Line Analytical Processing，联机分析处理）服务器对分析需要的数据进行有效集成，按多维模型予以组织，以便进行多角度、多层次的分析，并发现趋势；前端工具主要包括各种报表工具、查询工具、数据分析工具和数据挖掘工具，以及各种基于数据仓库或数据集市的应用开发工具。其中数据分析工具主要针对OLAP服务器，报表工具、数据挖掘工具主要针对数据仓库。

5.7.1 联机分析处理
开始学习
5.7.1 联机分析处理
数据处理大致可以分成两大类，分别是联机事务处理（On-Line Transaction Processing，OLTP）和OLAP。OLTP是传统数据库的主要应用，支持基本的、日常的事务处理；OLAP是数据仓库系统的主要应用，支持复杂的分析操作，侧重决策支持，并且提供直观易懂的查询结果。表5-12列出了OLTP与OLAP之间的比较。

http://www.educity.cn/article_images/2014-01-15/6642dd9e-61fc-4a09-b0a9-070e1dfef745.jpg

http://www.educity.cn/article_images/2014-01-15/507f00aa-713d-4b7e-a225-d544002b65bc.jpg
OLTPOLAP
用户操作人员，低层管理人员决策人员，高层管理人员
功能日常操作处理分析决策
DB设计面向应用面向主题
数据当前的、 最新的、细节的、二维的、分立的历史的、聚集的、多维的、集成的、统一的
存取读/写数十条记录读上百万条记录
工作单位简单的事务复杂的查询
用户数多少
DB 大小MB或GB级GB或TB级
从表5-12中可以看出，在OLTP中，数据是以二维表的形式来进行组织的，但在OLAP中，数据通常是多维的。这里的“维”是人们观察客观世界的角度，是一种高层次的类型划分。“维”一般包含着层次关系，这种层次关系有时会相当复杂。通过将一个实体的多项重要的属性定义为多个维，使用户能对不同维上的数据进行比较。因此，OLAP也可以说是多维数据分析工具的集合。
1. 数据立方体
在多维的数据结构中，三维结构（Data Cube，数据立方体）最为直观，如图5-10所示，该立方体中包含了一个连锁超市在各地区不同月份的各种饮料销售情况。

http://www.educity.cn/article_images/2014-01-15/abf1a631-1cf5-4fdb-b74a-d2076268fc54.jpg
通过图5-10可以发现，其实绝大多数的应用，只需要用到立方体的一部分。例如，需要了解长沙地区的饮料销售情况，则只要取立方体的最上面的一片数据即可，若需要了解长沙地区3月份的销售情况，则只要取立方体最上面一层的最右边一列数据即可。这样，就涉及到了数据立方的相应操作。
2. 多维分析
OLAP的基本多维分析操作有钻取、切片和切块、旋转等。
（1）钻取（drill）。钻取是改变维的层次，变换分析的粒度。它包括向上钻取（roll up）和向下钻取（drill down）。向上钻取是在某一维上将低层次的细节数据概括到高层次的汇总数据，或者减少维数，是一种自动生成汇总行的分析方法。通过向导的方式，用户可以定义和分析因素的汇总行。例如，要了解各地区各月份的饮料销售情况，可以生成地区和（或）月份的合计行；而向下钻取则相反，它从汇总数据深入到细节数据进行观察或增加新的维。例如，用户分析各地区的销售情况时，可以对某个城市的销售额细分为各个月份的销售额。通过钻取功能，用户对数据能更深入了解，更容易发现问题，做出正确的决策。
（2）切片和切块（Slice and Dice）。切片和切块是在一部分维上选定值后，关心度量数据在剩余维上的分布。如果剩余的维只有两个，则是切片；如果有三个以上，则是切块。例如，如果需要在图5-10获取按月的销售数据，则属于数据切片，因为数据立方按月份分成了数据片，形成了二维结构。但如果需要获取的是按地区的数据，例如，华东区（包括上海、南京、杭州等），华北区（包括北京、天津等），则属于数据分块，因为得到的数据是三维结构的。
（3）旋转（pivot）是变换维的方向，即重新安排维的放置（例如，行列互换等）。
3. 实现方法
OLAP有多种实现方法，根据存储数据的方式不同，可以分为ROLAP（Relational OLAP，关系型OLAP）、MOLAP（Multidimensional OLAP，多维型OLAP）和HOLAP（Hybrid OLAP，混合型OLAP）。
ROLAP表示基于关系数据库的OLAP实现。以关系数据库为核心，以关系型结构进行多维数据的表示和存储。ROLAP将多维数据库的多维结构划分为两类表，一类是事实表，用来存储数据和维关键字；另一类是维表，即对每个维至少使用一个表来存放维的层次和成员类别等维的描述信息。维表和事实表通过主键和外键联系在一起，形成了“星型模式”。对于层次复杂的维，为避免冗余数据占用过大的存储空间，可以使用多个表来描述，这种星型模式的扩展称为“雪花模式”。
MOLAP表示基于多维数据组织的OLAP实现，以多维数据组织方式为核心。也就是说，MOLAP使用多维数组存储数据。如果是三维数据，则其在存储中将形成数据立方体结构。
HOLAP表示基于混合数据组织的OLAP实现，例如，低层是关系型的，高层是多维型的，这种方式具有更好的灵活性。
5.7.2 数据仓库概述
开始学习
5.7.2 数据仓库概述
企业数据仓库的建设，是以现有企业业务系统和大量业务数据的积累为基础。数据仓库不是静态的概念，只有将信息及时交给需要这些信息的使用者，供他们做出改善其业务经营的决策，信息才能发挥作用。而将信息加以整理归纳和重组，并及时提供给相应的管理决策人员，是数据仓库的根本任务。因此，从产业界的角度看，数据仓库建设是一个工程，是一个过程。
1. ETL过程
数据仓库的真正关键是数据的存储和管理。数据仓库的组织管理方式决定了它有别于传统数据库，同时也决定了其对外部数据的表现形式。要决定采用什么产品和技术来建立数据仓库的核心，则需要从数据仓库的技术特点着手分析。针对现有各业务系统的数据，进行抽取、清理，并有效集成，按照主题进行组织，整个过程可以简称为ETL（Extraction-Transformation-Loading，抽取、转换和加载）过程。ETL负责将分布的、异构数据源中的数据（例如，关系数据、平面数据文件等）抽取到临时中间层后进行清洗、转换和集成，最后加载到数据仓库或数据集市中，成为OLAP和数据挖掘的基础。
相对于关系数据库，数据仓库技术没有严格的数学理论基础，它更面向实际工程应用。所以，从工程应用的角度来考虑，按照物理数据模型的要求加载数据，并对数据进行一系列处理，处理过程与经验直接相关。同时，这部分工作直接关系到数据仓库中数据的质量，从而影响到OLAP和数据挖掘的质量。
数据仓库是一个独立的数据环境，需要通过抽取过程将数据从OLTP环境、外部数据源和脱机的数据存储介质导入到数据仓库中。在技术上，ETL主要涉及到关联、转换、增量、调度和监控等几个方面。数据仓库系统中的数据不要求与OLTP系统中的数据实时同步，因此，ETL可以定时进行。但多个ETL的操作时间、顺序和成败对数据仓库中信息的有效性至关重要。
2. 数据仓库的分类
从结构的角度看，有三种数据仓库模型，分别是企业仓库、数据集市和虚拟仓库。
（1）企业仓库。企业仓库（enterprise warehouse）面向企业级应用，它搜集了企业的各个主题的所有信息，提供全企业范围的数据集成，数据通常来自多个操作型数据库和外部信息提供者，并且是跨多个功能范围的。企业仓库通常包含详细数据和汇总数据，数据量可达TB级。
（2）数据集市。数据集市（datamart）面向企业部门级应用，它包含对特定用户有用的、企业范围数据的一个子集，它的范围限定在选定的主题中。根据数据来源不同，数据集市可以分为两种，分别是独立数据集市（independent datamart）和从属数据集市（dependent datamart）。
从属数据集市的数据直接来自于中央数据仓库，有利于保持数据的一致性，因为来自同一数据源，并且已经经过一致性处理和检验。从属数据集市的作用在于，为一些部门建立数据集市，将需要的数据复制、加工到其中，这样，不仅可以提高部门的访问速度，也能满足部门的一些特殊的分析需求。
独立数据集市的数据直接来自于业务系统，由于为各个部门都建立了各自的数据集市，而当需要从整体上建立数据仓库时，由于各部门的特殊需要不同，不同数据集市中的数据表达也有所不同，将这种不一致的数据整合到一个中心数据仓库时，可能会遇到一些困难，例如，重新设计和各部门协调等。独立数据集市的优点是建立迅速、价格相对低廉。建立独立数据集市的原因往往是由于投资方面的考虑或工期的紧迫，或解决某部门的迫切需要。然而，需要注意的是，在设计其他部门的数据集市或中心数据仓库时，要充分考虑现有数据集市的设计，以避免设计的不一致性而造成后期整合的困难及昂贵的费用。
（3）虚拟仓库。虚拟仓库（virtual warehouse）是操作型数据库上视图的集合。为了有效地处理查询，只有一些可能的汇总视图被物化。虚拟仓库易于建立，但需要操作型数据库服务器具有剩余的工作能力。
3. 非结构化数据与数据仓库
图5-9展示了数据仓库的体系结构，其中第一步便是从多个数据源获取数据。这些数据源不仅仅限于企业内部应用系统数据库。因为对于一个用于决策分析的系统而言，仅有企业内部数据是不够的。合理的采用外部数据（例如，报纸、期刊、电视等媒体的报道，一些商业机构的调查报告）能使分析和决策更为准确。而这些外部数据通常都是非结构化的数据。因此，如何用数据仓库管理非结构化数据，也是数据仓库应用中的一个重要问题。
为了更好地管理非结构化数据，数据仓库采用了元数据（当然，元数据不仅用于此），元数据可用于记录数据的文件标识符、进入数据仓库的日期、文件描述、文件来源、文件来源的日期、文件的分类、索引字、清理日期、物理地址引用、文件长度和相关参考等信息。因此，管理人员可以通过元数据来获得非结构化数据的信息，在许多情况下，管理人员甚至不用看源文件，只要看元数据就行。在清除不相关的或过时的文件中，浏览元数据可为管理人员减少大量的工作。
虽然非结构化数据对分析与决策有着重要意义，但由于存储大量非结构化数据将极大提高数据仓库的成本，所以，并不是所有的非结构化数据都存于数据仓库中。当数据仓库没有足够空间用于非结构化数据存储，或是存储费用过高时，可以将非结构化数据的元数据存储在数据仓库中，在需要使用到该数据时，通过元数据顺利地找到它（这些数据可能存储在文件柜中、缩微胶片、备用磁盘中或磁带上等）。此外，非结构化数据与结构化数据的存储周期也是不同的，结构化数据进入数据仓库后一般都是永久保存，而非结构化数据可能存在时效性，过了时效期，存储的意义就不大了，所以可以考虑清除。
5.7.3 数据仓库的设计方法
开始学习
5.7.3 数据仓库的设计方法
数据仓库的设计方法通常有三种，分别是自顶向下的方法和自底向上的方法，以及两者结合的混合方法。
1. 自顶向下的方法
自顶向下的方法由总体规划和设计开始，通过对原始数据进行抽取、转换和迁移等处理之后，将数据输出至一个集中的数据驻留单元。然后，数据和元数据装载进入数据仓库。这样建立起来的数据仓库是企业级的，当建立好数据仓库以后，各个部门再从数据仓库中获取部门所需要的数据形成数据集市，即从属数据集市。
自顶向下的方法在实际应用中会遇到很多难题，例如：
（1）投资大，因为建立的数据仓库是面向企业的，涉及面广。
（2）应用周期较长，因为项目较大，开发周期相对较长，应用时间也长。
（3）需求难以确定，因为建立数据仓库的主要原因是利用其进行决策分析。这种功能在企业战略的应用范围中通常是很难确定的，数据仓库的应用往往超出企业当前的实际业务范围。
但同时也正因为该方法在开发前就可以给出数据仓库的实现范围，能够清楚地向决策者和企业描述系统的收益情况和实现目标，因此，也有部分企业采用该方法。为了提高自顶向下方法实施的成功率，开发人员应具有丰富的自顶向下的系统开发经验。
2. 自底向上的方法
自底向上的核心思想是从企业中最关键的部门（或功能需求）开始，先以最少的投资，完成当前的需求，获得最快的回报，然后再不断扩充，不断完善。以该方法进行数据仓库的设计，最先产生的是独立数据集市，而后从多个独立数据集市中抽取数据，形成企业级的数据仓库。
自底向上方法的优点在于企业能够以较小的投入，获得较高的数据仓库应用收益。在开发过程中，人员投入较少，也容易获得成效。当然，如果某个项目的开发失败，可能造成企业整个数据仓库系统开发的延迟。该方法一般用于企业希望对数据仓库技术进行评价，以确定该技术的应用方式、地点和时间，或希望了解实现和运行数据仓库所需要的各种费用，或在数据仓库的应用目标并不是很明确时使用。
3. 混合法
自顶向下和自底向上方法的联合使用具有两种方法的优点，既能快速的完成数据仓库的开发与应用，还可建立具有长远价值的数据仓库方案。
5.8 数据挖掘技术
数据挖掘是采用数学的、统计的、人工智能和神经网络等领域的科学方法，从大量数据中挖掘出隐含的、先前未知的、对决策有潜在价值的关系、模式和趋势，并用这些知识和规则建立用于决策支持的模型，为商业智能系统服务的各业务领域提供预测性决策支持的方法、工具和过程。
5.8.0 内容介绍
开始学习
数据挖掘是采用数学的、统计的、人工智能和神经网络等领域的科学方法，从大量数据中挖掘出隐含的、先前未知的、对决策有潜在价值的关系、模式和趋势，并用这些知识和规则建立用于决策支持的模型，为商业智能系统服务的各业务领域提供预测性决策支持的方法、工具和过程。
5.8.1 数据挖掘概述
开始学习
5.8.1 数据挖掘概述
数据挖掘与传统的数据分析（例如，查询、报表、联机应用分析）的本质区别是数据挖掘是在没有明确假设的前提下去挖掘信息、发现知识。数据挖掘所得到的信息应具有先知、有效和可实用三个特征。先前未知的信息是指该信息是预先未曾预料到的，即数据挖掘是要发现那些不能靠直觉发现的信息或知识，甚至是违背直觉的信息或知识，挖掘出的信息越是出乎意料，就可能越有价值。
1. 数据挖掘的体系结构
图5-11为数据挖掘体系结构图，它展示了数据挖掘的流程，说明了数据挖掘是怎样找到新规律的。

http://www.educity.cn/article_images/2014-01-15/0e119cfb-50ae-4c05-b794-4112591d9972.jpg
（1）知识发现系统管理器。控制并管理知识发现过程，录入知识库中的信息用于驱动数据选择过程、抽取算法选择，以及使用过程和发现评价过程。
（2）知识库。知识库包含源于多方面的必需的信息，可以将元数据输入数据仓库中，以描述数据仓库的数据结构，输入关键数据属性、规则和数据层次等。
（3）数据访问接口。知识发现系统利用数据库的查询机制从数据仓库中提取数据，可使用SQL查询语言，结合知识库中的数据仓库元数据，指导从数据仓库中提取需要的数据。
（4）数据选择。确定从数据仓库中需要抽取的数据及其结构。
（5）知识发现引擎。将知识库中的抽取算法提供给抽取的数据，目的是要抽取数据元素间的模式和关系。
（6）发现评价。分析员要寻找关注性的数据模式，选出那些关注性信息。
（7）发现描述。发现描述部分提供两种功能，一种是以发现评价辅助分析员在知识库中保存所发现的信息，以备将来引用和使用；另一种是保持发现与决策者的通信。
2. 数据挖掘的流程
数据挖掘是一个完整的过程，该过程从大型数据库中挖掘先前未知的，有效的，可实用的信息，并使用这些信息做出决策或丰富知识。数据挖掘的流程大致如下：
（1）问题定义。在开始数据挖掘之前最先也是最重要的要求就是熟悉背景知识，弄清用户的需求。缺少背景知识，就不能明确定义要解决的问题，就不能为挖掘准备优质的数据，也很难正确地解释得到的结果。要想充分发挥数据挖掘的价值，必须对目标要有一个清晰明确的定义，即决定到底想干什么。
（2）建立数据挖掘库。要进行数据挖掘必须收集要挖掘的数据资源，一般需要将要挖掘的数据都收集到一个数据库中，而不是采用原有的数据库或数据仓库。这是因为大部分情况下需要修改要挖掘的数据，而且还会遇到采用外部数据的情况；另外，数据挖掘还要对数据进行各种纷繁复杂的统计分析，而数据仓库可能不支持这些数据结构。
（3）分析数据。分析数据是对数据深入调查的过程。从数据集中找出规律和趋势，用聚类分析区分类别，理清多因素相互影响的、十分复杂的关系，发现因素之间的相关性。
（4）调整数据。通过上述步骤的操作，对数据的状态和趋势有了进一步的了解，这时，要尽可能对问题解决的要求能进一步明确化和量化。针对问题的需求对数据进行增删，按照对整个数据挖掘过程的新认识组合或生成一个新的变量，以体现对状态的有效描述。
（5）模型化。在问题进一步明确、数据结构和内容进一步调整的基础上，就可以建立形成知识的模型。这一步是数据挖掘的核心环节，一般运用神经网络、决策树和数理统计等方法来建立模型，有关这些技术与方法的详细知识，将在5.8.2节中介绍。
（6）评价和解释。所得到的模型有可能是没有实际意义或没有实用价值的，也有可能是其不能准确反映数据的真实意义，甚至在某些情况下是与事实相反的。因此，需要评估和确定哪些是有效的、有用的模式。评估的方法既可以是直接使用原先建立的挖掘数据库中的数据来进行检验，也可以另外拿一批数据对其进行检验，还可以在实际运行的环境中取出新数据进行检验。
数据挖掘是一个多种专家合作的过程，也是一个在资金上和技术上高投入的过程。这一过程要反复进行，在反复过程中，不断地趋近事物的本质，不断地优选问题的解决方案。
5.8.2 常用技术与方法
开始学习
5.8.2 常用技术与方法
从技术上来看，数据挖掘就是从大量的、不完全的、有噪声的、模糊的、随机的实际应用数据中，提取隐含在其中的、人们事先不知道的、但又是潜在有用的信息和知识的过程。这个定义包括好几层含义：数据源必须是真实的、大量的、含噪声的；发现的是用户感兴趣的知识；发现的知识要可接受、可理解、可运用；并不要求发现放之四海而皆准的知识，仅支持特定的发现问题。
从商业角度来看，数据挖掘是一种新的商业信息处理技术，其主要特点是对商业数据库中的大量业务数据进行抽取、转换、分析和其他模型化处理，从中提取辅助商业决策的关键性数据。
1. 数据挖掘的常用技术
数据挖掘中的关键技术是进行模式和关系识别的算法，下面介绍几种数据挖掘和知识发现的技术，它们分别从不同的角度进行数据挖掘和知识发现。
（1）决策树方法。决策树方法利用信息论中的互信息（信息增益）寻找数据库中具有最大信息量的属性，建立决策树的一个结点，再根据属性的不同取值建立树的分支。
（2）分类方法。分类方法将数据按照含义划分成组，可用该方法生成感兴趣的侧面，可用于自动发现类，例如，模式识别、侧面生成、线性聚簇和概念聚簇等。
（3）粗糙集（rough set）方法。粗糙集的研究主要基于分类。分类和概念（concept）同义，一种类别对应于一个概念。知识由概念组成，如果某知识中含有不精确概念，则该知识就不精确，粗糙集通过上近似概念和下近似概念来表示不精确概念。
（4）神经网络。神经网络通过学习待分析数据中的模式来构造模型，它可对隐式类型进行分析，适用于对非线性的、复杂的或高噪声的数据进行建模。神经网络技术模拟人脑神经元结构，由神经元互联，或按层组织的结点构成。通常，神经模型由三个层次组成，分别是输入层、中间层和输出层。每个神经元求得输入值，再计算总输入值，由过滤机制（例如，阀值）比较总输入，然后确定它自己的输出值。
（5）关联规则。关联规则是指搜索业务系统中的所有细节和事务，从中找出重复出现概率很高的模式，它以大的事务数据库为基础，其中每个事务都被定义为一系列相关数据项。用关联找出所有能将一组事件（或数据项）与另一组事件（或数据项）联系起来的规则。关联算法的目的是成为SQL的扩充，这种算法可以通过规范的查询技术，应用于受限的关系数据集。
（6）概念树方法。对数据库中记录的属性按归类方式进行抽象，建立起来的层次结构称为概念树。例如，某在线教育平台系统中的“课程”概念树的最下层是具体课程名称（例如，数据结构、系统分析与设计等），它的直接上层是课程类别（例如，软件类、网络类等），课程类别的直接上层是专业类别（例如，计算机科学与技术、通信工程等）。利用概念树提升的方法可以大大浓缩数据库中的记录。对多个属性的概念树进行提升，将得到高度概括的知识基表，然后再将它转换成规则。
（7）遗传算法。遗传算法是模拟生物进化过程的算法，由繁殖、交叉和变异三个基本算子组成。繁殖也称为选择，是从一个旧种群（父代）选出生命力强的个体，产生新种群（后代）的过程；交叉也称为重组，是指选择两个不同个体（染色体）的部分（基因）进行交换，形成新个体；变异也称为突变，是指对某些个体的某些基因进行变异（1变0、0变1）。遗传算法可起到产生优良后代的作用，这些后代需满足适应值，经过若干代的遗传，将得到满足要求的后代（问题的解）。
（8）依赖性分析。依赖性分析是指在数据仓库的条目或对象之间抽取依赖性，它展示了数据之间未知的依赖关系，依赖性是一个带有置信度因子的可能值。可以用依赖性分析方法从某个数据对象的信息来推断另一个数据对象的信息。
（9）公式发现。在工程和科学数据库中，对若干数据项（变量）进行一定的数学运算，求得相应的数学公式。其基本思想是，对数据项进行初等数学运算，形成组合数据项，若它的值为常数项，就得到了组合数据项等于常数的公式。
（10）统计分析方法。在数据库属性之间通常存在两种关系，分别是函数关系（能用某个函数表示的确定性关系）和相关关系（不能用函数表示的确定性关系）。对这些关系的分析，可以采用回归分析、相关分析或主成分分析等统计分析方法。
（11）模糊论方法。利用模糊集合理论对实际问题进行模糊评判、模糊决策、模糊模式识别和模糊聚类分析。模糊性是客观存在的，系统的复杂性越高，精确化能力就越低，即模糊性越强。
（12）可视化分析。可视化分析可给出带有多变量的图形化分析数据，帮助用户进行分析。可视化数据分析技术拓宽了传统的图表功能，使用户对数据的剖析更清楚。例如，将数据库中的多维数据变成多种图形，这对揭示数据的状况、内在本质及规律性起了很大作用。
2. 数据挖掘的分析方法
从功能上可以将数据挖掘的分析方法划分为六种，即关联分析、序列分析、分类分析、聚类分析、预测和时间序列分析。
（1）关联分析。关联分析主要用于发现不同事件之间的关联性，即一个事件发生的同时，另一个事件也经常发生。关联分析的重点在于快速发现那些有实用价值的关联发生的事件。其主要依据是事件发生的概率和条件概率应该符合一定的统计意义。在进行关联分析的同时，还需要计算两个参数，分别是最小置信度（可信度）和最小支持度，前者表示规则需满足的最低可靠度，用以过滤掉可能性过小的规则；后者则用来表示规则在统计意义上需满足的最小程度。
（2）序列分析。序列分析主要用于发现一定时间间隔内接连发生的事件，这些事件构成一个序列，发现的序列应该具有普遍意义，其依据除了统计上的概率之外，还要加上时间的约束。在进行序列分析时，也应计算置信度和支持度。
（3）分类分析。分类分析通过分析具有类别的样本特点，得到决定样本属于各种类别的规则或方法。利用这些规则和方法对未知类别的样本分类时应该具有一定的准确度。其主要方法有基于统计学的贝叶斯方法、神经网络方法、决策树方法等。分类分析时首先为每个记录赋予一个标记（一组具有不同特征的类别），即按标记分类记录，然后检查这些标定的记录，描述出这些记录的特征。这些描述可能是显式的，例如，一组规则定义；也可能是隐式的，例如，一个数学模型或公式。
（4）聚类分析。聚类分析是根据“物以类聚”的原理，将本身没有类别的样本聚集成不同的组，并且对每个这样的组进行描述的过程。其主要依据是聚集到同一个组中的样本应该彼此相似，而属于不同组的样本应该足够不相似。聚类分析法是分类分析法的逆过程，它的输入集是一组未标定的记录，即输入的记录没有作任何处理，目的是根据一定的规则，合理地划分记录集合，并用显式或隐式的方法描述不同的类别。
（5）预测方法。预测方法与分类分析相似，但预测是根据样本的已知特征估算某个连续类型的变量的取值的过程，而分类则只是用于判别样本所属的离散类别而已。预测方法常用的技术是回归分析。
（6）时间序列分析。时间序列分析是随时间而变化的事件序列，目的是预测未来发展趋势，或者寻找相似发展模式，或者发现周期性的发展规律。
在实际应用中，以上分析方法有着不同的适用范围，经常被综合运用。
5.8.3 数据挖掘技术的应用
开始学习
5.8.3 数据挖掘技术的应用
数据挖掘和数据仓库的协同工作，一方面，可以迎合和简化数据挖掘过程中的重要步骤，提高数据挖掘的效率和能力，确保数据挖掘中数据来源的广泛性和完整性。另一方面，数据挖掘技术已经成为数据仓库应用中极为重要和相对独立的方面和工具。
数据挖掘和数据仓库的融合与互动发展，使之得到了广泛的应用。目前，已经形成了多个分支，例如，空间数据挖掘、多媒体数据挖掘和文本数据挖掘等。
1. 空间数据挖掘
SDM是指从空间数据库中抽取没有清楚表现出来的隐含的知识和空间关系，并发现其中有用的特征和模式的理论、方法和技术。空间数据挖掘（Spatial Data Mining，SDM）是在数据挖掘的基础上，结合地理信息系统、遥感图像处理、全球定位系统、模式识别、可视化等相关的研究领域而形成的一个分支学科，也称为空间数据挖掘和知识发现（Spatial Data Mining and Knowledge Discovery，SDMKD）。
空间数据与其他类型数据的本质区别是其空间属性。空间属性包括空间位置、距离、几何形状和大小等内容，并且可引伸为空间个体之间的相互关系，例如，拓扑关系、方位关系和度量关系等，从而使得空间数据比其他类型的数据要更为复杂，数据量异常巨大。空间数据的特点使其中隐含着更多、更为复杂的知识，因此，也使空间数据挖掘的研究更加困难和更具挑战性。
一般而言，从空间数据库和数据仓库中可能发现的知识类型包括普遍的几何知识、规则型知识、空间聚类与分类知识、空间分布规律、空间对象的发展趋势、空间对象的结构型知识、空间偏差型知识等。SDM的任务是要在不同的空间概念层次（从微观到宏观）挖掘出上述各种类型的知识，并用相应的知识模型表示出来。可供选用的知识表示方法包括基于规则的表示、基于逻辑的表示、基于关系的表示、面向对象的表示、基于模型的表示、语义网络表示、脚本表示、模拟表示、基于过程的表示和基于本体的表示等。不仅如此，SDM的任务还包括根据所采用的知识表示方法，设计出相应的推理模型，这样，才能为不同领域、不同层次、具有不同应用需求的用户提供行之有效的辅助决策支持。
2. 多媒体数据挖掘
多媒体数据挖掘（Multimedia Data Mining，MDM）是在大量的多媒体数据中，通过综合分析视听特性和语义，发现隐含的、有效的、有价值的、可理解的模式，进而发现知识，得出事件的趋向和关联，为用户提供问题求解层次的决策支持能力。MDM相对于传统的数据挖掘有几个需要解决的问题。首先，多媒体数据为非结构化和异构数据。要在这些非结构化的数据上进行挖掘以获取知识，必须将它们转化为结构化数据，通过特征提取，用特征向量作为元数据建立元数据库，在此基础上进行数据挖掘；其次，多媒体数据的特征向量通常是数十维甚至数百维，如何对高维矢量进行数据挖掘，也是要考虑的重要问题。
MDM系统通常包括多媒体数据集、预处理模块、挖掘引擎和用户接口。大型多媒体数据集可能包含几十万幅图片、几千小时的视频和音频，它们的媒体结构与元数据库中的描述关联，用于可视化表现和存取；预处理模块主要是对多媒体原始数据进行预处理，提取有效特征，将特征矢量以元数据的形式记录在元数据库中；挖掘引擎包含一组快速挖掘算法，系统可以根据具体的应用选择一个或多个相应的挖掘算法，对元数据库进行挖掘；用户接口可以实现挖掘结果的可视化和解释界面，也可以为用户提供交互接口扩展SQL 挖掘语言。由于多媒体的视听和时空特性，挖掘出来的模式应该以新的表现方式呈现出来，例如，导航式知识展开和交互式问题求解过程，以及提供挖掘结果的可视化接口。
3. 文本数据挖掘
文本数据挖掘（Text Data Mining，TDM）是指从文本数据中抽取有价值的信息和知识的计算机处理技术。文本数据挖掘是应用驱动的，它在智能商务、信息检索、生物信息处理等方面都有广泛的应用。例如，客户关系管理、互联网搜索等。
按照挖掘的对象不同，可以将TDM分为基于单文档的数据挖掘和基于文档集的数据挖掘。基于单文档的数据挖掘对文档的分析并不涉及其他文档，其主要的挖掘技术有文本摘要和信息提取（包括名字提取、短语提取和关系提取等）；基于文档集的数据挖掘是对大规模的文档数据进行模式抽取，其主要的技术有文本分类、文本聚类、个性化文本过滤、文档作者归属和因素分析等。
TDM可以分为三层，底层是TDM的基础领域，包括机器学习、数理统计和自然语言处理；在此基础上是TDM的基本技术，包括文本信息抽取、文本分类、文本聚类、文本数据压缩和文本数据处理；最上层是两个主要应用领域，分别是信息访问和知识发现，信息访问包括信息检索、信息浏览、信息过滤和信息报告，知识发现包括数据分析和数据预测。
目前，由于Web上的信息在很大程度上是文本信息，因此，Web文本数据挖掘是Web内容挖掘的最主要，也是最重要的部分，并且被认为比数据挖掘具有更高的商业潜力。Web文本数据挖掘主要是对Web上大量文档集合的内容进行总结、分类、聚类和关联分析，以及利用Web文档进行趋势预测等。
['第6章', '系统配置与性能评价']
6.0 内容介绍
开始学习
计算机系统性能评价的目的主要有三个，分别是选择、改进和设计。具体而言，是指在众多的系统方案中选择一个最适合需要的方案，即在一定的价格范围内选择性能最好的系统，达到较好的性能/价格比；对已有系统的性能缺陷和瓶颈进行改进，提高其运行效率；对未来设计的系统进行性能预测，在性能成本方面实现最佳设计或配置。
系统的性能取决于多种因素（性能指标），最基本的因素在于系统配置（构成系统的各种软硬件的成分、数量、能力和系统结构、处理和调度策略等）和系统负载（工作负载和方式，例如，交互方式、批处理方式等）。性能评价的主要任务就是研究系统配置、系统负载和性能指标之间的相互关系。

6.1 计算机系统层次结构
计算机系统是一个硬件和软件的综合体，可以把它看作是按功能划分的多级层次结构，如图6-1所示。这种结构的划分，有利于正确理解计算机系统的工作过程，明确软件、硬件在系统中的地位和作用。

https://img.ixueyi.net/images/px_vc/2022-06/766/H5NsBCt9ew.png
图6-1  计算机系统的多级层次结构
（1）硬联逻辑级。这是计算机的内核，由门、触发器等逻辑电路组成。
（2）微程序级。这一级的机器语言是微指令集，程序员用微指令编写的微程序一般直接由硬件执行。
（3）传统机器级。这一级的机器语言是该机的指令集，程序员用机器指令编写的程序可以由微程序进行解释。
（4）操作系统级。从操作系统的基本功能来看，一方面它要直接管理传统机器中的软硬件资源，另一方面它又是传统机器的延伸。
（5）汇编语言级。这一级的机器语言是汇编语言，完成汇编语言翻译的程序称为汇编程序。
（6）高级语言级。这一级的机器语言就是各种高级语言，通常用编译程序来完成高级语言翻译的工作。
（7）应用语言级。这一级是为了使计算机满足某种用途而专门设计的，因此，这一级的机器语言就是各种面向问题的应用语言。

6.1.0 内容介绍
开始学习
计算机系统是一个硬件和软件的综合体，可以把它看作是按功能划分的多级层次结构，如图6-1所示。这种结构的划分，有利于正确理解计算机系统的工作过程，明确软件、硬件在系统中的地位和作用。

https://img.ixueyi.net/images/px_vc/2022-06/766/H5NsBCt9ew.png
图6-1  计算机系统的多级层次结构
（1）硬联逻辑级。这是计算机的内核，由门、触发器等逻辑电路组成。
（2）微程序级。这一级的机器语言是微指令集，程序员用微指令编写的微程序一般直接由硬件执行。
（3）传统机器级。这一级的机器语言是该机的指令集，程序员用机器指令编写的程序可以由微程序进行解释。
（4）操作系统级。从操作系统的基本功能来看，一方面它要直接管理传统机器中的软硬件资源，另一方面它又是传统机器的延伸。
（5）汇编语言级。这一级的机器语言是汇编语言，完成汇编语言翻译的程序称为汇编程序。
（6）高级语言级。这一级的机器语言就是各种高级语言，通常用编译程序来完成高级语言翻译的工作。
（7）应用语言级。这一级是为了使计算机满足某种用途而专门设计的，因此，这一级的机器语言就是各种面向问题的应用语言。

6.1.1 计算机硬件的组成
开始学习
6.1.1 计算机硬件的组成
硬件通常是指一切看得见，摸得到的设备实体。原始的冯?诺依曼（Von Neumann）计算机在结构上是以运算器为中心的，而发展到现在，已转向以存储器为中心了。图6-2所示为计算机最基本的组成框图。

http://www.educity.cn/article_images/2014-01-15/20eb274d-e2ba-478a-8064-191e160e8348.jpg
（1）控制器。控制器是分析和执行指令的部件，也是统一指挥并控制计算机各部件协调工作的中心部件，所依据的是机器指令。控制器的组成包含程序计数器、指令寄存器、指令译码器、时序部件、微操作控制信号形成部件和中断机构。
（2）运算器。运算器也称为算术逻辑单元（Arithmetic and Logic Unit，ALU），其主要功能是在控制器的控制下完成各种算术运算和逻辑运算。一个计算过程需要用到加法器/累加器、数据寄存器或其他寄存器、状态寄存器等。加法是加法运算器的基本功能，在大多数的运算器中，其他计算都是经过变换后使用加法来实现的。运算器的位数，即运算器一次能对多少位的数据做加法，是衡量运算器的一个重要指标。运算器可以分成单总线结构的运算器、双总线结构的运算器和三总线结构的运算器。
（3）主存储器。主存储器也称为内存储器（通常简称为“内存”或“主存”）。存储现场操作的信息与中间结果，包括机器指令和数据。有关主存储器的详细知识，将在6.2.1节中介绍。
（4）辅助存储器。辅助存储器也称为外存储器，通常简称为外存或辅存。存储需要长期保存的各种信息。有关辅助存储器的详细知识，将在6.2.2节中介绍。
（5）输入设备。输入设备的任务是把人们编好的程序和原始数据送到计算机中去，并且将它们转换成计算机内部所能识别和接受的信息方式。按输入信息的形态可分为字符（包括汉字）输入、图形输入、图像输入及语音输入等。目前，常见的输入设备有键盘、鼠标、扫描仪等。
（6）输出设备。输出设备的任务是将计算机的处理结果以人或其他设备所能接受的形式送出计算机。目前，最常用的输出设备是打印机和显示器。有些设备既可以是输入设备，同时也可以是输出设备，例如，辅助存储器、自动控制和检测系统中使用的数模转换装置等。
6.1.2 计算机软件的分类
开始学习
6.1.2 计算机软件的分类
一个完整的计算机系统包含硬件系统和软件系统两大部分。软件是相对硬件而言的，它是用户与硬件之间的接口界面。软件通常是泛指各类程序和文件，是在硬件系统的基础上，为有效地使用计算机而配置的。
计算机软件按照功能，可以分为应用软件和系统软件两大类。
1. 系统软件
系统软件用于实现计算机系统的管理、调度、监视和服务等功能。通常将系统软件分为以下五类：
（1）操作系统。操作系统是用户和计算机之间的接口，是系统软件的核心。有关操作系统方面的知识，请阅读第3章。
（2）语言处理程序。语言处理程序的主要任务是将计算机可识别的语言（例如，汇编语言、各种高级语言等）编写的源程序翻译成计算机能直接执行的语言（机器语言）。语言处理程序包括编译程序、汇编程序、解释程序等。编译程序和解释程序都可以把高级语言变成为机器语言，但前者是先将源程序转换为目标程序，再开始执行；而后者对源程序的处理则采用边解释边执行的方法。
（3）服务性程序。服务性程序为用户使用的系统提供许多功能，包括链接程序、编辑程序、调试程序、诊断程序等。
（4）数据库管理系统。包括数据库和数据库管理软件。有关数据库管理系统的知识，请阅读第5章。
（5）计算机网络软件。计算机网络软件是为计算机网络配置的系统软件，主要负责计算机之间的通信和数据传送。有关数据通信和计算机网络方面的知识，请阅读第4章。
2. 应用软件
应用软件是用户为解决某种应用问题而编制的一些程序；应用软件是用户或第三方软件公司为各自业务开发和使用的各种软件，种类繁多。例如，财务管理软件、项目管理软件等。
需要指出的是，硬件是计算机系统的物质基础，正是在硬件高度发展的基础上，才有软件赖以生存的空间和活动场所，没有硬件对软件的支持，软件的功能就无从谈起；同样，软件是计算机系统的灵魂，没有软件的硬件是“裸机”，将不能提供给用户使用，犹如一堆废铁。因此，硬件和软件是相辅相成的，不可分割的整体。
当前，计算机的硬件和软件正朝着互相渗透，互相融合的方向发展，在计算机系统中没有一条明确的硬件与软件的分界线。原来一些由硬件实现的功能可以改由软件模拟来实现，这种做法称为硬件软化，它可以增强系统的功能和适应性；同样，原来由软件实现的功能也可以改由硬件来实现，称为软件硬化，它可以显着降低软件在时间上的开销。由此可见，硬件和软件之间的界面是浮动的，对于程序员来说，硬件和软件在逻辑上是等价的。一项功能究竟采用何种方式实现，应从系统的效率、速度、价格和资源状况等诸多方面综合考虑。
除去硬件和软件以外，还有一个“固件”（Firmware）的概念。它是指那些存储在能永久保存信息的器件（例如，只读存储器）中的程序，是具有软件功能的硬件。固件的性能指标介于硬件与软件之间，吸收了软、硬件各自的优点，其执行速度快于软件，灵活性优于硬件，功能的固件化将成为计算机系统发展的一个趋势。
6.1.3 计算机系统结构的分类
开始学习
6.1.3 计算机系统结构的分类
计算机的发展经历了电子管和晶体管时代、集成电路时代（中小规模、大规模、超大规模、甚大规模、极大规模）。目前，世界最高水平的单片集成电路芯片上所容纳的元器件数量已经达到80多亿个。
1. 存储程序的概念
“存储程序”的概念是冯?诺依曼等人于1946年6月首先提出来的，它可以简要地概括为以下几点：
（1）计算机（指硬件）应由运算器、存储器、控制器、输入设备和输出设备五大基本部件组成。
（2）计算机内部采用二进制来表示指令和数据。
（3）将编好的程序和原始数据事先存入存储器中，然后再启动计算机工作。这就是存储程序的基本含义。
冯?诺依曼对计算机业界的最大贡献在于“存储程序控制”概念的提出和实现。六十多年来，虽然计算机的发展速度是惊人的，但就其结构原理来说，目前绝大多数计算机仍建立在存储程序概念的基础上。通常把符合存储程序概念的计算机统称为冯?诺依曼型计算机。当然，现代计算机与早期计算机相比，在结构上还是有许多改进的。
随着计算机技术的不断发展，也暴露出了冯?诺依曼型计算机的主要弱点：存储器访问会成为瓶颈。目前，已出现了一些突破存储程序控制的计算机，统称为非冯?诺依曼型计算机，例如，数据驱动的数据流计算机、需求驱动的归约计算机和模式匹配驱动的智能计算机等。
2. Flynn分类
1966年，Michael．J．Flynn提出根据指令流、数据流的多倍性特征对计算机系统进行分类（通常称为Flynn分类法），有关定义如下：
（1）指令流：指机器执行的指令序列；
（2）数据流：指由指令流调用的数据序列，包括输人数据和中间结果，但不包括输出数据。
（3）多倍性：指在系统性能瓶颈部件上同时处于同一执行阶段的指令或数据的最大可能个数。
Flynn根据不同的指令流-数据流组织方式，把计算机系统分成以下四类：
（1）单指令流单数据流（Single Instruction stream and Single Data stream，SISD）：SISD其实就是传统的顺序执行的单处理器计算机，其指令部件每次只对一条指令进行译码，并只对一个操作部件分配数据。流水线方式的单处理机有时也被当作SISD。
（2）单指令流多数据流（Single Instruction stream and Multiple Data stream，SIMD）：SIMD以并行处理机（矩阵处理机）为代表，并行处理机包括多个重复的处理单元，由单一指令部件控制，按照同一指令流的要求为它们分配各自所需的不同数据。
（3）多指令流单数据流（Multiple Instruction stream and Single Data stream，MISD）：MISD具有n个处理单元，按n条不同指令的要求对同一数据流及其中间结果进行不同的处理。一个处理单元的输出又作为另一个处理单元的输入。这类系统实际上很少见到。有文献把流水线看作多个指令部件，称流水线计算机是MISD。
（4）多指令流多数据流（Multiple Instruction stream and Multiple Data stream，MIMD）：MIMD是指能实现作业、任务、指令等各级全面并行的多机系统。多处理机属于MIMD。当前的高性能服务器与超级计算机大多具有多个处理机，能进行多任务处理，称为多处理机系统，无论是海量并行处理（Massive Parallel Processing，MPP）结构，还是对称多处理（Symmetrical Multi-Processing，SMP）结构，都属于这一类。有关MPP和SMP更多的知识，将在6.6.2节和6.6.3节中分别介绍。
3. 其他分类法
Flynn分类法是最普遍使用的。其他的分类法还有：
（1）冯氏分类法：由冯泽云在1972年提出，冯氏分类法用计算机系统在单位时间内所能处理的最大二进制位数来对计算机系统进行分类。
（2）Handler分类法：由Wolfgan Handler在1977年提出，Handler分类法根据计算机指令执行的并行度和流水线来对计算机系统进行分类。
（3）Kuck分类法：由David J．Kuck在1978年提出，Kuck分类法与Flynn分类法相似，也是用指令流、执行流和多倍性来描述计算机系统特征，但其强调执行流的概念，而不是数据流。
6.2 存储器系统
存储器是用来存放程序和数据的部件，它是一个记忆装置，也是计算机能够实现“存储程序控制”的基础。在计算机系统中，规模较大的存储器往往分成若干级，称为存储器系统。
传统的存储器系统一般分为高速缓冲存储器（cache）、主存、辅存三级。主存可由CPU直接访问，存取速度快，但容量较小，一般用来存放当前正在执行的程序和数据。辅存设置在主机外部，它的存储容量大，价格较低，但存取速度较慢，一般用来存放暂时不参与运行的程序和数据，CPU不可以直接访问辅存，辅存中的程序和数据在需要时才传送到主存，因此它是主存的补充和后援。当CPU速度很高时，为了使访问存储器的速度能与CPU的速度相匹配，又在主存和CPU间增设了一级cache。cache的存取速度比主存更快，但容量更小，用来存放当前最急需处理的程序和数据，以便快速地向CPU提供指令和数据。因此，计算机采用多级存储器体系，确保能够获得尽可能高的存取速率，同时保持较低的成本。
存储器中数据常用的存取方式有顺序存取、直接存取、随机存取和相联存取等四种。
（1）顺序存取：存储器的数据以记录的形式进行组织。对数据的访问必须按特定的线性顺序进行。磁带存储器采用顺序存取的方式。
（2）直接存取：与顺序存取相似，直接存取也使用一个共享的读写装置对所有的数据进行访问。但是，每个数据块都拥有惟一的地址标识，读写装置可以直接移动到目的数据块的所在位置进行访问。存取时间也是可变的。磁盘存储器采用直接存取的方式。
（3）随机存取：存储器的每一个可寻址单元都具有自己惟一的地址和读写装置，系统可以在相同的时间内对任意一个存储单元的数据进行访问，而与先前的访问序列无关。主存储器采用随机存取的方式。
（4）相联存取：相联存取也是一种随机存取的形式，但是选择某一单元进行读写是取决于其内容而不是其地址。与普通的随机存取方式一样，每个单元都有自己的读写装置，读写时间也是一个常数。使用相联存取方式，可以对所有的存储单元的特定位进行比较，选择符合条件的单元进行访问。为了提高地址映射的速度，cache采取相联存取的方式。
存储器系统的性能主要由存取时间、存储器带宽、存储器周期和数据传输率等来衡量。

6.2.0 内容介绍
开始学习
存储器是用来存放程序和数据的部件，它是一个记忆装置，也是计算机能够实现“存储程序控制”的基础。在计算机系统中，规模较大的存储器往往分成若干级，称为存储器系统。
传统的存储器系统一般分为高速缓冲存储器（cache）、主存、辅存三级。主存可由CPU直接访问，存取速度快，但容量较小，一般用来存放当前正在执行的程序和数据。辅存设置在主机外部，它的存储容量大，价格较低，但存取速度较慢，一般用来存放暂时不参与运行的程序和数据，CPU不可以直接访问辅存，辅存中的程序和数据在需要时才传送到主存，因此它是主存的补充和后援。当CPU速度很高时，为了使访问存储器的速度能与CPU的速度相匹配，又在主存和CPU间增设了一级cache。cache的存取速度比主存更快，但容量更小，用来存放当前最急需处理的程序和数据，以便快速地向CPU提供指令和数据。因此，计算机采用多级存储器体系，确保能够获得尽可能高的存取速率，同时保持较低的成本。
存储器中数据常用的存取方式有顺序存取、直接存取、随机存取和相联存取等四种。
（1）顺序存取：存储器的数据以记录的形式进行组织。对数据的访问必须按特定的线性顺序进行。磁带存储器采用顺序存取的方式。
（2）直接存取：与顺序存取相似，直接存取也使用一个共享的读写装置对所有的数据进行访问。但是，每个数据块都拥有惟一的地址标识，读写装置可以直接移动到目的数据块的所在位置进行访问。存取时间也是可变的。磁盘存储器采用直接存取的方式。
（3）随机存取：存储器的每一个可寻址单元都具有自己惟一的地址和读写装置，系统可以在相同的时间内对任意一个存储单元的数据进行访问，而与先前的访问序列无关。主存储器采用随机存取的方式。
（4）相联存取：相联存取也是一种随机存取的形式，但是选择某一单元进行读写是取决于其内容而不是其地址。与普通的随机存取方式一样，每个单元都有自己的读写装置，读写时间也是一个常数。使用相联存取方式，可以对所有的存储单元的特定位进行比较，选择符合条件的单元进行访问。为了提高地址映射的速度，cache采取相联存取的方式。
存储器系统的性能主要由存取时间、存储器带宽、存储器周期和数据传输率等来衡量。

6.2.1 主存储器
开始学习
6.2.1 主存储器
主存用来存放计算机运行期间所需要的程序和数据，CPU可直接随机地进行读/写。主存具有一定容量，存取速度较高。由于CPU要频繁地访问主存，所以主存的性能在很大程度上影响了整个计算机系统的性能。根据工艺和技术不同，主存可分为随机存取存储器和只读存储器。
1. 随机存取存储器
随机存取存储器（Random Access Memory，RAM）既可以写入也可以读出，但断电后信息无法保存，因此只能用于暂存数据。RAM又可分为DRAM（Dynamic RAM，动态RAM）和SRAM（Static RAM，静态）两种，DRAM的信息会随时间逐渐消失，因此需要定时对其进行刷新维持信息不丢失；SRAM在不断电的情况下信息能够一直保持而不会丢失。DRAM的密度大于SRAM且更加便宜，但SRAM速度快，电路简单（不需要刷新电路），然而容量小，价格高。
2. 只读存储器
只读存储器（Read Only Memory，ROM）可以看作RAM的一种特殊形式，其特点是：存储器的内容只能随机读出而不能写入。这类存储器常用来存放那些不需要改变的信息。由于信息一旦写入存储器就固定不变了，即使断电，写入的内容也不会丢失，所以又称为固定存储器。ROM一般用于存放系统程序BIOS（Basic Input Output System，基本输入输出系统）、专用的子程序，或用作函数发生器、字符发生器及微程序控制器中的控制存储器。通常把向ROM写入数据的过程称为对ROM进行编程，根据编程方法的不同，ROM通常可以分为几类。
（1）MROM（Mask ROM，掩模式ROM）。它的内容是由半导体制造厂按用户提出的要求在芯片的生产过程中直接写入的，写入之后任何人都无法改变其内容。MROM的优点是可靠性高，集成度高，形成批量之后价格便宜；缺点是用户对制造厂的依赖性过大，灵活性差。
（2）PROM（Programmable ROM，一次可编程 ROM）。只能进行一次写入操作（与ROM相同），但是可以在出厂后，由用户使用特殊电子设备进行写入。
（3）EPROM（Erasable PROM，可擦除的 PROM）。不仅可以由用户利用编程器写入信息，而且可以对其内容进行多次改写。EPROM出厂时，存储内容为全“1”，用户可以根据需要将其中某些记忆单元改为“0”。当需要更新存储内容时可以将原存储内容擦除（恢复全“1”），以便再写入新的内容。EPROM又可分为紫外线擦除和电擦除。EPROM虽然既可读，又可写，但它却不能取代RAM。因为EPROM的编程次数（寿命）是有限的，而且每次写入的时间太长，速度太慢。
（4）闪速存储器（flash memory，闪存）。一种快擦写型存储器，它的主要特点是既可在不加电的情况下长期保存信息，又能在线进行快速擦除与重写，兼备了电擦除EPROM和RAM的优点。目前，大多数微型计算机的主板采用闪速存储器来存储BIOS程序。由于BIOS的数据和程序非常重要，不允许修改，故早期主板BIOS芯片多采用PROM或EPROM。闪速存储器除了具有ROM的一般特性外，还有低电压改写的特点，便于用户自动升级BIOS。
6.2.2 辅助存储器
开始学习
6.2.2 辅助存储器
辅助存储器用于存放当前不需要立即使用的信息，一旦需要，再和主机成批交换数据，是主存储器的后备，因此称之为辅助存储器；它又是主机的外部设备，又称之为外存储器。辅助存储器的最大特点是存储器容量大、可靠性高、价格低。常用的辅助存储器有磁带存储器、硬盘存储器、磁盘阵列和光盘存储器。
1．磁带存储器
磁带存储器是一种顺序存取的设备，存取时间较长，但存储容量大，便于携带，价格便宜，所以也是一种主要的辅助存储器。磁带的内容由磁带机进行读写，按磁带机的读写方式主要可以分为两种，分别是启停式和数据流。
启停式磁带机按带宽可以分为1/4英寸、1/2英寸和1英寸三种。磁带上的信息以文件块的形式存放。整盘磁带的开始有一卷标，然后有一初始空白块，用以适应磁带从静止到稳定带速所需时间。文件记录以文件头标志和文件尾标志进行标识，一个文件由若干数据块组成，每一数据块又由若干记录组成（一个数据块所包括的记录条数叫块因子）。数据块之间以空白块（gap）进行分隔，文件之间也存在一段空隙。所有的文件都顺序地排列在磁带上，一个文件的长度不仅包括记录信息，也包括块间间隔。磁带机每一次读写信息的位数与磁带表面并行记录信息的磁道数有关。例如，7道、9道和16道，则分别有7，9，16个磁头并列，一次可以读写7位、9位或16位。
数据流磁带机结构简单，价格低，数据传输速率快。其记录格式是串行逐道记录信息，每次读写1位信息，数据连续地写在磁带上，数据块之间以空隙分隔。磁带机不能在块间启停。以4个磁道为例，其读写顺序如下：先从0道的首端（Beginning Of Tape，BOT）开始，到其末端（End Of Tape，EOT）；然后第1道反向记录从EOT到BOT，而2道又正向从 BOT到 EOT，3道再反向。
2．硬盘存储器
在硬盘中，信息分布呈以下层次：记录面、圆柱面、磁道和扇区，如图6-3所示。

http://www.educity.cn/article_images/2014-01-15/61d51d8a-8a05-4f1a-856f-512feaa2fd64.jpg
一台硬盘驱动器中有多个磁盘片，每个盘片有两个记录面，每个记录面对应一个磁头，所以记录面号就是磁头号，如图6-3（a）所示。所有的磁头安装在一个公用的传动设备或支架上，磁头一致地沿盘面径向移动，单个磁头不能单独地移动。在记录面上，一条条磁道形成一组同心圆，最外圈的磁道为0号，往内则磁道号逐步增加，如图6-3（b）所示。在一个盘组中，各记录面上相同编号（位置）的各磁道构成一个柱面，如图6-3（c）所示。若每个磁盘片有m个磁道，则该硬盘共有m个柱面。
引入柱面的概念是为了提高硬盘的存储速度。当主机要存入一个较大的文件时，若一条磁道存不完，就需要存放在几条磁道上。这时，应首先将一个文件尽可能地存放在同一柱面中。如果仍存放不完，再存入相邻的柱面内。
通常将一条磁道划分为若干个段，每个段称为一个扇区或扇段，每个扇区存放一个定长信息块（例如，512个字节），如图6-3（b）所示。一条磁道划分多少扇区，每个扇区可存放多少字节，一般由操作系统决定。磁道上的扇区编号从1开始，不像磁头或柱面编号从0开始。
主机向硬盘控制器送出有关寻址信息，硬盘地址一般表示为：驱动器号、柱面（磁道）号、记录面（磁头）号、扇区号。通常，主机通过一个硬盘控制器可以连接几台硬盘驱动器，所以需送出驱动器号。调用磁盘常以文件为单位，故寻址信息一般应当给出文件起始位置所在的柱面号与记录面号（这就确定了具体磁道）、起始扇区号，并给出扇区数（交换量）。
硬盘标称的容量是指格式化容量，即用户实际可以使用的存储容量，而非格式化容量是指磁记录介质上全部的磁化单元数，格式化容量一般约为非格式化容量的60％～70％。格式化存储容量的计算公式是：
存储容量 = n×t×s×b
其中：n为保存数据的总记录面数，t为每面磁道数，s为每道的扇区数，b为每个扇区存储的字节数。
硬盘转速是硬盘主轴电机的旋转速度，它是决定硬盘内部传输速率的关键因素之一，在很大程度上直接影响到硬盘的速度。硬盘转速以每分钟多少转（RPM）来表示，RPM值越大，内部传输速率就越快，访问时间就越短，硬盘的整体性能也就越好。
记录密度是指硬盘存储器上单位长度或单位面积所存储的二进制信息量，通常以道密度和位密度表示。道密度是指沿半径方向上单位长度中的磁道数目，位密度是指沿磁道方向上单位长度中所记录的二进制信息的位数。
硬盘的存取时间主要包括三个部分。第一部分是指磁头从原先位置移动到目的磁道所需要的时间，称为寻道时间或查找时间；第二部分是指在到达目的磁道以后，等待被访问的记录块旋转到磁头下方的等待时间；第三部分是信息的读写操作时间。由于寻找不同磁道和等待不同记录块所花的时间不同，所以通常取它们的平均值。因为读/写操作时间比较快，相对于平均寻道时间Ts和平均等待时间Tw来说，可以忽略不计。所以，磁盘的平均存取时间Ta为：

http://www.educity.cn/article_images/2014-01-15/e0648b92-44c6-4d66-9dd7-851cabf67da8.jpg
硬盘缓存存在的目的是为了解决硬盘内部与接口数据之间速度不匹配的问题，它可以提高硬盘的读/写速度。
硬盘的数据传输速率分为内部数据传输速率和外部数据传输速率。内部数据传输速率是指磁头与硬盘缓存之间的数据传输速率，它的高低是评价一个硬盘整体性能的决定性因素。外部数据传输速率指的是系统总线与硬盘缓存之间的数据传输速率，外部数据传输速率与硬盘接口类型和缓存大小有关。
硬盘接口是硬盘与主机系统间的连接部件，不同的硬盘接口决定着硬盘与计算机之间的连接速度，在整个系统中，硬盘接口的优劣直接影响着程序运行快慢和系统性能好坏。有关接口的详细知识，将在6.3.3节中介绍。
3．磁盘阵列
廉价磁盘冗余阵列（Redundant Array of Inexpensive Disks，RAID）技术旨在缩小日益扩大的CPU速度和磁盘存储器速度之间的差距。其策略是用多个较小的磁盘驱动器替换单一的大容量磁盘驱动器，同时合理地在多个磁盘上分布存放数据以支持同时从多个磁盘进行读写，从而改善了系统的I/O性能。RAID现在代表独立磁盘冗余阵列（Redundant Array of Independent Disks），用“Independent”来强调RAID技术所带来的性能改善和更高的可靠性。
RAID机制中共分8个级别，RAID应用的主要技术有分块技术、交叉技术和重聚技术。
（1）RAID0级（无冗余和无校验的数据分块）：具有最高的I/O性能和最高的磁盘空间利用率，易管理，但系统的故障率高，属于非冗余系统，主要应用于那些关注性能、容量和价格而不是可靠性的系统。
（2）RAID1级（磁盘镜像阵列）：由磁盘对组成，每一个工作盘都有其对应的镜像盘，上面保存着与工作盘完全相同的数据拷贝，具有最高的安全性，但磁盘空间利用率只有50%。RAID1主要用于存放系统软件、数据以及其他重要文件。它提供了数据的实时备份，一旦发生故障，所有的关键数据即刻就可使用。
（3）RAID2级（采用纠错海明码的磁盘阵列）：采用了海明码纠错技术，用户需增加校验盘来提供单纠错和双验错功能。对数据的访问涉及阵列中的每一个盘。大量数据传输时I/O性能较高，但不利于小批量数据传输。实际应用中很少使用。
（4）RAID3和RAID4级（采用奇偶校验码的磁盘阵列）：把奇偶校验码存放在一个独立的校验盘上。如果有一个盘失效，其上的数据可以通过对其他盘上的数据进行异或运算得到。读数据很快，但因为写入数据时要计算校验位，速度较慢。RAID3采用位交叉奇偶校验码，RAID4采用块交叉奇偶校验码。RAID3适用于大型文件且I/O需求不频繁的应用，RAID4适用于大型文件的读取。
（5）RAID5（无独立校验盘的奇偶校验码磁盘阵列）：与RAID4类似，但没有独立的校验盘，校验信息分布在组内所有盘上，对于大批量和小批量数据的读写性能都很好。RAID4和RAID5使用了独立存取技术，阵列中每一个磁盘都相互独立地操作，所以I/O请求可以并行处理。因此，该技术非常适合于I/O需求频繁的应用而不太适合于要求高数据传输率（大型文件）的应用，例如银行、金融、股市等大型数据处理中心的OLTP应用。
（6）RAID6（具有独立的数据硬盘与两个独立的分布式校验方案）：在RAID6级的阵列中设置了一个专用的、可快速访问的异步校验盘。该盘具有独立的数据访问通路，但其性能改进有限，价格却很昂贵。
（7）RAID7（具有最优化的异步高I/O速率和高数据传输率的磁盘阵列）：是对RAID6的改进。在这种阵列中的所有磁盘，都具有较高的传输速度，有着优异的性能，是目前最高档次的磁盘阵列。
（8）RAID10（高可靠性与高性能的组合）：由多个RAID等级组合而成，建立在RAID0和RAID1基础上。RAID1是一个冗余的备份阵列，而RAID0是负责数据读写的阵列，因此又称为RAID 0+1。由于利用了RAID0极高的读写效率和RAID1较高的数据保护和恢复能力，使RAID10成为了一种性价比较高的等级。
在以上级别中，需要根据可用性（数据冗余）、性能和成本进行综合选择。例如，如果不要求可用性，则就可以选择RAID0，以获得最佳性能；如果是金融保险业应用，则可以选择RAID5。
4．光盘存储器
光盘存储器是利用激光束在记录表面存储信息，根据激光束的反射光来读出信息。根据性能和用途的不同，光盘存储器可分为CD-ROM、CD-R、CD-RW和DVD-ROM四种类型。
CD-ROM（Compact Disc Read-Only Memory，只读压缩盘）又称固定型光盘。它由生产厂家预先写入数据和程序，使用时用户只能读出，不能修改或写入新内容。CD-ROM的读取目前有三种方式，分别是恒定角速度、恒定线速度和部分恒定角速度。
CD-R光盘采用WORM（Write One Read Many）标准，光盘可由用户写入信息，写入后可以多次读出；但只能写入一次，信息写入后将不能再修改，所以称为只写一次型光盘。
CD-RW光盘是可以写入、擦除、重写的可逆性记录系统，这种光盘类似于磁盘，可重复读写。
DVD-ROM技术类似于CD-ROM技术，但是可以提供更高的存储容量。DVD可以分为单面单层、单面双层、双面单层和双面双层四种物理结构。
光盘存储器由光盘控制器和光盘驱动器及接口组成。光盘控制器主要包括数据输入缓冲器、记录格式器、编码器、读出格式器和数据输出缓冲器等部分；光盘驱动器主要包括主轴电机驱动机构、定位机构、光头装置及电路等。其中光头装置部分最复杂，是驱动器的关键部分。
光盘上的光道是一条从内向外的由凹痕和平坦表面相互交替而组成的连续的螺旋形路径。程序和数据文件是按内螺旋线的规律顺序存放在盘上的，不能像硬盘存储器那样读取文件的每个扇区，所以读出速度较慢。
6.2.3 cache存储器
开始学习
6.2.3 cache存储器
cache的功能是提高CPU数据输入输出的速率，突破所谓的“冯?诺依曼瓶颈”，即CPU与存储系统间数据传送带宽限制。高速存储器能以极高的速率进行数据的访问，但因其价格高昂，如果计算机的内存完全由这种高速存储器组成，则会大大增加计算机的成本。通常在CPU和内存之间设置小容量的cache。cache容量小但速度快，内存速度较低但容量大，通过优化调度算法，系统的性能会大大改善，仿佛其存储系统容量与内存相当而访问速度近似cache。
cache通常采用相联存储器（Content Addressable Memory，CAM）。CAM是一种基于数据内容进行访问的存储设备。当对其写入数据时，CAM能够自动选择一个未用的空单元进行存储；当要读出数据时，不是给出其存储单元的地址，而是直接给出该数据或者该数据的一部分内容，CAM对所有存储单元中的数据同时进行比较，并标记符合条件的所有数据以供读取。由于比较是同时、并行进行的，所以，这种基于数据内容进行读写的机制，其速度比基于地址进行读写的方式要快很多。
1．cache基本原理
使用cache改善系统性能的依据是程序的局部性原理。程序访问的局部性有两个方面的含义，分别是时间局部性和空间局部性。时间局部性是指如果一个存储单元被访问，则可能该单元会很快被再次访问。这是因为程序存在着循环。空间局部性是指如果一个存储单元被访问，则该单元邻近的单元也可能很快被访问。这是因为程序中大部分指令是顺序存储、顺序执行的，数据一般也是以向量、数组、树、表等形式簇聚地存储在一起的。
根据程序的局部性原理，最近的、未来要用的指令和数据大多局限于正在用的指令和数据，或是存放在与这些指令和数据位置上邻近的单元中。这样，就可以把目前常用或将要用到的信息预先放在cache中。当CPU需要读取数据时，首先在cache中查找是否有所需内容，如果有，则直接从cache中读取；若没有，再从内存中读取该数据，然后同时送往CPU和cache。如果CPU需要访问的内容大多都能在cache中找到（称为访问命中），则可以大大提高系统性能。
如果以h代表对cache的访问命中率（“1-h”称为失效率，或者称为未命中率），t1表示cache的周期时间，t2表示内存的周期时间，以读操作为例，使用“cache+主存储器”的系统的平均周期为t3。则：

http://www.educity.cn/article_images/2014-01-15/99c920e9-d159-4dc3-85e9-c832c41edfd5.jpg
系统的平均存储周期与命中率有很密切的关系，命中率的提高即使很小也能导致性能上的较大改善。
例如，设某计算机主存的读/写时间为l00ns，有一个指令和数据合一的cache，已知该cache的读/写时间为10ns，取指令的命中率为98%，取数的命中率为95%。在执行某类程序时，约有1/5指令需要存/取一个操作数。假设指令流水线在任何时候都不阻塞，则设置cache后，每条指令的平均访存时间约为：

http://www.educity.cn/article_images/2014-01-15/8f9675da-1133-41fb-8f63-09f37498a51a.jpg
2．映射机制
当CPU发出访存请求后，存储器地址先被送到cache控制器以确定所需数据是否已在cache中，若命中则直接对cache进行访问。这个过程称为cache的地址映射（映像）。在cache的地址映射中，主存和cache将均分成容量相同的块（页）。常见的映射方法有直接映射、全相联映射和组相联映射。
（1）直接映射。直接映射方式以随机存取存储器作为cache存储器，硬件电路较简单。直接映射是一种多对一的映射关系，但一个主存块只能够复制到cache的一个特定位置上去。例如，某cache容量为16KB（即可用14位表示），每块的大小为16B（即可用4位表示），则说明其可分为1024块（可用10位表示）。主存地址的最低4位为cache的块内地址，然后接下来的中间10位为cache块号。如果主存地址为1234E8F8H（一共32位），那么，最后4位就是1000（对应十六进制数的最后一位“8”），而中间10位，则应从E8F（1110 1000 1111）中获取，得到10 1000 1111。因此，主存地址为1234E8F8H的单元装入的cache地址为10 1000 1111 1000。
直接映射的关系可以用下列公式来表示：

http://www.educity.cn/article_images/2014-01-15/96ab1fd4-8942-480c-9b8b-d974e1ab0e33.jpg
其中，K为cache的块号，I为主存的页号，C为cache的块数。
直接映射方式的优点是比较容易实现，缺点是不够灵活，有可能使cache的存储空间得不到充分利用。例如，假设cache有8块，则主存的第1页与第17页同时复制到cache的第1块，即使cache其他块空闲，也有一个主存页不能写入cache。
（2）全相联映射。全相联映射使用相联存储器组成的cache存储器。在全相联映射方式中，主存的每一页可以映射到cache的任一块。如果淘汰cache中某一块的内容，则可调入任一主存页的内容，因而较直接映射方式灵活。
在全相联映射方式中，主存地址不能直接提取cache块号，而是需要将主存页标记与cache各块的标记逐个比较，直到找到标记符合的块（访问cache命中），或者全部比较完后仍无符合的标记（访问cache失败）。因此，这种映射方式速度很慢，失掉了高速缓存的作用，这是全相联映射方式的最大缺点。如果让主存页标记与各cache标记同时比较，则成本又太高。全相联映像方式因比较器电路难于设计和实现，只适用于小容量的cache。
（3）组相联映射。组相联映射是直接映射和全相联映射的折中方案。它将cache中的块再分成组，通过直接映射方式决定组号，通过全相联映射的方式决定cache中的块号。在组相联映射方式中，主存中一个组内的页数与cache的分组数相同。
例如，容量为64块的cache采用组相联方式映像，每块大小为128个字，每4块为一组，即cache分为64/4=16组。若主存容量为4096页，且以字编址。首先，根据主存与cache块的容量需一致，即每个内存页的大小也是128个字，因此共有128?4096个字（219个字），即主存地址需要19位。因为cache分为16组，所以主存需要分为4096/16=256组（每组16页），即28组，因此主存组号需8位。
按照上述划分方法，主存每一组的第1页映射到cache的第1组，主存每一组的第2页映射到cache的第2组，以此类推。因为主存中一个组内的页数与cache的分组数相同，所以主存每一组的最后一页映射到cache的最后一组。
要注意的是，有关组相联映射的划分方法不止一种。例如，另外一种方式是主存不分组，而是根据下列公式直接进行映射：

http://www.educity.cn/article_images/2014-01-15/d1789687-be39-4f9a-a1f5-1c1f8b4a7626.jpg
其中，J为cache的组号，I为主存的页号，Q为cache的组数。
在组相联映射中，由于cache中每组有若干可供选择的块，因而它在映像定位方面较直接映像方式灵活；每组块数有限，因此付出的代价不是很大，可以根据设计目标选择组内块数。
3．替换算法
当cache产生了一次访问未命中之后，相应的数据应同时读入CPU和cache。但是当cache已存满数据后，新数据必须替换（淘汰）cache中的某些旧数据。最常用的替换算法有以下三种：
（1）随机算法。这是最简单的替换算法。随机法完全不管cache块过去、现在及将来的使用情况，简单地根据一个随机数，选择一块替换掉。
（2）先进先出（First In and First Out，FIFO）算法。按调入cache的先后决定淘汰的顺序，即在需要更新时，将最先进入cache的块作为被替换的块。这种方法要求为每块做一记录，记下它们进入cache的先后次序。这种方法容易实现，而且系统开销小。其缺点是可能会把一些需要经常使用的程序块（如循环程序）替换掉。
（3）近期最少使用（Least Recently Used，LRU）算法。LRU算法是把CPU近期最少使用的块作为被替换的块。这种替换方法需要随时记录cache中各块的使用情况，以便确定哪个块是近期最少使用的块。LRU算法相对合理，但实现起来比较复杂，系统开销较大。通常需要对每一块设置一个称为“年龄计数器”的硬件或软件计数器，用以记录其被使用的情况。
4．写操作
因为需要保证缓存在cache中的数据与内存中的内容一致，相对读操作而言，cache的写操作比较复杂，常用的有以下几种方法。
（1）写直达（write through）。当要写cache时，数据同时写回内存，有时也称为写通。当某一块需要替换时，也不必把这一块写回到主存中去，新调入的块可以立即把这一块覆盖掉。这种方法实现简单，而且能随时保持主存数据的正确性，但可能增加多次不必要的主存写入，会降低存取速度。
（2）写回（write back）。CPU修改cache的某一块后，相应的数据并不立即写入内存单元，而是当该块从cache中被淘汰时，才把数据写回到内存中。在采用这种更新策略的cache块表中，一般有一个标志位，当一块中的任何一个单元被修改时，标志位被置“1”。在需要替换掉这一块时，如果标志位为“1”，则必须先把这一块写回到主存中去之后，才能再调入新的块；如果标志位为“0”，则这一块不必写回主存，只要用新调入的块覆盖掉这一块即可。这种方法的优点是操作速度快，缺点是因主存中的字块未随时修改而有可能出错。
（3）标记法。对cache中的每一个数据设置一个有效位。当数据进入cache后，有效位置“1”；而当CPU要对该数据进行修改时，数据只需写入内存并同时将该有效位置“0”。当要从cache中读取数据时需要测试其有效位，若为“l”则直接从cache中取数，否则，从内存中取数。
6.2.4 网络存储技术
开始学习
6.2.4 网络存储技术
目前，主流的网络存储技术主要有三种，分别是直接附加存储（Direct Attached Storage，DAS）、网络附加存储（Network Attached Storage，NAS）和存储区域网络（Storage Area Network，SAN）。
1. 直接附加存储
DAS是将存储设备通过SCSI（Small Computer System Interface，小型计算机系统接口）电缆直接连到服务器，其本身是硬件的堆叠，存储操作依赖于服务器，不带有任何存储操作系统。因此，有些文献也把DAS称为SAS（Server Attached Storage，服务器附加存储）。
DAS的适用环境为：
（1）服务器在地理分布上很分散，通过SAN或NAS在它们之间进行互连非常困难时；
（2）存储系统必须被直接连接到应用服务器（例如，Microsoft Cluster Server或某些数据库使用的“原始分区”）上时；
（3）包括许多数据库应用和应用服务器在内的应用，它们需要直接连接到存储器上时。
由于DAS直接将存储设备连接到服务器上，这导致它在传递距离、连接数量、传输速率等方面都受到限制。因此，当存储容量增加时，DAS方式很难扩展，这对存储容量的升级是一个巨大的瓶颈；另一方面，由于数据的读取都要通过服务器来处理，必然导致服务器的处理压力增加，数据处理和传输能力将大大降低；此外，当服务器出现宕机等异常时，也会波及到存储数据，使其无法使用。目前DAS基本被NAS所代替。
2. 网络附加存储
采用NAS技术的存储设备不再通过I/O总线附属于某个特定的服务器，而是通过网络接口与网络直接相连，由用户通过网络访问。NAS存储系统的结构如图6-4所示。

http://www.educity.cn/article_images/2014-01-15/55e23a25-3092-49cf-acfa-55fb09404661.jpg
NAS存储设备类似于一个专用的文件服务器，它去掉了通用服务器的大多数计算功能，而仅仅提供文件系统功能，从而降低了设备的成本。并且为方便存储设备到网络之间以最有效的方式发送数据，专门优化了系统硬软件体系结构。NAS以数据为中心，将存储设备与服务器分离，其存储设备在功能上完全独立于网络中的主服务器，客户机与存储设备之间的数据访问不再需要文件服务器的干预，同时它允许客户机与存储设备之间进行直接的数据访问，所以不仅响应速度快，而且数据传输速率也很高。
NAS技术支持多种TCP/IP网络协议，主要是NFS（Net File System，网络文件系统）和CIFS（Common Internet File System，通用Internet文件系统）来进行文件访问，所以NAS的性能特点是进行小文件级的共享存取。在具体使用时，NAS设备通常配置为文件服务器，通过使用基于Web的管理界面来实现系统资源的配置、用户配置管理和用户访问登录等。
NAS存储支持即插即用，可以在网络的任一位置建立存储。基于Web管理，从而使设备的安装、使用和管理更加容易。NAS可以很经济地解决存储容量不足的问题，但难以获得满意的性能。
3. 存储区域网络
SAN是通过专用交换机将磁盘阵列与服务器连接起来的高速专用子网。它没有采用文件共享存取方式，而是采用块（block）级别存储。SAN是通过专用高速网将一个或多个网络存储设备和服务器连接起来的专用存储系统，其最大特点是将存储设备从传统的以太网中分离了出来，成为独立的存储区域网络SAN的系统结构如图6-5所示。

http://www.educity.cn/article_images/2014-01-15/49d75ecf-a0ea-4ce3-b6a1-5e1e11070e87.jpg
根据数据传输过程采用的协议，其技术划分为FC SAN和IP SAN。另外，还有一种新兴的IB SAN技术。
（1）FC SAN。FC（Fiber Channel，光纤通道）和SCSI接口一样，最初也不是为硬盘设计开发的接口技术，而是专门为网络系统设计的，随着存储系统对速度的需求，才逐渐应用到硬盘系统中。光纤通道的主要特性有：热插拔性、高速带宽、远程连接、连接设备数量大等。它是当今最昂贵和复杂的存储架构，需要在硬件、软件和人员培训方面进行大量投资。
FC SAN由三个基本的组件构成，分别是接口（SCSI、FC)、连接设备（交换机、路由器）和协议（IP、SCSI）。这三个组件再加上附加的存储设备和服务器就构成一个SAN系统。它是专用、高速、高可靠的网络，允许独立、动态地增加存储设备，使得管理和集中控制更加简化。
FC SAN有两个较大的缺陷，分别是成本和复杂性，其原因就是因为使用了FC。在光纤通道上部署SAN，需要每个服务器上都要有FC适配器、专用的FC交换机和独立的布线基础架构。这些设施使成本大幅增加，更不用说精通FC协议的人员培训成本。
（2）IP SAN。IP SAN是基于IP网络实现数据块级别存储方式的存储网络。由于设备成本低，配置技术简单，可共享和使用大容量的存储空间，因而逐渐获得广泛的应用。
在具体应用上，IP存储主要是指iSCSI（Internet SCSI）。作为一种新兴的存储技术，iSCSI基于IP网络实现SAN架构，既具备了IP网络配置和管理简单的优势，又提供了SAN架构所拥有的强大功能和扩展性。iSCSI是连接到一个TCP/IP网络的直接寻址的存储库，通过使用TCP/IP协议对SCSI指令进行封装，可以使指令能够通过IP网络进行传输，而过程完全不依赖于地点。
iSCSI优势的主要表现在于，首先，建立在SCSI、TCP/IP这些稳定和熟悉的标准上，因此安装成本和维护费用都很低；其次，iSCSI支持一般的以太网交换机而不是特殊的光纤通道交换机，从而减少了异构网络和电缆；最后，ISCSI通过IP传输存储命令，因此可以在整个Internet上传输，没有距离限制。
iSCSI的缺点在于，存储和网络是同一个物理接口，同时协议本身的开销较大，协议本身需要频繁地将SCSI命令封装到IP包中以及从IP包中将SCSI命令解析出来，这两个因素都造成了带宽的占用和主处理器的负担。但是，随着专门处理ISCSI指令的芯片的开发（解决主处理器的负担问题），以及10G以太网的普及（解决带宽问题），iSCSI将有着更好的发展。
（3）IB SAN。IB（InfiniBand，无限带宽）是一种交换结构I/O技术，其设计思路是通过一套中心机构（IB交换机）在远程存储器、网络以及服务器等设备之间建立一个单一的连接链路，并由IB交换机来指挥流量。这种结构设计得非常紧密，大大提高了系统的性能、可靠性和有效性，能缓解各硬件设备之间的数据流量拥塞。而这是许多共享总线式技术没有解决好的问题，因为在共享总线环境中，设备之间的连接都必须通过指定的端口建立单独的链路。
IB主要支持两种环境：模块对模块的计算机系统（支持I/O 模块附加插槽）；在数据中心环境中的机箱对机箱的互连系统、外部存储系统和外部局域网/广域网访问设备。IB支持的带宽比现在主流的 I/O载体（例如，SCSI、FC等）还要高，另外，由于使用IPv6的报头，IB还支持与传统Internet/Intranet设施的有效连接。用IB技术替代总线结构所带来的最重要的变化就是建立了一个灵活、高效的数据中心，省去了服务器复杂的I/O部分。
IB SAN采用层次结构，将系统的构成与接入设备的功能定义分开，不同的主机可通过HCA（Host Channel Adapter，主机通道适配器）、RAID等网络存储设备利用TCA（Target Channel Adapter，目标通道适配器）接入IB SAN。
IB SAN主要具有如下特性：可伸缩的Switched Fabric互连结构；由硬件实现的传输层互连高效、可靠；支持多个虚信道；硬件实现自动的路径变换；高带宽，总带宽随IB Switch规模成倍增长；支持SCSI远程DMA（Direct Memory Access，直接内存存取）协议；具有较高的容错性和抗毁性，支持热拔插。
5. 网络存储技术的选择
网络存储技术的目的都是为了扩大存储能力，提高存储性能。这些存储技术都能提供集中化的数据存储并有效存取文件；都支持多种操作系统，并允许用户通过多个操作系统同时使用数据；都可以从应用服务器上分离存储，并提供数据的高可用性；同时，都能通过集中存储管理来降低长期的运营成本。
因此，从存储的本质上来看，它们的功能都是相同的。事实上，它们之间的区别正在变得模糊，所有的技术都在用户的存储需求下接受挑战。在实际应用中，需要根据系统的业务特点和要求（例如，环境要求、性能要求、价格要求等）进行选择。
6.2.5 虚拟存储技术
开始学习
6.2.5 虚拟存储技术
虚拟存储（virtual storage）是指把多个存储介质模块（例如，硬盘、RAID等）通过一定的手段集中管理，形成统一管理的存储池（storage pool），为用户提供大容量、高数据传输性能的存储系统。存储虚拟化是将实际的物理存储实体与存储的逻辑表示实现分离，使用虚拟存储技术，应用服务器只与分配给它们的逻辑卷（虚卷）交互，而不用关心其数据是在哪个物理存储实体上。
1. 虚拟存储的分类
按照拓扑结构的不同，虚拟存储可以分为两种方式，分别是对称式和非对称式。对称式虚拟存储技术是指虚拟存储控制设备与存储软件系统、交换设备集成为一个整体，内嵌在网络数据传输路径中；非对称式虚拟存储技术是指虚拟存储控制设备独立于数据传输路径之外。
按照实现原理的不同，虚拟存储也可以分为两种方式，分别是数据块虚拟与虚拟文件系统。数据块虚拟存储方式着重解决数据传输过程中的冲突和延时问题，利用虚拟的多端口并行技术，为多个用户提供极高的带宽，最大限度上减少延时与冲突的发生；虚拟文件系统存储方式着重解决大规模网络中文件共享的安全机制问题。通过对不同的站点指定不同的访问权限，保证网络文件的安全。在实际应用中，数据块虚拟存储方式以对称式拓扑结构为表现形式，虚拟文件系统存储方式以非对称式拓扑结构为表现形式。
2. 虚拟存储的实现方式
虚拟存储要解决的关键问题是逻辑卷与物理存储实体之间的映射关系，这种映射关系可以在计算机层解决，也可以在存储设备层解决，还可以在存储网络层解决。
（1）主机级的虚拟化。由安装在应用服务器上的卷管理软件完成存储的虚拟化。基于主机端的虚拟存储几乎都是通过纯软件的方式实现的，这种实现机制不需要引入新设备，也不影响现有存储系统的基本架构，所以实现成本比较低。但是，这种机制难以克服的困难是平台依赖性太强，开发商要为每一种操作系统平台甚至每一个版本，开发一套软件产品。同时，由于存储管理由主机解决，增加了主机的负担。
（2）存储设备级的虚拟化。由存储设备的控制器实现存储的虚拟化。这种虚拟存储一般是存储厂商实施的，很可能使用厂商独家的存储产品。这种实现机制主要通过大规模的RAID子系统和多个I/O通道连接到服务器上，智能控制器提供访问控制、缓存和其他（例如，数据复制等）管理功能。这种方式的优点在于效率高、性能好，管理员对设备有完全的控制权，而且通过与服务器系统分开，可以将存储的管理与多种服务器操作系统隔离，并且可以很容易地调整硬件参数。但是，在现实中，厂商往往都只提供对自身产品的支持，不能解决异构存储环境中的虚拟化问题。
（3）网络级的虚拟化。由加入SAN的专用装置实现存储虚拟化。这种机制可以管理不同厂商的存储设备，实现SAN中所有设备的统一管理，具有较好的开放性。
不管采用何种虚拟存储技术，其目的都是为了提供一个高性能、安全、稳定、可靠、可扩展的存储网络平台，满足系统的要求。根据综合的性能价格比来说，一般情况下，在主机级和存储设备级的虚拟化技术能够保证系统的数据处理能力要求时，则可优先考虑，因为这两种虚拟存储技术构建方便、管理简单、维护容易、产品相对成熟、性能价格比高。在需要将多个异构的存储设备集成为一个或多个存储池时，则需要使用网络级的虚拟化技术，以达到充分利用存储容量、集中管理存储、降低存储成本的目的。
3. 虚拟存储的特点
虚拟存储技术是为了解决复杂、烦琐的存储管理而产生的，但是，随着信息技术的发展，虚拟存储在很多方面表现出优秀的性能：
（1）虚拟存储提供了一个大容量存储系统集中管理的手段，由网络中的一个环节进行统一管理，避免了由于存储设备扩充所带来的管理方面的麻烦。例如，增加新的存储设备时，只需要管理员对存储系统进行较为简单的配置更改，客户端无需任何操作。
（2）虚拟存储可以大大提高存储系统整体访问带宽。存储系统是由多个存储模块组成的，而虚拟存储系统可以很好地进行负载平衡，把每一次数据访问所需的带宽合理地分配到各个存储模块上，这样，系统的整体访问带宽就增大了。例如，一个存储系统中有4个存储模块，每一个存储模块的访问带宽为50MBps，则这个存储系统的总访问带宽就可以接近各存储模块带宽之和，即200MBps。
（3）虚拟存储技术为存储资源管理提供了更好的灵活性和兼容性，可以将不同类型的存储设备集中管理使用，保护用户的已有投资。
（4）虚拟存储技术可以通过管理软件，为网络系统提供一些其他的有用功能，例如，无需服务器的远程镜像和数据快照等。
（5）虚拟存储技术将计算机的应用系统与存储设备分离，使各种不同的存储设备看上去具有标准的存储特性，应用系统不需要关心数据存储的具体设备，从而减轻了应用系统的负担。
由于虚拟存储具有上述特点，正逐步成为共享存储管理的主流技术，在数据镜像、数据复制、实时数据恢复、应用集成等方面有着广泛的应用。
6.3 输入输出系统
I/O系统由I/O设备、I/O接口（I/O控制器）、I/O控制管理软件等部分组成，它将各种I/O设备有效地接入到计算机系统中，将计算机外部输入设备的信息输入到计算机内部，以便能够得到加工处理，该功能简称为输入操作；将计算机内部存储和加工处理的信息输出到计算机之外，以提供给计算机外部设备使用，该功能简称为输出操作。
6.3.0 内容介绍
开始学习
I/O系统由I/O设备、I/O接口（I/O控制器）、I/O控制管理软件等部分组成，它将各种I/O设备有效地接入到计算机系统中，将计算机外部输入设备的信息输入到计算机内部，以便能够得到加工处理，该功能简称为输入操作；将计算机内部存储和加工处理的信息输出到计算机之外，以提供给计算机外部设备使用，该功能简称为输出操作。
6.3.1 输入输出方式
开始学习
6.3.1 输入输出方式
在计算机中，I/O系统可以有5种不同的工作方式，分别是程序控制方式、程序中断方式、DMA工作方式、通道方式、I/O处理机。
1. 程序控制方式
由CPU执行一段I/O程序来实现主机与外设之间的数据传送，根据外设的不同性质，可分为无条件传送和程序查询方式两种。
在无条件传送方式中，I/O端口总是准备好接收主机的输出数据，或总是准备好向主机输入数据，因而CPU无须查询外设的工作状态，而默认外设始终处于准备就绪状态。在CPU认为需要时，随时可直接利用I/O指令访问相应的I/O端口，实现与外设之间的数据交换。这种方式的优点是软、硬件结构都很简单，但要求时序配合精确，一般的外设难以满足要求。所以，只能用于对简单开关量的I/O控制。
许多外设的工作状态是很难事先预知的，例如，用户何时按键，打印机是否能接收新的打印输出信息等。当CPU与外设工作不同步时，很难确保CPU在执行输入操作时，外设一定是“准备好”的；而在执行输出操作时，外设一定是“缓冲器空”的。为了保证数据传送的正确进行，就要求CPU在程序中查询外设的工作状态。如果外设尚未准备就绪，CPU就循环等待，只有当外设已作好准备时，CPU才能执行I/O指令进行数据传送，这就是程序查询方式。由程序主动查询外设，完成主机与外设间的数据传送，这种方法简单，硬件开销小，但I/O能力不高，严重影响CPU的利用率。
2. 程序中断方式
为了提高I/O能力和CPU的效率，计算机系统引进了中断方式。程序中断是指计算机执行现行程序的过程中，出现某些急需处理的异常情况和特殊请求，CPU暂时中止现行程序（保护现场），而转去对随机发生的更紧迫的事件进行处理，在处理完毕后，CPU将自动返回原来的程序继续执行（恢复现场）。整个中断过程大体上可以分为5个阶段，分别是中断请求、中断判优、中断响应、中断处理和中断返回。在系统中具有多个中断源的情况下，常用的处理方法有多中断信号线法、中断软件查询法、雏菊链法、总线仲裁法和中断向量表法。
CPU利用中断方式完成数据的I/O，当I/O系统与外设交换数据时，CPU无需等待也不必去查询I/O的状态，当I/O系统完成了数据传输后以中断信号通知CPU。CPU然后保存正在执行程序的现场，转入I/O中断服务程序完成与I/O系统的数据交换。然后返回原主程序继续执行。与程序控制方式相比，中断方式因为CPU无需等待而提高了效率。
3. DMA方式
DMA方式是为了在主存与外设之间实现高速、批量数据交换而设置的，使用DMA控制器（Direct Memory Access Controler，DMAC）来控制和管理数据传输。DMAC和CPU共享系统总线，并且具有独立访问存储器的能力。在进行DMA时，CPU放弃对系统总线的控制而由DMAC控制总线；由DMAC提供存储器地址及必需的读写控制信号，实现外设与存储器之间的数据交换。
DMAC获取总线的方式主要有三种，分别是CPU停止访问主存法（暂停方式）、存储器分时法（共享方式）和周期挪用法（周期窃取方式）。DMA方式具有下列特点：
（1）它使主存与CPU的固定联系脱钩，主存既可被CPU访问，又可被外设访问。
（2）在数据块传送时，主存地址的确定、传送数据的计数等都由硬件电路直接实现。
（3）主存中要开辟专用缓冲区，及时供给和接收外设的数据。
（4）DMA传送速度快，CPU和外设并行工作，提高了系统的效率。
（5）DMA在传送开始前要通过程序进行预处理，结束后要通过中断方式进行后处理。
4. 通道方式
通道是一种高级的I/O控制部件，它在一定的硬件基础上利用软件手段实现对I/O的控制和传送，更多地免去了CPU的介入，从而使主机和外设的并行工作程度更高。当然，通道并不能完全脱离CPU，它还要受到CPU的管理，比如启动、停止等，而且通道还应该向CPU报告自己的状态，以便CPU决定下一步的处理。
通道方式是DMA方式的进一步发展，实质上，通道也是实现外设和主存之间直接交换数据的控制器。在具有通道处理机的系统中，当用户进程请求启动外设时，由操作系统根据I/O要求构造通道程序和通道状态字，将通道程序保存在内存中，并将通道程序的首地址放到通道地址字中，然后执行启动I/O指令。
按照所采取的传送方式，可将通道分为字节多路通道、选择通道和数组多路通道三种。字节多路通道是一种简单的共享通道，用于连接与管理多台低速设备，以字节交叉方式传送信息，如图6-6所示。

http://www.educity.cn/article_images/2014-01-15/a33c8cb2-3db6-4094-96da-710e7a127c1d.jpg
选择通道又称为高速通道，在物理上它也可以连接多个设备，但这些设备不能同时工作，在一段时间内通道只能选择一台设备进行数据传送，此时该设备可以独占整个通道，如图6-7所示。

http://www.educity.cn/article_images/2014-01-15/1fa5beaa-8638-4899-8ce6-1c30595e0326.jpg
数组多路通道是把字节多路通道和选择通道的特点结合起来的一种通道结构，它有多个子通道，既可以执行多路通道程序，即像字节多路通道那样，所有子通道分时共享总通道，又可以用选择通道那样的方式成组地传送数据；既具有多路并行操作的能力，又具有很高的数据传输速率，使通道的效率充分得到发挥。
5. I/O处理机
I/O处理机也称为外围处理机，它是一个专用处理机，也可以是一个通用的处理机，具有丰富的指令系统和完善的中断系统。专用于大型、高效的计算机系统处理外围设备的I/O，并利用共享存储器或其他共享手段与主机交换信息，从而使大型计算机系统更加高效地工作。
与通道相比，I/O处理机具有比较丰富的指令系统，结构接近于一般的处理机，可以有自己的局部存储器。I/O处理机除了能够完成通道的全部功能外，还可以进行码制转换、数据校验和校正、故障处理、文件管理、诊断和显示系统状态、处理人机对话。网络或远程终端可以直接连接到I/O处理机上，由I/O处理机完成远程用户服务工作。I/O处理机还可以根据需要完成分配给它的其他任务，例如，进行数据库和知识库的管理工作等。
I/O处理机基本上是独立于中央处理机异步工作的，它可以与中央处理机共享主存，也可以有自己独立的存储器，不共享主存。每台I/O处理机可以有自己独立的运算部件和指令控制部件，也可以由多个I/O处理机共享同一个运算部件和指令控制部件。
6.3.2 总线
开始学习
6.3.2 总线
总线是一组能为多个部件分时共享的公共信息传送线路。共享是指总线上可以挂接多个部件，各个部件之间相互交换的信息都可以通过这组公共线路传送；分时是指同一时刻只允许有一个部件向总线发送信息，如果出现两个或两个以上部件同时向总线发送信息，势必导致信号冲突。当然，在同一时刻，允许多个部件同时从总线上接收相同的信息。
1．总线的分类
按总线相对于CPU或其他芯片的位置可分为内部总线和外部总线两种。在CPU内部，寄存器之间和算术逻辑部件ALU与控制部件之间传输数据所用的总线称为内部总线；外部总线是指CPU与内存RAM、ROM和输入/输出设备接口之间进行通信的通路。由于CPU通过总线实现程序取指令、内存/外设的数据交换，在CPU与外设一定的情况下，总线速度是制约计算机整体性能的最大因素。
按总线功能来划分，又可分为地址总线、数据总线、控制总线三类，人们通常所说的总线都包括这三个组成部分，地址总线用来传送地址信息，数据总线用来传送数据信息，控制总线用来传送各种控制信号。例如，ISA（Industrial Standard Architecture，工业标准结构）总线共有98条线，其中数据线有16条、地址线24条，其余为控制信号线、接地线和电源线。
按总线在微机系统中的位置，可分为机内总线和机外总线两种。上面所说的总线都是机内总线，而机外总线是指与外部设备接口相连的，实际上是一种外设的接口标准。例如，目前计算机上流行的接口标准IDE（Integrated Drive Electronics，电子集成驱动器）、SCSI、USB（Universal Serial Bus，通用串行总线）和IEEE（Institute of Electrical and Electronics Engineers，美国电气电子工程师协会）1394等，前两种主要是与硬盘、光驱等设备接口相连，后面两种新型外部总线可以用来连接多种外部设备。
计算机的总线按其功用来划分，主要有局部总线、系统总线、通信总线三种类型。其中局部总线是在传统的ISA总线和CPU总线之间增加的一级总线或管理层，它的出现是由于计算机软硬件功能的不断发展，系统原有的ISA或EISA（Extended ISA，扩展的ISA）等已远远不能适应系统高传输能力的要求，而成为整个系统的主要瓶颈；系统总线是计算机系统内部各部件（插板）之间进行连接和传输信息的一组信号线，例如，ISA、EISA、MCA（Micro Channel Architecture，微通道结构）、VESA（Video Electronic Standard Association，视频电子标准协会）、PCI（Peripheral Component Interconnect，外设组件互连）、AGP（Accelerate Graphical Port，加速图形接口）等；通信总线是计算机系统之间或计算机系统与其他系统（例如，远程通信设备、测试设备等）之间进行通信的一组信号线。
按照总线中数据线的多少，可分为并行总线和串行总线。并行总线是含有多条双向数据线的总线，它可以实现一个数据的多位同时传输，总线中数据线的数量决定了可传输一个数据的最大位数（一般为8的倍数）。由于可以同时传输数据的各位，所以并行总线具有数据传输速率高的优点。但由于各条数据线的传输特性不可能完全一致，当数据线较长时，数据各位到达接收端时的延迟可能不一致，会造成传输错误，所以并行总线不宜过长，适合近距离连接。大多数的系统总线属于并行总线；串行总线是只含有一条双向数据线或两条单向数据线的总线，可以实现一个数据的各位按照一定的速度和顺序依次传输。由于按位串行传输数据对数据线传输特性的要求不高，在长距离连线情况下仍可以有效地传送数据，所以串行总线的优势在于远距离通信。但由于数据是按位顺序传送的，所以在相同的时钟控制下，数据传输速率低于并行总线。大多数的通信总线属于串行总线。
2．总线标准
总线标准是指计算机部件各生产厂家都需要遵守的总线要求，从而使不同厂家生产的部件能够互换。总线标准主要规定总线的机械结构规范、功能结构规范和电气规范。总线标准可以分为正式标准和工业标准，其中正式标准是由IEEE等国际组织正式确定和承认的标准；工业标准也称为事实标准，是首先由某一厂家提出，然后得到其他厂家广泛使用的标准。
3. 总线的性能指标
通常，总线规范中会详细描述总线各方面的特性，包括物理特性、功能特性、电气特性和时间特性。物理特性又称机械特性，它规定了总线的线数，以及总线的插头、插座的形状、尺寸和信号线的排列方式等要素；功能特性描述总线中每一根线的功能；电气特性定义了每根线上信号的传递方向及有效电平范围；时间特性规定了每根线在什么时间有效以及不同信号之间相互配合的时间关系。
总线的主要性能指标主要有以下几个：
（1）总线宽度。总线宽度指的是总线的线数，它决定了总线所占的物理空间和成本。对总线宽度最直接的影响是地址线和数据线的数量。主存空间和I/O空间的扩充使地址线数量的增加，并行传输要求有足够的数据线。例如，32位的PCI总线允许寻址的主存空间的大小为232=4G个单元。
（2）总线带宽。总线带宽定义为总线的最大数据传输速率，即每秒传输的字节数。在同步通信中，总线的带宽与总线时钟密不可分，总线时钟频率的高低决定了总线带宽的大小：
总线带宽 = 总线宽度×总线频率
总线的实际带宽还会受到总线长度（总线延迟）、总线负载、总线收发器性能等多方面因素的影响。例如，假设某系统总线在一个总线周期中并行传输4字节信息，一个总线周期占用2个时钟周期，总线时钟频率为10MHz。此时，时钟周期T=1/10M=0.1?s，总线周期=2T=0.2s，则总线带宽为4/0.2=20MB/s。
（3）总线负载。总线负载是指连接在总线上的最大设备数量。大多数总线的负载能力是有限的。
（4）总线分时复用。总线分时复用是指在不同时段利用总线上同一个信号线传送不同信号，例如，地址总线和数据总线共用一组信号线。采用这种方式的目的是减少总线数量，提高总线的利用率。
（5）总线猝发传输。猝发式数据传输是一种总线传输方式，即在一个总线周期中可以传输存储地址连续的多个数据。
除了以上提到的性能指标外，总线是否具有即插即用功能，是否支持总线设备的热插拔，是否支持多主控设备，是否具有错误检测能力，是否依赖于特定CPU等，也是评价总线性能的指标。
6.3.3 接口
开始学习
6.3.3 接口
主机和外设各自具有自己的工作特点，它们在信息形式和工作速度上具有很大的差异，I/O接口（通常简称为“接口”）正是为了解决这些差异而设置的。I/O接口也称为I/O控制器，它是主机和外设（外部设备）之间的交接界面，通过接口可以实现主机和外设之间的信息交换。
1. 接口的功能
具体来说，接口的主要功能表现在以下五个方面：
（1）实现主机和外设的通信联络控制。接口中的同步控制电路用来解决主机与外设的时间配合问题。这是为了实现主机和外设间工作的时间配合，通过联络信息可以决定不同工作速度的外设和主机之间交换信息的最佳时刻，以保证整个计算机系统能统一协调地工作。
（2）进行地址译码和设备选择。当CPU送来选择外设的地址码后，接口必须对地址进行译码以产生设备选择信息，使主机能和指定外设交换信息。
（3）实现数据缓冲。数据缓冲寄存器用于数据的暂存，以避免丢失数据。在传送过程中，先将数据送入数据缓冲寄存器中，然后再送到输出设备或主机中。
（4）数据格式的变换。为了满足主机或外设的各自要求，接口电路中必须具有各类数据相互转换的功能。例如，并串转换、数模转换等。
（5）传递控制命令和状态信息。当CPU要启动某一外设时，通过接口中的命令寄存器向外设发出启动命令；当外设准备就绪时，则有“准备好”状态信息送回接口中的状态寄存器，为CPU提供外设已经具备与主机交换数据条件的反馈信息。当外设向CPU提出中断请求和DMA请求时，CPU也应有相应的响应信号反馈给外设。
2．接口的分类
根据外部设备与I/O模块交换数据的方式，系统接口可以分为串行接口和并行接口两种。串行接口一次只能传送1位信息，而并行接口一次就可传送多位信息。
串行通信又可分为异步通信方式和同步通信方式两种。异步通信在发送字符时，所发送的字符之间的时间间隔可以是任意的。接收端必须时刻做好接收的准备，发送端可以在任意时刻开始发送字符，因此必须在每一个字符的开始和结束的地方加上标志，即加上开始位和停止位，以便使接收端能够正确地将每一个字符接收下来。异步通信的好处是通信设备简单、便宜，但传输效率较低；同步通信要求收发双方具有同频同相的同步时钟信号，只需在传送报文的最前面附加特定的同步字符，使收发双方建立同步，此后，便在同步时钟的控制下逐位发送和接收。
另外，还有一些其他的分类方法。例如，按I/O的信号分类，分为数字接口和模拟接口；按通用性分类，分为通用接口和专用接口；按功能选择的灵活性分类，分为可编程接口和不可编程接口等。
3．常见接口
常见的设备接口有以下几种：
（1）IDE。IDE是最常用的磁盘接口，分为普通IDE和增强型IDE（EIDE）接口。普通IDE数据传输率不超过1.5Mbps，数据传输宽度为8位，最多可连接4个IDE设备，每个IDE硬盘容量不超过528MB。EIDE的数据传输率可达150Mbps，数据传输宽度32位。
（2）ATA（Advanced Technology Attachment，高级技术附件）。随着IDE/EIDE得到广泛的应用，全球标准化协议将该接口自诞生以来使用的技术规范归纳成为全球硬盘标准，这样就产生了ATA。ATA发展至今经过多次修改和升级，每新一代的接口都建立在前一代标准之上，并保持着向后兼容性。ATA-7是ATA接口的最后一个版本，也称为Ultra DMA 133，支持1064Mbps（133MB/s）的数据传输速度。
（3）SATA（Serial ATA，串行高级技术附件）。SATA是一种基于行业标准的串行硬件驱动器接口。与ATA相比，SATA规范将硬盘的外部传输速率理论值提高到了1200Mbps（150MB/s），而随着未来后续版本的发展，SATA接口的速率已经扩展到3000Mbps，有望达到4800Mbps。SATA接口需要硬件芯片的支持，SATA的优势是支持热插拔、传输速度快、执行效率高。
（4）eSATA（external SATA，外部串行高级技术附件）。eSATA是基于标准的SATA线缆和接口，连接处加装了金属弹片来保证物理连接的稳固性，eSATA线缆能够插拔数千次。eSATA仅仅是一种扩展的SATA接口，是用来连接外部而不是内部SATA设备。eSATA支持3.2Gbps的传输速率。
（5）SCSI。SCSI是大容量存储设备、音频设备和CD-ROM驱动器的一种标准。SCSI接口通常被看作是一种总线，可用于连接多个外设，这些SCSI设备以菊花链形式接入，并被分配给惟一的ID号，其中最后一个ID分配给SCSI控制器。SCSI设备彼此独立运作，相互之间可以交换数据，也可以和主机进行交互。数据以分组消息的形式进行传输。目前，SCSI的最大同步传输速率为5Gbps（640MB/s）。
（6）PCMCIA（Personal Computer Memory Card International Association，个人计算机内存卡国际联合会）。PCMCIA是一种广泛用于笔记本电脑的接口标准，体积小，扩展较方便、灵活。最初PCMCIA主要用于笔记本电脑扩展内存，目前常用作一种存储器卡接口或进行传真、调制解调器功能扩展接口。现在，用PCMCIA代表个人计算机储器卡国际协会，而PCMCIA接口更名为PC Card接口。PC Card接口具有以下特点：电源管理服务，允许系统控制PC Card的工作状态（开/关），支持3.3V/5V电压，可降低功耗，支持多功能卡、扩充卡的信息结构，以提高其兼容性，规定了直接内存访问规范，增加了一个32位的总线接口。
（7）IEEE-1394。1394也被称为i.Link或FireWire，是由IEEE于1995年发布的，它的最初版本被称为1394a，初始数据传输速率为200Mbps（25MB/s），现在（Firewire 800）的数据传输速率为800Mbps，而新的1394b（Firewire 3200）有望支持3200Mbps的数据传输速率。1394是构建在菊花链或树状的拓扑结构上的，它支持63个节点，每个节点可以支持多达16台设备的菊花链。如果还不够用的话，该标准还支持最多1023条桥接的总线，这样就可以互连1023×63=64449个节点。另外，与SCSI一样， 1394能够在同一条总线上支持不同速率的设备。1394支持设备的热插拔，即允许计算机在未关机带电的情况下，插入或拔除所连接的外设而不会造成损害。1394有许多优于SCSI等其他外设接口的特点，数据传输率高、价格低且容易实现，所以不仅应用于计算机系统中，也广泛用于消费类电子产品，例如，数码相机、摄像机等。
（8）USB。USB接口是一种串行总线式的接口，在串行接口中可达到较高的数据传输率，并且也允许设备以雏菊链形式接入，最多可连接127个设备。USB的最大特点是允许热插拔，目前在便携式计算机和台式计算机中已成为标准配置。许多数码相机、闪存、视频摄像头以及打印机等都可通过USB口接入计算机。USB1.0的速度是12Mbps（1.5MB/s），USB2.0的速度达到了480Mbps，USB3.0的速度将达到4.8Gbps。
4. 端口
I/O端口（通常简称为“端口”）是指接口电路中可以被CPU直接访问的寄存器，若干个端口加上相应的控制逻辑电路组成接口。通常，一个接口中包含有数据端口、命令端口和状态端口。CPU通过输入指令可以从有关端口中读取信息，通过输出指令可以把信息写入有关端口。CPU对不同端口的操作有所不同，有的端口只能写或只能读，有的端口既可以读又可以写。为了节省硬件，在有的接口电路中，状态信息和控制信息可以共用一个寄存器（端口），称之为设备的控制/状态寄存器。
端口编址的方式有两种，分别是独立编址和统一编址。独立编址又称为I/O映射，在这种编址方式中，主存地址空间和端口地址空间是相对独立的，分别单独编址，它们互相独立，互不影响。因此，在指令系统中必须设置专门的I/O指令。当CPU使用I/O指令时，其指令的地址字段直接或间接地指示出端口地址；统一编址又称为存储器映射，在这种编址方式中，端口地址和主存单元地址是统一编址的，把I/O接口中的端口作为主存单元一样进行访问，不设置专门的I/O指令，就用一般的数据传送类指令来实现I/O操作。
6.4 指令系统
指令是指示计算机执行某些操作的命令，一台计算机的所有指令的集合构成指令系统，也称为指令集。指令系统是计算机系统中软件与硬件分界面的一个主要标志。无论结构多么复杂、功能多么强大的软件，凡是能够在机器上直接运行的目标程序都是由若干条机器指令组成的。
在计算机系统的设计过程中，指令系统的设计是非常关键的，它必须由软件设计人员和硬件设计人员共同完成。指令系统的选择和确定要涉及多方面的因素，例如，指令长度、地址码结构、操作码结构等，这是一个很复杂的问题，它与计算机系统结构、数据表示方法、指令功能设计等都密切相关。

6.4.0 内容介绍
开始学习
指令是指示计算机执行某些操作的命令，一台计算机的所有指令的集合构成指令系统，也称为指令集。指令系统是计算机系统中软件与硬件分界面的一个主要标志。无论结构多么复杂、功能多么强大的软件，凡是能够在机器上直接运行的目标程序都是由若干条机器指令组成的。
在计算机系统的设计过程中，指令系统的设计是非常关键的，它必须由软件设计人员和硬件设计人员共同完成。指令系统的选择和确定要涉及多方面的因素，例如，指令长度、地址码结构、操作码结构等，这是一个很复杂的问题，它与计算机系统结构、数据表示方法、指令功能设计等都密切相关。

6.4.1 基本指令系统
开始学习
6.4.1 基本指令系统
如果把计算机系统所要实现的任务分解成若干个基本功能，那么，在这些基本功能中，实际上只有极少数几种基本功能是必须用硬件的指令系统来实现的，而绝大多数基本功能既可以用硬件的指令系统来实现，也可以用软件的一段子程序（微程序）来实现。在实际的系统设计时，某项功能是用硬件实现还是用软件实现，主要考虑三个方面的因素，分别是速度、价格和灵活性。用硬件的指令来实现，速度快、价格贵、灵活性差；用软件的子程序来实现，速度慢、价格便宜、灵活性好。
1. 设计要求
设计指令系统时，在功能方面的基本要求是，指令系统的完整性、规整性、高效率和兼容性。
（1）完整性。完整性是指作为通用计算机所应该具备的基本指令种类。
（2）规整性。规整性主要包括对称性和均匀性。对称性是指各种与指令系统有关的数据存储设备的使用、操作码的设置等都要对称。例如，所有通用寄存器要同等对待；均匀性是指对于各种不同的数据类型、字长、操作种类和数据存储设备，指令的设置要同等对待。例如，某机器有5种数据表示、4种字长、8种数据存储设备的有效排列，则设计加法指令时，指令的种类应该有5×4×8=160种两地址加法指令。事实上，现在的计算机都没有完全实现规整性。
（3）高效率。高效率是指指令的执行速度要快、使用频率要高。对于那些使用频率比较低的指令，要尽量少设置；对于那些比较复杂但又必须设置的指令，可以采用微程序来实现，以减少硬件的复杂程度。
（4）兼容性。兼容性是计算机系统的生命力之所在。如果没有兼容性，大量的系统软件和各种应用软件就无法继承，计算机也就没有了市场。
2. 基本指令
通用计算机系统的基本指令有数据传送类指令、运算类指令、程序控制类指令、I/O指令、处理机控制和调试指令。
（1）数据传送类指令。数据传送类指令是最基本的指令类型，主要用于实现寄存器与寄存器之间、寄存器与主存单元之间，以及两个主存单元之间的数据传送。数据传送指令的种类由三个主要因素决定，分别是数据存储设备的种类、数据传送单位和采用的寻址方式。数据传送类指令又可以细分为一般传送指令、堆栈操作指令和数据交换指令。一般传送指令具有数据复制的性质，即数据从源地址传送到目的地址，而源地址中的内容保持不变；堆栈操作指令分为进栈（PUSH）和出栈（POP）两种，在程序中它们往往是成对出现的；数据交换指令是双方向数据传送指令，即将源操作数与目的操作数相互交换位置。
（2）运算类指令。运算类指令又分为算术运算指令、逻辑运算指令和移位指令，其中移位指令又可分为算术移位、逻辑移位和循环移位。运算类指令在整个指令系统中应该占有比较大的比重（例如，超过30%）。如果所占比重过小，就会影响整个计算机系统的性能。设计运算类指令，主要考虑操作种类、数据表示、数据长度、数据存储设备，以及它们的组合。在对这些因素进行组合时，必须考虑指令的执行时间、使用频率、硬件实现的复杂程度等多方面的情况。
（3）程序控制指令。程序控制类指令用于控制程序的执行顺序，并使程序具有测试、分析与判断的能力，主要包括三类，分别是转移指令（包括无条件转移和有条件转移）、程序调用和返回指令、循环控制指令。其中，前两类指令在一般计算机中是必须具备的，最后一类指令用于对循环程序进行优化。
（4）I/O指令。I/O指令用来实现主机与外部设备之间的信息交换，包括I/O数据、主机向外设发控制命令或外设向主机报告工作状态等。I/O指令通常比较简单，采用单一的直接寻址方式，数据字长一般以字节为单位。在多用户或多任务环境下，I/O指令属于特权指令。当程序需要进行I/O操作时，用系统调用进入操作系统，由操作系统对设备统一进行管理。
（5）处理机控制和调试指令。在一般的计算机系统中，处理机有两个状态，分别是管态和用户态，或称主态和从态。这两个状态需要互相切换，在这两个状态下所能使用的指令应该有所区别。在一般通用计算机系统中，按照指令的使用权限，可以把指令分为两大类，分别是一般指令和特权指令。只有系统管理程序能够使用，一般用户程序不能使用的指令称为特权指令，主要包括处理机状态的设置和管理、系统硬件和软件资源的管理、进程的管理等。只有在管态下才能够使用特权指令；在用户态下，只能使用一般指令。
6.4.2 精简指令系统
开始学习
6.4.3 精简指令系统
RISC不是简单地把指令系统进行简化，而是通过简化指令的途径使计算机的结构更加简单、合理，以减少指令的执行周期数，从而提高运算速度。
1. RISC指令系统的特点
RISC要求指令系统简化，操作在单周期内完成，指令格式力求一致，寻址方式尽可能减少，并提高编译的效率，最终达到加快机器处理速度的目的。RISC指令系统的主要特点如下：
（1）指令数量少。优先选取使用频率最高的一些简单指令和一些常用指令，避免使用复杂指令。只提供了LOAD（从存储器中读数）和STORE（把数据写入存储器）两条指令对存储器操作，其余所有的操作都在CPU的寄存器之间进行。
（2）指令的寻址方式少。通常只支持寄存器寻址方式、立即数寻址方式合相对寻址方式。
（3）指令长度固定，指令格式种类少。因为RISC指令数量少、格式少、相对简单，其指令长度固定，指令之间各字段的划分比较一致，译码相对容易。
（4）以硬布线逻辑控制为主。为了提高操作的执行速度，通常采用硬布线逻辑（组合逻辑）来构建控制器。
（5）单周期指令执行，采用流水线技术。因为简化了指令系统，很容易利用流水线技术，使得大部分指令都能在一个机器周期内完成。少数指令可能会需要多周期，例如，LOAD/STORE指令因为需要访问存储器，其执行时间就会长一些。
（6）优化的编译器：RISC的精简指令集使编译工作简单化。因为指令长度固定、格式少、寻址方式少，编译时不必在具有相似功能的许多指令中进行选择，也不必为寻址方式的选择而费心，同时易于实现优化，从而可以生成高效率执行的机器代码。
（7）CPU中的通用寄存器数量多，一般在32个以上，有的可达上千个。
大多数RISC采用了cache方案，使用cache来提高取指令的速度。而且，有的RISC使用两个独立的cache来改善性能。一个称为指令cache，另一个称为数据cache。这样，取指令和取数据可以同时进行，互不干扰。
2. RISC的核心思想
计算机执行一个程序所用的时间可表示为：
P = I×CPI×T
其中，P是执行这个程序所使用的总时间，I是这个程序所需执行的总的指令条数，CPI是每条指令执行的平均周期数，T是一个周期的时间长度。
（1）由于RISC的指令都比较简单，CISC中的一条复杂指令所完成的功能在RISC中可能要用几条指令才能实现。对于同一个源程序，分别编译后生成的动态目标代码，显然RISC的要比CISC的多。但是，由于CISC中复杂指令使用的频率很低，程序中使用的绝大多数指令都是与RISC一样的简单指令，因此，实际上的统计结果表明，RISC的I长度只比CISC的长20％～40％。
（2）由于CISC一般是用微程序实现的，一条指令往往要用好几个周期才能完成，一些复杂指令所要的周期数就更多。根据统计，大多数CISC的指令平均执行周期数CPI在4～10之间；而RISC的大所数指令都是单周期执行的，它们的CPI应该是1，但是，由于RISC中还有LOAD和STORE指令，也还有少数复杂指令，所以，CPI要略大于1。
（3）由于RISC一般采用硬布线逻辑实现，指令要实现的功能都比较简单，所以，CISC的T通常是RISC的3倍左右。
综合以上三点，可以大致计算出，RISC的处理速度要比同规模的CISC提高3～5倍。其中的关键在于RISC的指令平均执行周期数CPI减小了，这正是RISC设计思想的精华。减小CPI是多个方面共同努力的结果。在硬件方面，采用硬布线控制逻辑，减少指令和寻址方式的种类，使用固定的指令格式，采用LOAD/STORE结构，指令执行过程中设置多级流水线等，软件方面十分强调优化编译技术的作用。
3. RISC的关键技术
RISC要达到很高的性能，必须有相应的技术支持。目前，在RISC处理机中采用的主要技术有如下几种：
（1）延时转移技术。在RISC处理机中，指令一般采用流水线方式工作。流水线技术所面临的一个问题就是转移指令的出现，这时，有可能使流水线断流。其中一个解决办法是在转移指令之后插入一条有效的指令，而转移指令好象被延迟执行了，因此，把这种技术称为延迟转移技术。有关流水线方面的知识，将在6.5节中介绍。
（2）指令取消技术。采用指令延时技术，遇到条件转移指令时，调整指令序列非常困难，在许多情况下找不到可以用来调整的指令。有些RISC处理机采用指令取消技术。在使用指令取消技术的处理机中，所有转移指令和数据变换指令都可以决定下面待执行的指令是否应该取消。如果指令被取消，其效果相当于执行了一条空操作指令，不影响程序的运行环境。为了提高程序的执行效率，应该尽量少取消指令，以保持指令流水线处于充满状态。
（3）重叠寄存器窗口技术。在处理机中设置一个数量比较大的寄存器堆，并把它划分成很多个窗口。每个过程使用其中相邻的三个窗口和一个公共的窗口，而在这些窗口中，有一个窗口是与前一个过程共用，还有一个窗口是与下一个过程共用的。与前一个过程共用的窗口可以用来存放前一个过程传送给本过程的参数，同时也存放本过程传送给前一个过程的计算结果；与下一个过程共用窗口可以用来存放本过程传送给下一个过程的参数和存放下一个过程传送给本过程的计算结果。
（4）指令流调整技术。为了使RISC处理机中的指令流水线高效率地工作，尽量不断流。编译器必须分析程序的数据流和控制流，当发现指令流有断流可能时，要调整指令序列。对有些可以通过变量重新命名来消除的数据相关，要尽量消除。这样，可以提高流水线的执行效率，缩短程序的执行时间。
（5）逻辑实现以硬件为主，固件为辅。RISC主要采用硬布线逻辑来实现指令系统。对于那些必须的复杂指令，也可用固件实现。
在实际应用中，商品化的RISC机器并不是纯粹的RISC。为了满足应用的需要，实用的RISC除了保持RISC的基本特色之外，还必须辅以一些必不可少的复杂指令，例如，浮点运算、十进制运算指令等。所以，这种机器实际上是在RISC基础上实现了RISC与CISC的完美结合。
6.4.3 流水线技术
开始学习
6.5 流水线技术
要提高计算机系统的性能，增加并行性，可以从两个方面入手。一个是空间并行性，即在一个处理机内设置多个独立的操作部件，并让这些操作部件并行工作，这种处理机称为超标量处理机。有关这方面的知识，将在6.6节中介绍；另一个是时间并行性，也就是采用流水线技术。流水线技术是通过并行硬件来提高系统性能的常用方法。利用流水线技术，可以不增加硬件或只需要增加少量硬件，就能够把处理机的运算速度提高数倍。
6.5 流水线工作原理
要提高计算机系统的性能，增加并行性，可以从两个方面入手。一个是空间并行性，即在一个处理机内设置多个独立的操作部件，并让这些操作部件并行工作，这种处理机称为超标量处理机。有关这方面的知识，将在6.6节中介绍；另一个是时间并行性，也就是采用流水线技术。流水线技术是通过并行硬件来提高系统性能的常用方法。利用流水线技术，可以不增加硬件或只需要增加少量硬件，就能够把处理机的运算速度提高数倍。
6.5.0 内容介绍
开始学习
要提高计算机系统的性能，增加并行性，可以从两个方面入手。一个是空间并行性，即在一个处理机内设置多个独立的操作部件，并让这些操作部件并行工作，这种处理机称为超标量处理机。有关这方面的知识，将在6.6节中介绍；另一个是时间并行性，也就是采用流水线技术。流水线技术是通过并行硬件来提高系统性能的常用方法。利用流水线技术，可以不增加硬件或只需要增加少量硬件，就能够把处理机的运算速度提高数倍。
6.5.1 流水线工作原理
开始学习
6.5.1 流水线工作原理
流水线技术把一项任务分解为若干项顺序执行的子任务，不同的子任务由不同的操作部件负责执行，而这些部件可以同时并行工作。在任一时刻，任一任务只占用其中一个操作部件，这样，就可以实现多项任务的重叠执行，从而提高了工作效率。
1. 时空图
描述流水线的工作，最常用的方法就是采用时空图。例如，假设某处理机的指令执行可分为三个阶段，分别是取指、分析和执行，每个阶段所需要的时间都为t。那么，不采用流水线技术的时空图如图6-8所示，采用流水线技术的时空图如图6-9所示。

http://www.educity.cn/article_images/2014-01-15/6052ecdd-0b09-4aa8-8da8-d7f7a6088425.jpg
http://www.educity.cn/article_images/2014-01-15/622cff42-821a-420a-b845-571ee9327332.jpg
在时空图中，横坐标表示时间，也就是输入到流水线中的各项任务在流水线中所经过的时间；纵坐标表示空间，即流水线的各个阶段（功能段）。从时空图中可以清楚地看出各项任务在流水线的各段中的流动过程。从横坐标方向看，流水线中的各个操作部件逐个连续地完成自己的任务；从纵坐标方向看，在同一时间段内有多个功能段在同时工作。
在图6-8中，顺序执行3条指令，所需要的时间为9t。在图6-9中，流水线执行3条指令，在第1条指令的分析阶段，同时取第2条指令；在第1条指令的执行阶段，同时分析第2条指令，取第3条指令。这样，执行完3条指令所需要的时间为5t。
2. 流水线的特点
采用流水线方式的处理机与顺序执行方式相比，具有如下特点：
（1）流水线中处理的必须是连续的任务，只有连续不断的提供任务，才能发挥流水线的效率。流水线从开始启动到流出第一个结果需要一个“装入时间”，在这段时间内并没有流出任何结果，所以，对第一条指令来说，和顺序执行没有区别。流水线在所有指令都装入完毕后，还需要一个“排空时间”（最后一条指令执行完毕）。
（2）在流水线每个操作部件的后面，都要有一个缓冲寄存器（或称为锁存器、闸门寄存器），用于保存本阶段的执行结果，以保证各部件之间的速度匹配，以及各部件独立、并行运行。
（3）流水线是把一个大的操作部件分解为多个独立的操作部件，并依靠多个操作部件并行工作来缩短程序执行时间。流水线中各段的执行时间应尽量相等，否则将引起堵塞、断流等现象。执行时间最长的—段将成为整个流水线的瓶颈，在流水线中应尽量解决瓶颈。
在设计流水线处理机时，必须注意流水线的上述特点，以充分发挥流水线处理机的效率。
3. 流水线的分级
按照流水线使用的不同级别，可以把流水线分为三级，分别是操作部件级、指令级（处理机级）和处理机间级。
操作部件级流水线也称为运算操作流水线，是将复杂的算术和逻辑运算组成流水线的工作方式。例如，将浮点加法操作分成求阶差、对阶、尾数相加、结果规格化四个阶段；指令级流水线是把一条指令的执行过程分解成多个阶段，如图6-9中的取指、分析、执行三个阶段；处理机间级流水线又称为宏流水线，这种流水线由两个以上处理机通过存储器串行连接起来，其中每一个处理机完成某一专门任务，各个处理机所得到的结果需存放在与下一个处理机所共享的存储器中。
4. 流水线的分类
现代计算机中，流水线处理技术已经得到广泛应用，从不同角度可对流水线进行不同的分类。
（1）按功能分类，可分成单功能流水线和多功能流水线。单功能流水线只能实现一种固定的功能。例如，浮点加法器流水线专门完成浮点加法运算；多功能流水线的各段可以进行不同的连接，在不同时间内或在同一时间内，通过不同的连接方式实现不同的功能。多功能流水线从一种功能变为另一种功能时需要重新连接，虽然它对资源的利用率较高，应用时也较灵活，但它的控制比单功能流水线复杂得多。
（2）按工作方式分类，可分为静态流水线和动态流水线。静态流水线在同一时间内只能按一种运算的连接方式工作。静态流水线仅当指令都是同一类型时才能连续不断地执行。当是多功能流水线时，则从一种功能方式变为另一种功能方式时，必须先排空流水线，然后为另一种功能设置初始条件后方可使用。静态流水线的功能不能频繁地变换，否则它的效率将很低。目前大多数计算机都用静态流水线；动态流水线在同一时间内允许按多种不同运算的连接方式工作。显然，动态流水线必是多功能流水线，而单功能流水线必是静态的。
（3）按连接方式分类，可分为线性流水线与非线性流水线。在线性流水线中，从输入到输出，每个功能段只允许经过一次，不存在反馈回路。一条线性流水线通常只完成一种固定的功能；非线性流水线存在反馈回路，从输入到输出过程中，某些功能段将数次通过流水线。非线性流水线经常用于递归调用，或构成多功能流水线等。
为简单起见，在本节的后续讨论中，都是针对线性、单功能、静态的流水线。
6.5.2 流水线的性能分析
开始学习
6.5.2 流水线的性能分析
流水线技术与顺序执行指令相比，在执行时间上有了很大的提高。但是，就流水线本身而言，也存在性能的优劣问题。衡量流水线的性能指标主要有吞吐率、加速比和效率。另外，在流水线设计中，如何选择流水线的最佳段数，也是一个非常重要的问题。
1. 吞吐率
流水线的吞吐率（Though Put rate，TP）也称为平均吞吐率或实际吞吐率，是指在单位时间内流水线所完成的任务数量或输出的结果数量，其计算公式如下：

http://www.educity.cn/article_images/2014-01-15/e447f62a-f422-4967-a849-fb5dbf3300f7.jpg
其中，n为任务数，Tk为处理完成n项任务所用的时间。
根据图6-9可以推算出，在流水线各段的执行时间均相等（设为t），输入到流水线中的任务是连续的理想情况下，一条k段线性流水线能够在n+k-1个时钟周期内完成n项任务。可以从两个方面来分析流水线完成n项任务所需要的总时间。从流水线的输出端看，用k个时钟周期输出第一项任务，其余n-1个时钟周期，每个周期输出一项任务，即用n-1个时钟周期输出n-1项任务；从流水线的输入端看，用n个时钟周期向流水线输入n项任务，另外还要用k-1个时钟周期作为流水线的排空时间。所以，流水线完成n个连续任务需要的总时间为：
因此，实际吞吐率为：

http://www.educity.cn/article_images/2014-01-15/3441f29f-3304-48d4-8c07-cf8872b25508.jpg

http://www.educity.cn/article_images/2014-01-15/b3f5fc71-ac49-4a97-afa6-ae8f2c4a06be.jpg
因此，流水线的实际吞吐率要小于最大吞吐率。只有当时，才有。
如果流水线中各段的执行时间不完全相等，假设各段的执行时间分别为t1，t2，…，tk，则实际吞吐率为：

http://www.educity.cn/article_images/2014-01-15/00eed4c0-61a5-4d44-8be2-ac3545a9795b.jpg
也就是说，当流水线中各段的执行时间不完全相等时，吞吐率主要是由流水线中执行时间最长的那个功能段来决定的，这个功能段就成了整个流水线的瓶颈，其执行时间称为瓶颈时间。要解决这个问题，既可以把瓶颈段再细分，使瓶颈时间变小；也可以使多个瓶颈段并行工作，也就是重复设置多个瓶颈段。
2. 加速比
在流水线中，因为在同一时刻，有多项任务在重叠地执行，虽然完成一项任务的时间与单独执行该任务相近（甚至由于分段的缘故，可能更多一些），但是从整体上看，完成多项任务所需的时间则大大减少。完成同样一批任务，不使用流水线所用的时间与使用流水线所用的时间之比称为流水线的加速比（speedup ratio）。如果顺序执行所用的时间为T0，使用流水线的执行时间为Tk，则计算流水线加速比的基本公式如下：

http://www.educity.cn/article_images/2014-01-15/c0c9d267-155d-4bc5-a574-b2c8f0738da7.jpg
如果流水线各个流水段的执行时间都相等（设为t），则一条k段流水线完成n个连续任务所需要的时间为(k+n-1)t。如果不使用流水线，即顺序执行这n项任务，则所需要的时间为nkt。因此，各个流水段执行时间均相等的一条k段流水线完成n个连续任务时的实际加速比为：

http://www.educity.cn/article_images/2014-01-15/9150cf92-bed8-472d-ab91-a968b36f27dd.jpg
从上式可以看出，当时，在线性流水线的各段执行时间均相等的情况下，流水线的最大加速比等于流水线的段数。
当流水线的各个流水段的执行时间不相等时，一条k段线性流水线完成n个连续任务的实际加速比为：

http://www.educity.cn/article_images/2014-01-15/ccedecca-4415-402a-a3df-0ab9e686b472.jpg

3. 效率
流水线的效率是指流水线的设备利用率。在时空图上，流水线的效率定义为n项任务占用的时空区与k个流水段总的时空区之比。因此，流水线的效率包含有时间和空间两方面的因素。实际上，n项任务占用的时空区就是顺序执行n项任务所使用的总时间T0。而用一条k段流水线完成n项任务的总时空区为kTk，其中Tk是流水线完成n项任务所使用的总时间。则计算流水线效率的一般公式为：

http://www.educity.cn/article_images/2014-01-15/9ba3dbe6-00e9-4e97-85bb-4bf85da10c47.jpg
因此，当时钟周期t不变时，流水线的效率与吞吐率是成正比的。也就是说，为了提高流水线的效率而采取的措施，同时也提高了流水线的吞吐率。
同样，比较计算机效率的公式和计算加速比的公式，可以得到：

http://www.educity.cn/article_images/2014-01-15/f2c4cca8-61ea-4824-84ca-36fdd300ab20.jpg
这个公式说明，流水线的效率是实际加速比S与它的最大加速比k之比。只有当流水线的效率达到其最大值，即E＝1时，才能使实际加速比达到最大，即S＝k。
如果流水线的各段执行时间不相等，则根据效率和加速比的关系的公式，可以得出连续执行n项任务时的流水线效率为：

http://www.educity.cn/article_images/2014-01-15/1c554cd7-f366-4d11-9fb4-4ff978b89d26.jpg
在这种情况下，流水线中除了瓶颈段之外，其他各段都有空闲时间，这些段的效率没有得到充分发挥。因此，整个流水线的效率E也比较低。
4. 流水线最佳段数的选择
从上面的分析中可以清楚地看到，增加流水线的段数，流水线的吞吐率和加速比都能提高。但是，因为在每个段的输出端都必须设置一个锁存器，当流水线的段数增多时，锁存器的总延迟时间也将增加。另外，增加锁存器的数量，必然要增加流水线的价格。所以，在设计流水线时，要综合考虑各方面的因素，根据最佳性能/价格比来选择流水线的最佳段数。
可以证明，流水线的最佳段数与流水线的延迟时间和流水线价格的平方根成正比，而与锁存器的延迟时间和锁存器价格的平方根成反比。目前，一般处理机中的流水线段数在2～10段之间。一般把8段以上的流水线称为超流水线，采用超流水线的处理机称为超流水线处理机。
5. 多条流水线的情况
在本节的介绍中，都是以单条线性流水线为例的。如果系统中同时存在多条流水线，则需要进行变通处理。例如，假设指令由取指、分析、执行3个子部件完成，并且每个子部件的时间均为t。若采用常规标量单流水线处理机（即该处理机的度为1），连续执行12条指令，根据前面的介绍，则共需(12+3-1)t=14t。若采用度为4的超标量流水线处理机，连续执行上述12条指令，则因为同时运行4条流水线，平均每条流水线只需执行3条指令，因此只需(3+3-1)t=5t。
6.5.3 局部相关与全局相关
开始学习
6.5.3 局部相关与全局相关
流水线的关键之处在于重叠执行。为了得到高的性能，流水线应该满负荷工作，即各段都要同时并行地工作。但是，在实际情况中，流水线的各段可能会相互影响，阻塞流水线，使其性能下降。
按照对程序执行过程可能造成影响的大小来划分，可以分为局部相关和全局相关。局部相关主要是指程序中出现数据相关，由于发生这类数据相关的指令之间大多间隔不远，一般不会超出过程（基本块）之外，故称为局部相关；全局相关是指转移指令或中断处理，即程序流程相关。显然，局部相关对程序执行过程的影响比较小，它仅影响到相关指令前后的一条或几条指令的执行，而全局相关造成的影响比局部相关要大得多，它影响到整个程序的执行。
1. 共享资源访问的冲突
共享资源访问的冲突是指后一条指令需要使用的数据，与前一条指令发生的冲突，或者相邻的指令使用了相同的寄存器。为了避免冲突，就需要把相互有关的指令进行阻塞，这样就会引起流水线效率的下降。一般来说，指令流水线级数越多，越容易导致这些问题。
上述问题就属于局部相关。局部相关处理由于流水线同时解释多条指令，这些指令可能有对同一主存单元或同一寄存器的“先写后读”的要求，这时就出现了相关，这种相关包括指令相关、访存操作数相关，以及通用寄存器组相关等。解决局部相关的方法主要有两种，分别是后推法和定向技术。
后推法是指遇到数据相关时，就暂停后继指令的运行，直至前面指令的结果已经生成为止。因此，要设置专门的检查数据相关的硬件，在每一次取数时，要把取数的地址与它前面正在流水线中尚未完成写数操作的所有写数指令的写数地址进行比较，如果有相同的，说明存在数据相关，就要推迟执行读数操作，等待相关的写数指令完成写数操作，把数真正送入主存（或通用寄存器）后才能取数。显然，这将使流水线有较长的停顿。
定向技术又称为旁路技术或相关专用通路技术，即在指令流水线中的读数和写数部分之间设置直接传送数据的通路，使在执行部件向主存（或通用寄存器）存数的同时，把数直接送到正在等待取这个数的指令部件中去。如果有几条指令都在等待，则可以同时送到这几条指令的相应位置上去，这样就可以加快速度。
2. 转移指令
无条件转移指令可以在指令译码时发现。在发现无条件转移指令后，指令缓冲寄存器中在无条件转移指令以后的一些预先取出的指令都要作废，然后按转移地址重新读取新的指令序列。在这种情况下，如果指令队列中没有足够的可供执行部件取用的指令，执行部件则可能要停止。由于有指令队列的缓冲，无条件转移不一定会引起执行部件的停止，因此，它对流水线效率的影响比较小。
条件转移指令虽然在指令流水线前端的指令译码时就能发现，但是确定转移方向的条件码却要在指令流水线的末端的执行部件中产生，才能决定是否实现转移。所以一旦在指令部件中发现条件转移指令，指令部件就要暂停，等待转移指令前面一条指令在执行部件中执行完毕，产生条件码以后，才能确定转移方向。这时，整个流水线已经为空，没有指令在里面流动。如果转移成功，执行新的指令流，就要从指令部件预取新指令开始。如果转移不成功，指令部件中原来预取的指令还有用，但也要从指令部件分析指令开始。等到指令流到执行部件时，执行部件已经停顿了相当一段时间。因此，条件转移指令对流水线效率影响较大。为了改进由于条件转移指令引起的流水线断流现象、减少条件转移指令造成的执行部件停顿时间，一般有以下几种措施，这些措施有的也可以几项并用。
（1）猜测法。指令部件发现条件转移指令后，在等待执行部件执行完指令队列中的指令并产生条件码后的这一段时间里，指令部件仍按固定的方向继续预取指令（按条件成立的方向预取，或者按条件不成立的方向预取）。等到条件码产生后，如果与猜测的转移方向一致，指令缓冲寄存器组中预先取出的指令可以用，流水线停顿的时间可以缩短。如果未猜对，则指令缓冲寄存器组中的指令和已做的工作全部作废，重新按另一个方向读取指令，然后开始分析，这时流水线损失的时间就较长。
（2）预取转移目标。在发现条件转移指令后，同时向两个分支方向（条件成立、条件不成立）预取指令，最后根据真正的方向取其中一个分支的指令继续运行。有些处理机还可以对原来分支内指令进行带条件执行（即译码、取数、运算，但不送结果），进一步提高转移指令执行效率。
（3）加快和提前形成条件码。有些指令的条件码并不一定要等执行完毕得到运算结果后才能形成。例如，对于乘法指令，其结果是正是负的条件码在相乘之前，就能根据两个操作数的符号位来判定。
（4）推迟转移。在编译一个程序时，编译程序自动地调整条件转移指令的位置，把条件转移指令从原来的位置向后移一条或若干条，而把与该条件转移指令无关的指令先运行。这样做可以改进流水线的效率，且不影响结果。
（5）加快短循环程序的处理。循环是一种特殊的条件转移，通常是按循环计数器内的内容是否为0来判断是否已达到应有的循环次数，决定是否需要“向后”转移。短循环程序是指循环段的指令数目少于（或等于）指令缓冲寄存器组中可存放的指令数时的循环程序段。如果在执行这种短循环时，能把整个短循环程序段放在指令缓冲寄存器组中，让指令部件停止预取新的指令，重复使用这段短循环程序，就可减少访问主存次序，提高处理机的效率。为做到这一点，在处理机中要设置相应的硬件。
3. 中断处理
当有中断请求时，流水线也会停止。流水线响应中断有两种方式，分别是精确断点法和不精确断点法。
（1）不精确断点法。当有中断请求时，不再允许还未进入流水线的后续指令再进入，但已在流水线的所有指令却可仍然流动到执行完毕，然后才转入中断处理程序。这种方法的优点是实现控制简单，但中断响应时间较长，程序执行的结果可能出错，而且程序员很难调试程序。
（2）精确断点法。当有中断请求时，立即转入中断处理程序。这种方法能够立即响应中断，缩短了中断响应时间，但是增加了处理机的硬件复杂度。因为需要采用很多后援寄存器，以保证流水线内各条指令的现场都能保存和恢复。
6.6 多处理机系统
流水线计算机通过多级流水的同时操作来获得高性能，但只能执行单个程序。而且，由于器件本身的限制，任何处理机的速度都是有限的。要想超过这个限制，就必须使用多个处理机并行执行。多处理机结构由若干个独立的处理机组成，每个处理机能够独立执行自己的程序。多处理机结构属于MIMD结构，处理机之间按某种形式互连，从而实现程序之间的数据交换和同步。
6.6.0 内容介绍
开始学习
流水线计算机通过多级流水的同时操作来获得高性能，但只能执行单个程序。而且，由于器件本身的限制，任何处理机的速度都是有限的。要想超过这个限制，就必须使用多个处理机并行执行。多处理机结构由若干个独立的处理机组成，每个处理机能够独立执行自己的程序。多处理机结构属于MIMD结构，处理机之间按某种形式互连，从而实现程序之间的数据交换和同步。
6.6.1 流水线的性能分析
开始学习
6.5.2 流水线的性能分析
流水线技术与顺序执行指令相比，在执行时间上有了很大的提高。但是，就流水线本身而言，也存在性能的优劣问题。衡量流水线的性能指标主要有吞吐率、加速比和效率。另外，在流水线设计中，如何选择流水线的最佳段数，也是一个非常重要的问题。
1. 吞吐率
流水线的吞吐率（Though Put rate，TP）也称为平均吞吐率或实际吞吐率，是指在单位时间内流水线所完成的任务数量或输出的结果数量，其计算公式如下：

http://www.educity.cn/article_images/2014-01-15/e447f62a-f422-4967-a849-fb5dbf3300f7.jpg
其中，n为任务数，Tk为处理完成n项任务所用的时间。
根据图6-9可以推算出，在流水线各段的执行时间均相等（设为t），输入到流水线中的任务是连续的理想情况下，一条k段线性流水线能够在n+k-1个时钟周期内完成n项任务。可以从两个方面来分析流水线完成n项任务所需要的总时间。从流水线的输出端看，用k个时钟周期输出第一项任务，其余n-1个时钟周期，每个周期输出一项任务，即用n-1个时钟周期输出n-1项任务；从流水线的输入端看，用n个时钟周期向流水线输入n项任务，另外还要用k-1个时钟周期作为流水线的排空时间。所以，流水线完成n个连续任务需要的总时间为：
因此，实际吞吐率为：

http://www.educity.cn/article_images/2014-01-15/3441f29f-3304-48d4-8c07-cf8872b25508.jpg

http://www.educity.cn/article_images/2014-01-15/b3f5fc71-ac49-4a97-afa6-ae8f2c4a06be.jpg
因此，流水线的实际吞吐率要小于最大吞吐率。只有当时，才有。
如果流水线中各段的执行时间不完全相等，假设各段的执行时间分别为t1，t2，…，tk，则实际吞吐率为：

http://www.educity.cn/article_images/2014-01-15/00eed4c0-61a5-4d44-8be2-ac3545a9795b.jpg
也就是说，当流水线中各段的执行时间不完全相等时，吞吐率主要是由流水线中执行时间最长的那个功能段来决定的，这个功能段就成了整个流水线的瓶颈，其执行时间称为瓶颈时间。要解决这个问题，既可以把瓶颈段再细分，使瓶颈时间变小；也可以使多个瓶颈段并行工作，也就是重复设置多个瓶颈段。
2. 加速比
在流水线中，因为在同一时刻，有多项任务在重叠地执行，虽然完成一项任务的时间与单独执行该任务相近（甚至由于分段的缘故，可能更多一些），但是从整体上看，完成多项任务所需的时间则大大减少。完成同样一批任务，不使用流水线所用的时间与使用流水线所用的时间之比称为流水线的加速比（speedup ratio）。如果顺序执行所用的时间为T0，使用流水线的执行时间为Tk，则计算流水线加速比的基本公式如下：

http://www.educity.cn/article_images/2014-01-15/c0c9d267-155d-4bc5-a574-b2c8f0738da7.jpg
如果流水线各个流水段的执行时间都相等（设为t），则一条k段流水线完成n个连续任务所需要的时间为(k+n-1)t。如果不使用流水线，即顺序执行这n项任务，则所需要的时间为nkt。因此，各个流水段执行时间均相等的一条k段流水线完成n个连续任务时的实际加速比为：

http://www.educity.cn/article_images/2014-01-15/9150cf92-bed8-472d-ab91-a968b36f27dd.jpg
从上式可以看出，当时，在线性流水线的各段执行时间均相等的情况下，流水线的最大加速比等于流水线的段数。
当流水线的各个流水段的执行时间不相等时，一条k段线性流水线完成n个连续任务的实际加速比为：

http://www.educity.cn/article_images/2014-01-15/ccedecca-4415-402a-a3df-0ab9e686b472.jpg

3. 效率
流水线的效率是指流水线的设备利用率。在时空图上，流水线的效率定义为n项任务占用的时空区与k个流水段总的时空区之比。因此，流水线的效率包含有时间和空间两方面的因素。实际上，n项任务占用的时空区就是顺序执行n项任务所使用的总时间T0。而用一条k段流水线完成n项任务的总时空区为kTk，其中Tk是流水线完成n项任务所使用的总时间。则计算流水线效率的一般公式为：

http://www.educity.cn/article_images/2014-01-15/9ba3dbe6-00e9-4e97-85bb-4bf85da10c47.jpg
因此，当时钟周期t不变时，流水线的效率与吞吐率是成正比的。也就是说，为了提高流水线的效率而采取的措施，同时也提高了流水线的吞吐率。
同样，比较计算机效率的公式和计算加速比的公式，可以得到：

http://www.educity.cn/article_images/2014-01-15/f2c4cca8-61ea-4824-84ca-36fdd300ab20.jpg
这个公式说明，流水线的效率是实际加速比S与它的最大加速比k之比。只有当流水线的效率达到其最大值，即E＝1时，才能使实际加速比达到最大，即S＝k。
如果流水线的各段执行时间不相等，则根据效率和加速比的关系的公式，可以得出连续执行n项任务时的流水线效率为：

http://www.educity.cn/article_images/2014-01-15/1c554cd7-f366-4d11-9fb4-4ff978b89d26.jpg
在这种情况下，流水线中除了瓶颈段之外，其他各段都有空闲时间，这些段的效率没有得到充分发挥。因此，整个流水线的效率E也比较低。
4. 流水线最佳段数的选择
从上面的分析中可以清楚地看到，增加流水线的段数，流水线的吞吐率和加速比都能提高。但是，因为在每个段的输出端都必须设置一个锁存器，当流水线的段数增多时，锁存器的总延迟时间也将增加。另外，增加锁存器的数量，必然要增加流水线的价格。所以，在设计流水线时，要综合考虑各方面的因素，根据最佳性能/价格比来选择流水线的最佳段数。
可以证明，流水线的最佳段数与流水线的延迟时间和流水线价格的平方根成正比，而与锁存器的延迟时间和锁存器价格的平方根成反比。目前，一般处理机中的流水线段数在2～10段之间。一般把8段以上的流水线称为超流水线，采用超流水线的处理机称为超流水线处理机。
5. 多条流水线的情况
在本节的介绍中，都是以单条线性流水线为例的。如果系统中同时存在多条流水线，则需要进行变通处理。例如，假设指令由取指、分析、执行3个子部件完成，并且每个子部件的时间均为t。若采用常规标量单流水线处理机（即该处理机的度为1），连续执行12条指令，根据前面的介绍，则共需(12+3-1)t=14t。若采用度为4的超标量流水线处理机，连续执行上述12条指令，则因为同时运行4条流水线，平均每条流水线只需执行3条指令，因此只需(3+3-1)t=5t。
6.6.2 海量并行处理结构
开始学习
6.6.2 海量并行处理结构
MPP系统的定义随着时间推移在不断地变化。按照当前的标准，具有几百或几千台处理机的任何机器就是MPP。显然，随着计算机技术的快速发展，对并行度的要求会愈来愈高。
MPP系统最重要的特点是进行大规模并行处理。在MPP系统中，用的是VLSI（Very Large Scale Integrated circuites，超大规模集成电路）硅片、砷化镓（一种半导体材料，性能比硅更优良）技术、高密度组装和光技术，采用可扩展技术、共享虚拟存储技术、容许时延技术、多线程技术的系统结构。MPP采用分布存储方式，这种方式可以使系统容易扩展，但因为各处理机不能直接访问非本地存储器，只能使用消息机制来进行共享，这就使得编程困难，并且增加了通信开销。为了解决这个问题，专家们引入了虚拟共享存储器（Shared Virtuel Memory，SVM）或共享分布存储器（Distributed Shared Memory，DSM）技术。
SVM是在基于分布存储器的多处理机上，实现物理上分布但逻辑上共享的存储系统。其基本思想是，将物理上分散的各个处理机所拥有的LM，在逻辑上加以统一编址，形成一个统一的虚拟地址空间来实现存储器的共享。每个处理机可以访问全局存储器的任一位置，用户可以把它当成全局SM。这样，用户以前在紧耦合系统上编写的程序就可以不加修改地在SVM系统上运行，这给软件的移植带来了方便，同时解决了难以对复杂数据结构进行传递和难以进行进程迁程的问题。
显然，SVM系统可以兼具紧耦合系统和松耦合系统的优点。目前，实现SVM系统的途径主要有三种：
（1）硬件实现。将传统的cache技术扩展应用到松耦合系统中，这种途径需要在现有的松耦合系统上，增加专用部件以取得高效的实现。
（2）操作系统和库实现。通过虚拟存储管理机制取得共享和一致性，这种途径在现有松耦合系统上不增加任何专用部件就可以实现。
（3）编译实现。自动将共享访问转换成同步和一致原语。它要求用户显式控制全局数据，当传送大量数据时或试图进行迁移时极其复杂。
现有的SVM系统大多数采用前面两种途径。
6.6.3 对称多处理机结构
开始学习
6.6.3 对称多处理机结构
SMP也称为共享存储多处理机，它与MPP最大的差别在于存储系统。SMP有一个统一共享的SM，而MPP则是每个处理机都拥有自己的LM。
1. 共享存储模型
共享存储方式有三种模型，分别是均匀存储器存取（Uniform Memory Access，UMA）模型、非均匀存储器存取（Nonuniform Memory Access，NUMA）模型和只用高速缓存的存储器结构（Cache Only Memory Architecture，COMA）模型，这些模型的区别在于存储器和外设如何共享或分布。
UMA多处理机模型如图6-10所示。在图6-10中，物理存储器被所有处理机均匀共享，所有处理机对所有存储字具有相同的存取时间，每台处理机可以有私用高速缓存，外设也以一定形式共享。
NUMA多处理机模型如图6-12所示，其访问时间随存储字的位置不同而变化。其SM物理上是分布在所有处理机的LM上。所有LM的集合组成了全局地址空间，可被所有的处理机访问。处理机访问LM是比较快的，但访问属于另一台处理机的远程存储器则比较慢，因为通过互连网络会产生附加时延。

http://www.educity.cn/article_images/2014-01-15/f15924ec-3c51-4e4c-9a4b-ae92b5ab9b35.jpg
COMA模型如图6-13所示。COMA模型是NUMA机的一种特例，只是将NUMA中分布主存储器换成了高速缓存, 在每个处理机结点上没有存储器层次结构，全部高速缓冲存储器组成了全局地址空间。远程高速缓存访问则需要借助于分布高速缓存目录进行。
共享存储器系统拥有统一寻址空间，程序员不必参与数据分布和传输，这种实现方式虽然简单，但是阻碍了系统的扩展能力。于是，有专家提出了一种称为S2MP（Scalable Shared Memory Multi-Processing，可扩展共享存储多处理）的并行计算机体系结构。S2MP系统从性能和扩展能力两方面解决SMP系统所存在的问题，引进了复杂的存储子系统，通过硬件cache对系统的共享和私有数据都进行缓存，以达到高性能的目标。
2. S2MP的体系结构
S2MP是一种共享存储的体系结构，如图6-14所示。和MPP相比，它支持简单的编程模型，系统使用方便，是对SMP系统在支持更高扩展能力方面的发展。共享存储系统降低了通信的额外开销，因此，系统也可以运行细粒度的应用。

http://www.educity.cn/article_images/2014-01-15/e77b1861-d923-4f63-b9ad-1d308b75e551.jpg
从本质上来看，S2MP实际上是一种NUMA结构，每个结点由处理机和存储器两部分组成，存储器靠近处理机，而不是集中在某个地方，处理机可以访问LM获取数据。NUMA结构可以降低平均访存时延，并且随处理机数目的增加自动增加存储器带宽，也就是说，存储带宽是可扩展的。
6.6.4 互连网络
开始学习
6.6.4 互连网络
互连网络用来连接一个计算机系统中各处理部件（或处理机）、存储模块以及各种外设，在系统软件控制下，使各功能部件相互通信的硬件网络结构。目前，互连网络已经成为并行处理系统的核心组成部分，它对整个计算机系统的性能/价格比有着决定性的影响。
1. 互连函数
为了反映不同互连网络的连接特性，每种互连网络可用一组函数来描述。如果将互连网络的n个输入端和输出端分别用整数0，1，…，n-1来表示，则互连函数表示相互连接的输出端和输入端之间的一一对应关系。基本的互连函数主要有以下几种：
（1）恒等置换：相同编号的输入端与输出端一一对应互连，其表达式如下：

http://www.educity.cn/article_images/2014-01-15/8e322f52-7565-4c20-9e81-73eb85aa059f.jpg
例如，编号为0，1，2，…，15的16个处理机，每个处理机均可用四位二进制编码来表示。如果采用单级互连网络连接，当互连函数为Cube3（k=3时的方体置换）时，则11号处理机连接到3号处理机上。因为11号处理机的编码为1011，它只能与编码为0011号处理机相连接；如果采用Shuffle互联函数，则11号处理机的编码经过变换后为0111，即为7号。也就是说，11号处理机与7号处理机连接。
2. 互连方式
在多处理机系统中，衡量互连网络性能好坏的主要因素是它的连接度、延时性、带宽、可靠性和成本，对于这些性能的度量，可以结合计算机网络和图论的知识来进行。例如，连接度的概念与图论中的度的概念是一致的，是指一个结点与其他结点的连接程度。如果一个结点直接连接的其他结点数越多，连接度就越高，表明连接性越好；延时性是指从一个结点传送信息到任何另一个结点所需的时间，通常可用结点间最大距离来表示。在设计互连网络时，应综合考虑通信工作方式、控制策略、交换方式和网络拓扑等因素，这也是与计算机网络的设计是基本一致的。有关计算机网络设计方面的知识，请阅读4.5.2节。
在最典型和最常见的互连网络中，多处理机互连的方式主要有以下五种：
（1）总线。总线方式是最简单的方法，通过共享总线把各个处理机连接起来，再配备各处理机都可访问的全局存储器。每个处理机都能访问公共总线。总线方式适用于多处理机个数少于100的系统，这主要是受到了组装技术的限制，而数据的传输速率受到总线带宽和速度的限制。对于总线的一种改进方式是环形互连，这是一种类似于令牌环网的系统结构，各处理机之间点点连接，形成一个环形。
（2）交叉开关。总线互连最简单，但争用最严重。交叉开关可以把争用现象降到最低程度，但连接复杂度最高。开关网络为处理机和共享存储器之间提供了一个动态互连通路。如果中间的开关网同时连接到达一定的数量后，不能再容纳新的连接，这种网络是阻塞网络。交叉开关提供了非阻塞网络的连接，它使用一组开关阵列将处理机和共享存储器连接。每个交叉的结点都是开关，可以连接或断开。这是一种以空间矩阵换时间的方式，需要使用大量的连线和交叉点开关。因此，只有处理机和共享存储器数目较少时，才可能使用这种方式，而且一旦建成，很难扩充。
（3）开关枢纽。和交叉开关不同的是，开关枢纽不使用交叉矩阵这样庞大的硬件结构。它由仲裁单元和开关单元组成，仲裁单元完成冲突处理，开关单元完成连接。其方式和通信中的交换机有些相似。
（4）多端口存储器。这是将交叉点仲裁逻辑移动到存储器去控制的方法。每个存储器模块有多个存取端口，由存储器负责分解多个处理机的冲突请求。这增加了存储器模式的成本，和交叉开关类似，多端口存储器也需要大量的连线。而且，存储器端口数目是固定的，一旦开始生产之后就无法增加。
（5）多级互连网络。MIMD和SIMD计算机都用多级网络，各种多级网络的区别就在于所用开关模块、控制方式和级间连接模式的不同。多级网络是总线和交叉开关两者折中，主要优点在于采用模块结构，因而扩展性好，然而时延随网络级数而上升。另外，由于增加了连线和开关的复杂性，价格也是一种限制因素。
在实际应用中，多处理机系统究竟采用哪种互连结构，主要取决于系统的最大通信量。反过来，系统的最大通信量又受到互连结构的限制。
6.7 系统性能设计
用户对系统性能的需求具有多样性和广泛性，不同的系统有不同的性能要求。性能问题应该从系统设计时期就开始考虑，并延续到系统的生命周期终止之时。因此，系统分析师在进行系统设计时，就需要考虑系统的性能设计。性能设计主要包含两方面的内容：一是作为未来系统应用和发展的参考与规划；另一个则是对现有系统进行性能上的调整，以达到最优化。
在信息系统项目中，用户会提出各种各样的性能需求，甚至有些需求之间是互相矛盾的。例如，可靠性和效率。在同样的成本前提下，可靠性越高的系统，其效率往往就越低。因此，系统设计其实就是一种权衡技术，需要系统分析师在用户的各种功能需求和性能需求之间进行权衡和决策。

6.7.0 内容介绍
已学习
用户对系统性能的需求具有多样性和广泛性，不同的系统有不同的性能要求。性能问题应该从系统设计时期就开始考虑，并延续到系统的生命周期终止之时。因此，系统分析师在进行系统设计时，就需要考虑系统的性能设计。性能设计主要包含两方面的内容：一是作为未来系统应用和发展的参考与规划；另一个则是对现有系统进行性能上的调整，以达到最优化。
在信息系统项目中，用户会提出各种各样的性能需求，甚至有些需求之间是互相矛盾的。例如，可靠性和效率。在同样的成本前提下，可靠性越高的系统，其效率往往就越低。因此，系统设计其实就是一种权衡技术，需要系统分析师在用户的各种功能需求和性能需求之间进行权衡和决策。

6.7.1 系统性能指标
已学习
6.7.1 系统性能指标
计算机系统的性能一般包括两个大的方面。一个方面是它的可靠性或可用性，也就是计算机系统能正常工作的时间，其指标可以是能够持续工作的时间长度（例如，平均无故障时间），也可以是在一段时间内，能正常工作的时间所占的百分比；另一个方面是它的处理能力或效率，这又可分为三类指标，第一类指标是吞吐率（例如，系统在单位时间内能处理正常作业的个数），第二类指标是响应时间（从系统得到输入到给出输出之间的时间），第三类指标是资源利用率，即在给定的时间区间中，各种部件（包括硬设备和软件系统）被使用的时间与整个时间之比。当然，不同的系统对性能指标的描述有所不同，例如，计算机网络系统常用的性能评估指标为信道传输速率、信道吞吐量和容量、信道利用率、传输延迟、响应时间和负载能力等。
1. 字长和数据通路宽度
机器字长是指参与运算的数的基本位数，它是由加法器、寄存器的位数决定的。机器字长一般等于CPU内部寄存器的大小（例如，32位、64位等）。字长标志着运算精度，字长越长，计算的精度就越高。
数据总线一次所能并行传送信息的位数，称为数据通路宽度。它影响到信息的传送能力，从而影响计算机的有效处理速度。这里所说的数据通路宽度是指外部数据总线的宽度，它与CPU内部的数据总线宽度（内部寄存器的大小）有可能不同。有些CPU的内、外数据总线宽度相等，另外一些则不相等。
2. 主存容量和存取速度
计算机系统的主存储器所能存储的全部信息量称为主存容量。通常，以字节数来表示存储容量，这样的计算机称为字节编址的计算机。也有一些计算机是以字为单位进行编址的，它们用字数乘以字长来表示存储容量。显然，计算机的主存容量越大，存放的信息就越多，处理问题的能力就越强。主存容量的增大，对于运行大型软件来说是十分必要的，尤其是对于大型的数据库应用。内存数据库的出现更是将主存的使用发挥到了极致。
主存的存取速度通常由存取时间、存取周期和主存带宽等参数来描述。
存取时间Ta又称为访问时间或读写时间，它是指从启动一次存储器操作到完成该操作所经历的时间。例如，读出时间是指从CPU向主存发出有效地址和读命令开始，直到将被选单元的内容读出为止所用的时间；写入时间是指从CPU向主存发出有效地址和写命令开始，直到信息写入被选中单元为止所用的时间。显然，Ta越小，存取速度越快。
存取周期Tm又称为读写周期或访存周期，是指主存进行一次完整的读写操作所需的全部时间，即连续两次访问存储器操作之间所需要的最短时间。显然，在一般情况下，Tm>Ta。这是因为对于任何一种主存储器，在读写操作之后，总要有一段恢复内部状态的复原时间。与存取周期密切相关的指标是主存带宽，它又称为数据传输率，表示每秒从主存进出信息的最大数量，单位为字节每秒（B/s）或位每秒（bps）。
3．运算速度
计算机的运算速度与许多因素有关，例如，机器的主频、执行什么样的操作，以及主存的速度等。
（1）主频和CPU时钟周期。主频又称为时钟频率，在很大程度上决定了计算机的运算速度。CPU的工作节拍是由主时钟来控制的，主时钟不断产生固定频率的时钟脉冲，这个主时钟的频率就是CPU的主频。主频越高，意味着CPU的工作节拍就越快，运算速度也就越快。一般用在一秒钟内处理器所能发出的脉冲数量来表示主频。随着半导体工艺的不断提升，时钟频率的计量单位已由原来的MHz逐步推进到以GHz来进行标识。主频的倒数就是CPU时钟周期，这是CPU中最小的时间元素。每个操作至少需要一个时钟周期。
（2）CPI。由于不同指令的功能不同，造成指令执行时间不同，所以，CPI（Cycles Per Instruction，每条指令执行所用的时钟周期数）是一个平均值。在现代高性能计算机中，由于采用各种并行技术，使指令执行高度并行化，常常是一个系统时钟周期内可以处理若干条指令。因此，CPI经常用IPC（Instructions Per Cycle，每个时钟周期执行的指令条数）表示。显然，IPC等于CPI的倒数。
（3）MIPS和MFLOPS。对于一个给定的程序，MIPS（Million Instructions Per Second，每秒百万条指令）定义为
MIPS = 指令条数/(执行时间×106) = 主频/CPI = 主频×IPC
MFLOPS（Million FLoating-point Operations Per Second，每秒百万次浮点运算）定义为
MFLOPS = 浮点操作次数/(执行时间×106)
4. 吞吐量与吞吐率
吞吐量是指在给定的时间内，系统所能处理（输入、加工、输出）的任务的数量，吞吐率是指系统在单位时间内所能处理的任务的数量。在不造成混淆的情况下，一般把吞吐量等价于吞吐率。要注意的是，在不同的系统中，任务的含义不同，吞吐率的含义也就有些区别。例如，计算机硬件系统的吞吐率是指流入、处理和流出系统的信息的速率，它主要取决于主存的存取周期；计算机网络系统的吞吐率是指每秒能处理的数据位数或分组的数目，它依赖于网络的带宽和交换部件的速度。
5. 响应时间与完成时间
响应时间（Response Time，RT）是指系统对请求作出响应的时间，是用户提交请求之后，输出开始之前的时间；完成时间（Turn Around Time，TAT）是指某一事件从发生到结束的这段时间，或者说是从用户提交请求到得到输出结果的时间间隔。根据以上定义可知，TAT=RT+输出时间。但是，在实际应用中，一般不区分这种差别而把它们统称为响应时间。因为用户在得到输出结果之前，难以确定其请求是否得到了系统的响应。
在计算机系统的发展中，早在1968年，米勒（Miller）即给出了3个经典的有关响应时间的建议：
（1）0.1秒：用户感觉不到任何延迟。
（2）1.0秒：用户愿意接受的系统立即响应的时间极限。即当执行一项任务的有效反馈时间在0.1～1秒之内时，用户是愿意接受的。超过此数据值，则意味着用户会感觉到有延迟，但只要不超过10秒，用户还是可以接受的。
（3）10秒：用户保持注意力执行本次任务的极限，如果超过此数值时仍然得不到有效的反馈，客户会在等待计算机完成当前操作时转向其他的任务。
若一个给定系统持续地收到用户提交的任务请求，则系统的响应时间将对吞吐量造成一定的影响。每个任务的响应时间越短，整个系统在单位时间内完成的任务量就越多，即吞吐量就越大。反之亦然。
6. 兼容性
兼容性是指一个系统的硬件或软件与另一个系统或多种操作系统的硬件或软件的兼容能力，是指系统间某些方面具有的并存性，即两个系统之间存在一定程度的通用性。兼容是一个广泛的概念，它包括数据和文件的兼容、程序和语言级的兼容、系统程序的兼容、设备的兼容，以及向上兼容和向后兼容等。
除了上述性能指标之外，还有其他一些性能指标，例如，综合性能指标（利用率等）、定性指标（保密性、安全性、可扩充性等）、功能特性指标（文字处理能力、联机事务处理能力、I/O总线特性、网络特性等）等。在众多的性能指标中，就某个具体的系统而言，系统分析师要能够区分出哪个（哪些）指标是最关键的。在系统设计过程中，要优先保证关键指标的实现。
Traceback (most recent call last):
  File "/Users/xiang/xiang/study/Python/selenium_python/xisai_book/xisai_book_main.py", line 26, in <module>
    dcEl = dc.find_element(By.CSS_SELECTOR, 'a')
  File "/Users/xiang/xiang/study/Python/selenium_python/venv/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py", line 735, in find_element
    return self._execute(Command.FIND_CHILD_ELEMENT,
  File "/Users/xiang/xiang/study/Python/selenium_python/venv/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py", line 710, in _execute
    return self._parent.execute(command, params)
  File "/Users/xiang/xiang/study/Python/selenium_python/venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py", line 423, in execute
    response = self.command_executor.execute(driver_command, params)
  File "/Users/xiang/xiang/study/Python/selenium_python/venv/lib/python3.9/site-packages/selenium/webdriver/remote/remote_connection.py", line 316, in execute
    return self._request(command_info[0], url, body=data)
  File "/Users/xiang/xiang/study/Python/selenium_python/venv/lib/python3.9/site-packages/selenium/webdriver/remote/remote_connection.py", line 338, in _request
    resp = self._conn.request(method, url, body=body, headers=headers)
  File "/Users/xiang/xiang/study/Python/selenium_python/venv/lib/python3.9/site-packages/urllib3/request.py", line 78, in request
    return self.request_encode_body(
  File "/Users/xiang/xiang/study/Python/selenium_python/venv/lib/python3.9/site-packages/urllib3/request.py", line 170, in request_encode_body
    return self.urlopen(method, url, **extra_kw)
  File "/Users/xiang/xiang/study/Python/selenium_python/venv/lib/python3.9/site-packages/urllib3/poolmanager.py", line 376, in urlopen
    response = conn.urlopen(method, u.request_uri, **kw)
  File "/Users/xiang/xiang/study/Python/selenium_python/venv/lib/python3.9/site-packages/urllib3/connectionpool.py", line 703, in urlopen
    httplib_response = self._make_request(
  File "/Users/xiang/xiang/study/Python/selenium_python/venv/lib/python3.9/site-packages/urllib3/connectionpool.py", line 449, in _make_request
    six.raise_from(e, None)
  File "<string>", line 3, in raise_from
  File "/Users/xiang/xiang/study/Python/selenium_python/venv/lib/python3.9/site-packages/urllib3/connectionpool.py", line 444, in _make_request
    httplib_response = conn.getresponse()
  File "/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/http/client.py", line 1349, in getresponse
    response.begin()
  File "/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/http/client.py", line 316, in begin
    version, status, reason = self._read_status()
  File "/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/http/client.py", line 277, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/socket.py", line 704, in readinto
    return self._sock.recv_into(b)
KeyboardInterrupt

Process finished with exit code 130 (interrupted by signal 2: SIGINT)
